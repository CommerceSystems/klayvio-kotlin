/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.DeviceMetadata;
import io.swagger.client.model.PushTokenCreateQueryResourceObjectAttributesProfile;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * PushTokenCreateQueryResourceObjectAttributes
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-18T16:09:09.130713678Z[GMT]")

public class PushTokenCreateQueryResourceObjectAttributes {
  @SerializedName("token")
  private String token = null;

  /**
   * The platform on which the push token was created.
   */
  @JsonAdapter(PlatformEnum.Adapter.class)
  public enum PlatformEnum {
    @SerializedName("android")
    ANDROID("android"),
    @SerializedName("ios")
    IOS("ios");

    private String value;

    PlatformEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static PlatformEnum fromValue(String input) {
      for (PlatformEnum b : PlatformEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<PlatformEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PlatformEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public PlatformEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return PlatformEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("platform")
  private PlatformEnum platform = null;

  /**
   * This is the enablement status for the individual push token.
   */
  @JsonAdapter(EnablementStatusEnum.Adapter.class)
  public enum EnablementStatusEnum {
    @SerializedName("AUTHORIZED")
    AUTHORIZED("AUTHORIZED"),
    @SerializedName("DENIED")
    DENIED("DENIED"),
    @SerializedName("NOT_DETERMINED")
    NOT_DETERMINED("NOT_DETERMINED"),
    @SerializedName("PROVISIONAL")
    PROVISIONAL("PROVISIONAL"),
    @SerializedName("UNAUTHORIZED")
    UNAUTHORIZED("UNAUTHORIZED");

    private String value;

    EnablementStatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static EnablementStatusEnum fromValue(String input) {
      for (EnablementStatusEnum b : EnablementStatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<EnablementStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EnablementStatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public EnablementStatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return EnablementStatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("enablement_status")
  private EnablementStatusEnum enablementStatus = EnablementStatusEnum.AUTHORIZED;

  /**
   * The vendor of the push token.
   */
  @JsonAdapter(VendorEnum.Adapter.class)
  public enum VendorEnum {
    @SerializedName("apns")
    APNS("apns"),
    @SerializedName("fcm")
    FCM("fcm");

    private String value;

    VendorEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static VendorEnum fromValue(String input) {
      for (VendorEnum b : VendorEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<VendorEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VendorEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public VendorEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return VendorEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("vendor")
  private VendorEnum vendor = null;

  /**
   * The background state of the push token.
   */
  @JsonAdapter(BackgroundEnum.Adapter.class)
  public enum BackgroundEnum {
    @SerializedName("AVAILABLE")
    AVAILABLE("AVAILABLE"),
    @SerializedName("DENIED")
    DENIED("DENIED"),
    @SerializedName("RESTRICTED")
    RESTRICTED("RESTRICTED");

    private String value;

    BackgroundEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static BackgroundEnum fromValue(String input) {
      for (BackgroundEnum b : BackgroundEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<BackgroundEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BackgroundEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public BackgroundEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return BackgroundEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("background")
  private BackgroundEnum background = BackgroundEnum.AVAILABLE;

  @SerializedName("device_metadata")
  private DeviceMetadata deviceMetadata = null;

  @SerializedName("profile")
  private PushTokenCreateQueryResourceObjectAttributesProfile profile = null;

  public PushTokenCreateQueryResourceObjectAttributes token(String token) {
    this.token = token;
    return this;
  }

   /**
   * A push token from APNS or FCM.
   * @return token
  **/
  @Schema(example = "1234567890", required = true, description = "A push token from APNS or FCM.")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public PushTokenCreateQueryResourceObjectAttributes platform(PlatformEnum platform) {
    this.platform = platform;
    return this;
  }

   /**
   * The platform on which the push token was created.
   * @return platform
  **/
  @Schema(required = true, description = "The platform on which the push token was created.")
  public PlatformEnum getPlatform() {
    return platform;
  }

  public void setPlatform(PlatformEnum platform) {
    this.platform = platform;
  }

  public PushTokenCreateQueryResourceObjectAttributes enablementStatus(EnablementStatusEnum enablementStatus) {
    this.enablementStatus = enablementStatus;
    return this;
  }

   /**
   * This is the enablement status for the individual push token.
   * @return enablementStatus
  **/
  @Schema(example = "AUTHORIZED", description = "This is the enablement status for the individual push token.")
  public EnablementStatusEnum getEnablementStatus() {
    return enablementStatus;
  }

  public void setEnablementStatus(EnablementStatusEnum enablementStatus) {
    this.enablementStatus = enablementStatus;
  }

  public PushTokenCreateQueryResourceObjectAttributes vendor(VendorEnum vendor) {
    this.vendor = vendor;
    return this;
  }

   /**
   * The vendor of the push token.
   * @return vendor
  **/
  @Schema(example = "APNs", required = true, description = "The vendor of the push token.")
  public VendorEnum getVendor() {
    return vendor;
  }

  public void setVendor(VendorEnum vendor) {
    this.vendor = vendor;
  }

  public PushTokenCreateQueryResourceObjectAttributes background(BackgroundEnum background) {
    this.background = background;
    return this;
  }

   /**
   * The background state of the push token.
   * @return background
  **/
  @Schema(example = "AVAILABLE", description = "The background state of the push token.")
  public BackgroundEnum getBackground() {
    return background;
  }

  public void setBackground(BackgroundEnum background) {
    this.background = background;
  }

  public PushTokenCreateQueryResourceObjectAttributes deviceMetadata(DeviceMetadata deviceMetadata) {
    this.deviceMetadata = deviceMetadata;
    return this;
  }

   /**
   * Get deviceMetadata
   * @return deviceMetadata
  **/
  @Schema(description = "")
  public DeviceMetadata getDeviceMetadata() {
    return deviceMetadata;
  }

  public void setDeviceMetadata(DeviceMetadata deviceMetadata) {
    this.deviceMetadata = deviceMetadata;
  }

  public PushTokenCreateQueryResourceObjectAttributes profile(PushTokenCreateQueryResourceObjectAttributesProfile profile) {
    this.profile = profile;
    return this;
  }

   /**
   * Get profile
   * @return profile
  **/
  @Schema(required = true, description = "")
  public PushTokenCreateQueryResourceObjectAttributesProfile getProfile() {
    return profile;
  }

  public void setProfile(PushTokenCreateQueryResourceObjectAttributesProfile profile) {
    this.profile = profile;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PushTokenCreateQueryResourceObjectAttributes pushTokenCreateQueryResourceObjectAttributes = (PushTokenCreateQueryResourceObjectAttributes) o;
    return Objects.equals(this.token, pushTokenCreateQueryResourceObjectAttributes.token) &&
        Objects.equals(this.platform, pushTokenCreateQueryResourceObjectAttributes.platform) &&
        Objects.equals(this.enablementStatus, pushTokenCreateQueryResourceObjectAttributes.enablementStatus) &&
        Objects.equals(this.vendor, pushTokenCreateQueryResourceObjectAttributes.vendor) &&
        Objects.equals(this.background, pushTokenCreateQueryResourceObjectAttributes.background) &&
        Objects.equals(this.deviceMetadata, pushTokenCreateQueryResourceObjectAttributes.deviceMetadata) &&
        Objects.equals(this.profile, pushTokenCreateQueryResourceObjectAttributes.profile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(token, platform, enablementStatus, vendor, background, deviceMetadata, profile);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PushTokenCreateQueryResourceObjectAttributes {\n");
    
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    enablementStatus: ").append(toIndentedString(enablementStatus)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("    background: ").append(toIndentedString(background)).append("\n");
    sb.append("    deviceMetadata: ").append(toIndentedString(deviceMetadata)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

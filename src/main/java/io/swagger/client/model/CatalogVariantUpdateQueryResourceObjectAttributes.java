/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * CatalogVariantUpdateQueryResourceObjectAttributes
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-18T16:09:09.130713678Z[GMT]")

public class CatalogVariantUpdateQueryResourceObjectAttributes {
  @SerializedName("title")
  private String title = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("sku")
  private String sku = null;

  /**
   * This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values: &#x60;1&#x60;: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock. &#x60;0&#x60; or &#x60;2&#x60;: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.
   */
  @JsonAdapter(InventoryPolicyEnum.Adapter.class)
  public enum InventoryPolicyEnum {
    @SerializedName("0")
    NUMBER_0(0),
    @SerializedName("1")
    NUMBER_1(1),
    @SerializedName("2")
    NUMBER_2(2);

    private Integer value;

    InventoryPolicyEnum(Integer value) {
      this.value = value;
    }
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static InventoryPolicyEnum fromValue(Integer input) {
      for (InventoryPolicyEnum b : InventoryPolicyEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<InventoryPolicyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InventoryPolicyEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public InventoryPolicyEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextInt();
        return InventoryPolicyEnum.fromValue((Integer)(value));
      }
    }
  }  @SerializedName("inventory_policy")
  private InventoryPolicyEnum inventoryPolicy = null;

  @SerializedName("inventory_quantity")
  private BigDecimal inventoryQuantity = null;

  @SerializedName("price")
  private BigDecimal price = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("image_full_url")
  private String imageFullUrl = null;

  @SerializedName("image_thumbnail_url")
  private String imageThumbnailUrl = null;

  @SerializedName("images")
  private List<String> images = null;

  @SerializedName("custom_metadata")
  private Object customMetadata = null;

  @SerializedName("published")
  private Boolean published = null;

  public CatalogVariantUpdateQueryResourceObjectAttributes title(String title) {
    this.title = title;
    return this;
  }

   /**
   * The title of the catalog item variant.
   * @return title
  **/
  @Schema(example = "Ocean Blue Shirt (Sample) Variant Medium", description = "The title of the catalog item variant.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public CatalogVariantUpdateQueryResourceObjectAttributes description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A description of the catalog item variant.
   * @return description
  **/
  @Schema(example = "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.", description = "A description of the catalog item variant.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CatalogVariantUpdateQueryResourceObjectAttributes sku(String sku) {
    this.sku = sku;
    return this;
  }

   /**
   * The SKU of the catalog item variant.
   * @return sku
  **/
  @Schema(example = "OBS-MD", description = "The SKU of the catalog item variant.")
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }

  public CatalogVariantUpdateQueryResourceObjectAttributes inventoryPolicy(InventoryPolicyEnum inventoryPolicy) {
    this.inventoryPolicy = inventoryPolicy;
    return this;
  }

   /**
   * This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values: &#x60;1&#x60;: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock. &#x60;0&#x60; or &#x60;2&#x60;: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.
   * @return inventoryPolicy
  **/
  @Schema(example = "2", description = "This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values: `1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock. `0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.")
  public InventoryPolicyEnum getInventoryPolicy() {
    return inventoryPolicy;
  }

  public void setInventoryPolicy(InventoryPolicyEnum inventoryPolicy) {
    this.inventoryPolicy = inventoryPolicy;
  }

  public CatalogVariantUpdateQueryResourceObjectAttributes inventoryQuantity(BigDecimal inventoryQuantity) {
    this.inventoryQuantity = inventoryQuantity;
    return this;
  }

   /**
   * The quantity of the catalog item variant currently in stock.
   * @return inventoryQuantity
  **/
  @Schema(example = "25", description = "The quantity of the catalog item variant currently in stock.")
  public BigDecimal getInventoryQuantity() {
    return inventoryQuantity;
  }

  public void setInventoryQuantity(BigDecimal inventoryQuantity) {
    this.inventoryQuantity = inventoryQuantity;
  }

  public CatalogVariantUpdateQueryResourceObjectAttributes price(BigDecimal price) {
    this.price = price;
    return this;
  }

   /**
   * This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the &#x60;price&#x60; on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).
   * @return price
  **/
  @Schema(example = "42", description = "This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).")
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }

  public CatalogVariantUpdateQueryResourceObjectAttributes url(String url) {
    this.url = url;
    return this;
  }

   /**
   * URL pointing to the location of the catalog item variant on your website.
   * @return url
  **/
  @Schema(example = "https://via.placeholder.com/150", description = "URL pointing to the location of the catalog item variant on your website.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public CatalogVariantUpdateQueryResourceObjectAttributes imageFullUrl(String imageFullUrl) {
    this.imageFullUrl = imageFullUrl;
    return this;
  }

   /**
   * URL pointing to the location of a full image of the catalog item variant.
   * @return imageFullUrl
  **/
  @Schema(example = "https://via.placeholder.com/300", description = "URL pointing to the location of a full image of the catalog item variant.")
  public String getImageFullUrl() {
    return imageFullUrl;
  }

  public void setImageFullUrl(String imageFullUrl) {
    this.imageFullUrl = imageFullUrl;
  }

  public CatalogVariantUpdateQueryResourceObjectAttributes imageThumbnailUrl(String imageThumbnailUrl) {
    this.imageThumbnailUrl = imageThumbnailUrl;
    return this;
  }

   /**
   * URL pointing to the location of an image thumbnail of the catalog item variant.
   * @return imageThumbnailUrl
  **/
  @Schema(example = "https://via.placeholder.com/150", description = "URL pointing to the location of an image thumbnail of the catalog item variant.")
  public String getImageThumbnailUrl() {
    return imageThumbnailUrl;
  }

  public void setImageThumbnailUrl(String imageThumbnailUrl) {
    this.imageThumbnailUrl = imageThumbnailUrl;
  }

  public CatalogVariantUpdateQueryResourceObjectAttributes images(List<String> images) {
    this.images = images;
    return this;
  }

  public CatalogVariantUpdateQueryResourceObjectAttributes addImagesItem(String imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<String>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * List of URLs pointing to the locations of images of the catalog item variant.
   * @return images
  **/
  @Schema(example = "[\"https://via.placeholder.com/150\"]", description = "List of URLs pointing to the locations of images of the catalog item variant.")
  public List<String> getImages() {
    return images;
  }

  public void setImages(List<String> images) {
    this.images = images;
  }

  public CatalogVariantUpdateQueryResourceObjectAttributes customMetadata(Object customMetadata) {
    this.customMetadata = customMetadata;
    return this;
  }

   /**
   * Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.
   * @return customMetadata
  **/
  @Schema(example = "{\"Top Pick\":true}", description = "Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.")
  public Object getCustomMetadata() {
    return customMetadata;
  }

  public void setCustomMetadata(Object customMetadata) {
    this.customMetadata = customMetadata;
  }

  public CatalogVariantUpdateQueryResourceObjectAttributes published(Boolean published) {
    this.published = published;
    return this;
  }

   /**
   * Boolean value indicating whether the catalog item variant is published.
   * @return published
  **/
  @Schema(example = "true", description = "Boolean value indicating whether the catalog item variant is published.")
  public Boolean isPublished() {
    return published;
  }

  public void setPublished(Boolean published) {
    this.published = published;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogVariantUpdateQueryResourceObjectAttributes catalogVariantUpdateQueryResourceObjectAttributes = (CatalogVariantUpdateQueryResourceObjectAttributes) o;
    return Objects.equals(this.title, catalogVariantUpdateQueryResourceObjectAttributes.title) &&
        Objects.equals(this.description, catalogVariantUpdateQueryResourceObjectAttributes.description) &&
        Objects.equals(this.sku, catalogVariantUpdateQueryResourceObjectAttributes.sku) &&
        Objects.equals(this.inventoryPolicy, catalogVariantUpdateQueryResourceObjectAttributes.inventoryPolicy) &&
        Objects.equals(this.inventoryQuantity, catalogVariantUpdateQueryResourceObjectAttributes.inventoryQuantity) &&
        Objects.equals(this.price, catalogVariantUpdateQueryResourceObjectAttributes.price) &&
        Objects.equals(this.url, catalogVariantUpdateQueryResourceObjectAttributes.url) &&
        Objects.equals(this.imageFullUrl, catalogVariantUpdateQueryResourceObjectAttributes.imageFullUrl) &&
        Objects.equals(this.imageThumbnailUrl, catalogVariantUpdateQueryResourceObjectAttributes.imageThumbnailUrl) &&
        Objects.equals(this.images, catalogVariantUpdateQueryResourceObjectAttributes.images) &&
        Objects.equals(this.customMetadata, catalogVariantUpdateQueryResourceObjectAttributes.customMetadata) &&
        Objects.equals(this.published, catalogVariantUpdateQueryResourceObjectAttributes.published);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, description, sku, inventoryPolicy, inventoryQuantity, price, url, imageFullUrl, imageThumbnailUrl, images, customMetadata, published);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogVariantUpdateQueryResourceObjectAttributes {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    inventoryPolicy: ").append(toIndentedString(inventoryPolicy)).append("\n");
    sb.append("    inventoryQuantity: ").append(toIndentedString(inventoryQuantity)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    imageFullUrl: ").append(toIndentedString(imageFullUrl)).append("\n");
    sb.append("    imageThumbnailUrl: ").append(toIndentedString(imageThumbnailUrl)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    customMetadata: ").append(toIndentedString(customMetadata)).append("\n");
    sb.append("    published: ").append(toIndentedString(published)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

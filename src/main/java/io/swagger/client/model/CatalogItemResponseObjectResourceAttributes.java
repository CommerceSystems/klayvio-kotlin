/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * CatalogItemResponseObjectResourceAttributes
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-18T16:09:09.130713678Z[GMT]")

public class CatalogItemResponseObjectResourceAttributes {
  @SerializedName("external_id")
  private String externalId = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("price")
  private BigDecimal price = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("image_full_url")
  private String imageFullUrl = null;

  @SerializedName("image_thumbnail_url")
  private String imageThumbnailUrl = null;

  @SerializedName("images")
  private List<String> images = null;

  @SerializedName("custom_metadata")
  private Object customMetadata = null;

  @SerializedName("published")
  private Boolean published = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("updated")
  private OffsetDateTime updated = null;

  public CatalogItemResponseObjectResourceAttributes externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

   /**
   * The ID of the catalog item in an external system.
   * @return externalId
  **/
  @Schema(example = "SAMPLE-DATA-ITEM-1", description = "The ID of the catalog item in an external system.")
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }

  public CatalogItemResponseObjectResourceAttributes title(String title) {
    this.title = title;
    return this;
  }

   /**
   * The title of the catalog item.
   * @return title
  **/
  @Schema(example = "Ocean Blue Shirt (Sample)", description = "The title of the catalog item.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public CatalogItemResponseObjectResourceAttributes description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A description of the catalog item.
   * @return description
  **/
  @Schema(example = "Ocean blue cotton shirt with a narrow collar and buttons down the front and long sleeves. Comfortable fit and titled kaleidoscope patterns.", description = "A description of the catalog item.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CatalogItemResponseObjectResourceAttributes price(BigDecimal price) {
    this.price = price;
    return this;
  }

   /**
   * This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the &#x60;price&#x60; on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant).
   * @return price
  **/
  @Schema(example = "42", description = "This field can be used to set the price on the catalog item, which is what gets displayed for the item when included in emails. For most price-update use cases, you will also want to update the `price` on any child variants, using the [Update Catalog Variant Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_variant).")
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }

  public CatalogItemResponseObjectResourceAttributes url(String url) {
    this.url = url;
    return this;
  }

   /**
   * URL pointing to the location of the catalog item on your website.
   * @return url
  **/
  @Schema(example = "https://via.placeholder.com/150", description = "URL pointing to the location of the catalog item on your website.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public CatalogItemResponseObjectResourceAttributes imageFullUrl(String imageFullUrl) {
    this.imageFullUrl = imageFullUrl;
    return this;
  }

   /**
   * URL pointing to the location of a full image of the catalog item.
   * @return imageFullUrl
  **/
  @Schema(example = "https://via.placeholder.com/300", description = "URL pointing to the location of a full image of the catalog item.")
  public String getImageFullUrl() {
    return imageFullUrl;
  }

  public void setImageFullUrl(String imageFullUrl) {
    this.imageFullUrl = imageFullUrl;
  }

  public CatalogItemResponseObjectResourceAttributes imageThumbnailUrl(String imageThumbnailUrl) {
    this.imageThumbnailUrl = imageThumbnailUrl;
    return this;
  }

   /**
   * URL pointing to the location of an image thumbnail of the catalog item
   * @return imageThumbnailUrl
  **/
  @Schema(example = "https://via.placeholder.com/150", description = "URL pointing to the location of an image thumbnail of the catalog item")
  public String getImageThumbnailUrl() {
    return imageThumbnailUrl;
  }

  public void setImageThumbnailUrl(String imageThumbnailUrl) {
    this.imageThumbnailUrl = imageThumbnailUrl;
  }

  public CatalogItemResponseObjectResourceAttributes images(List<String> images) {
    this.images = images;
    return this;
  }

  public CatalogItemResponseObjectResourceAttributes addImagesItem(String imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<String>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * List of URLs pointing to the locations of images of the catalog item.
   * @return images
  **/
  @Schema(example = "[\"https://via.placeholder.com/150\"]", description = "List of URLs pointing to the locations of images of the catalog item.")
  public List<String> getImages() {
    return images;
  }

  public void setImages(List<String> images) {
    this.images = images;
  }

  public CatalogItemResponseObjectResourceAttributes customMetadata(Object customMetadata) {
    this.customMetadata = customMetadata;
    return this;
  }

   /**
   * Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb.
   * @return customMetadata
  **/
  @Schema(example = "{\"Top Pick\":true}", description = "Flat JSON blob to provide custom metadata about the catalog item. May not exceed 100kb.")
  public Object getCustomMetadata() {
    return customMetadata;
  }

  public void setCustomMetadata(Object customMetadata) {
    this.customMetadata = customMetadata;
  }

  public CatalogItemResponseObjectResourceAttributes published(Boolean published) {
    this.published = published;
    return this;
  }

   /**
   * Boolean value indicating whether the catalog item is published.
   * @return published
  **/
  @Schema(example = "true", description = "Boolean value indicating whether the catalog item is published.")
  public Boolean isPublished() {
    return published;
  }

  public void setPublished(Boolean published) {
    this.published = published;
  }

  public CatalogItemResponseObjectResourceAttributes created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Date and time when the catalog item was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).
   * @return created
  **/
  @Schema(example = "2022-11-08T00:00Z", description = "Date and time when the catalog item was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public CatalogItemResponseObjectResourceAttributes updated(OffsetDateTime updated) {
    this.updated = updated;
    return this;
  }

   /**
   * Date and time when the catalog item was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).
   * @return updated
  **/
  @Schema(example = "2022-11-08T00:00Z", description = "Date and time when the catalog item was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).")
  public OffsetDateTime getUpdated() {
    return updated;
  }

  public void setUpdated(OffsetDateTime updated) {
    this.updated = updated;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogItemResponseObjectResourceAttributes catalogItemResponseObjectResourceAttributes = (CatalogItemResponseObjectResourceAttributes) o;
    return Objects.equals(this.externalId, catalogItemResponseObjectResourceAttributes.externalId) &&
        Objects.equals(this.title, catalogItemResponseObjectResourceAttributes.title) &&
        Objects.equals(this.description, catalogItemResponseObjectResourceAttributes.description) &&
        Objects.equals(this.price, catalogItemResponseObjectResourceAttributes.price) &&
        Objects.equals(this.url, catalogItemResponseObjectResourceAttributes.url) &&
        Objects.equals(this.imageFullUrl, catalogItemResponseObjectResourceAttributes.imageFullUrl) &&
        Objects.equals(this.imageThumbnailUrl, catalogItemResponseObjectResourceAttributes.imageThumbnailUrl) &&
        Objects.equals(this.images, catalogItemResponseObjectResourceAttributes.images) &&
        Objects.equals(this.customMetadata, catalogItemResponseObjectResourceAttributes.customMetadata) &&
        Objects.equals(this.published, catalogItemResponseObjectResourceAttributes.published) &&
        Objects.equals(this.created, catalogItemResponseObjectResourceAttributes.created) &&
        Objects.equals(this.updated, catalogItemResponseObjectResourceAttributes.updated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(externalId, title, description, price, url, imageFullUrl, imageThumbnailUrl, images, customMetadata, published, created, updated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogItemResponseObjectResourceAttributes {\n");
    
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    imageFullUrl: ").append(toIndentedString(imageFullUrl)).append("\n");
    sb.append("    imageThumbnailUrl: ").append(toIndentedString(imageThumbnailUrl)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    customMetadata: ").append(toIndentedString(customMetadata)).append("\n");
    sb.append("    published: ").append(toIndentedString(published)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.File;
import java.io.IOException;
/**
 * ImageUploadQuery
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-18T16:09:09.130713678Z[GMT]")

public class ImageUploadQuery {
  @SerializedName("file")
  private File file = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("hidden")
  private Boolean hidden = false;

  public ImageUploadQuery file(File file) {
    this.file = file;
    return this;
  }

   /**
   * The image file to upload. Supported image formats: jpeg,png,gif. Maximum image size: 5MB.
   * @return file
  **/
  @Schema(required = true, description = "The image file to upload. Supported image formats: jpeg,png,gif. Maximum image size: 5MB.")
  public File getFile() {
    return file;
  }

  public void setFile(File file) {
    this.file = file;
  }

  public ImageUploadQuery name(String name) {
    this.name = name;
    return this;
  }

   /**
   * A name for the image.  Defaults to the filename if not provided.  If the name matches an existing image, a suffix will be added.
   * @return name
  **/
  @Schema(description = "A name for the image.  Defaults to the filename if not provided.  If the name matches an existing image, a suffix will be added.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ImageUploadQuery hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * If true, this image is not shown in the asset library.
   * @return hidden
  **/
  @Schema(description = "If true, this image is not shown in the asset library.")
  public Boolean isHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImageUploadQuery imageUploadQuery = (ImageUploadQuery) o;
    return Objects.equals(this.file, imageUploadQuery.file) &&
        Objects.equals(this.name, imageUploadQuery.name) &&
        Objects.equals(this.hidden, imageUploadQuery.hidden);
  }

  @Override
  public int hashCode() {
    return Objects.hash(Objects.hashCode(file), name, hidden);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImageUploadQuery {\n");
    
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

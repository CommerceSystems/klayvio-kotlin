/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * DeviceMetadata
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-18T16:09:09.130713678Z[GMT]")

public class DeviceMetadata {
  @SerializedName("device_id")
  private String deviceId = null;

  /**
   * The name of the SDK used to create the push token.
   */
  @JsonAdapter(KlaviyoSdkEnum.Adapter.class)
  public enum KlaviyoSdkEnum {
    @SerializedName("android")
    ANDROID("android"),
    @SerializedName("swift")
    SWIFT("swift");

    private String value;

    KlaviyoSdkEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static KlaviyoSdkEnum fromValue(String input) {
      for (KlaviyoSdkEnum b : KlaviyoSdkEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<KlaviyoSdkEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final KlaviyoSdkEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public KlaviyoSdkEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return KlaviyoSdkEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("klaviyo_sdk")
  private KlaviyoSdkEnum klaviyoSdk = null;

  @SerializedName("sdk_version")
  private String sdkVersion = null;

  @SerializedName("device_model")
  private String deviceModel = null;

  /**
   * The name of the operating system on the device.
   */
  @JsonAdapter(OsNameEnum.Adapter.class)
  public enum OsNameEnum {
    @SerializedName("android")
    ANDROID("android"),
    @SerializedName("ios")
    IOS("ios"),
    @SerializedName("ipados")
    IPADOS("ipados"),
    @SerializedName("macos")
    MACOS("macos"),
    @SerializedName("tvos")
    TVOS("tvos");

    private String value;

    OsNameEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static OsNameEnum fromValue(String input) {
      for (OsNameEnum b : OsNameEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<OsNameEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OsNameEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public OsNameEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return OsNameEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("os_name")
  private OsNameEnum osName = null;

  @SerializedName("os_version")
  private String osVersion = null;

  @SerializedName("manufacturer")
  private String manufacturer = null;

  @SerializedName("app_name")
  private String appName = null;

  @SerializedName("app_version")
  private String appVersion = null;

  @SerializedName("app_build")
  private String appBuild = null;

  @SerializedName("app_id")
  private String appId = null;

  /**
   * The environment in which the push token was created
   */
  @JsonAdapter(EnvironmentEnum.Adapter.class)
  public enum EnvironmentEnum {
    @SerializedName("debug")
    DEBUG("debug"),
    @SerializedName("release")
    RELEASE("release");

    private String value;

    EnvironmentEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static EnvironmentEnum fromValue(String input) {
      for (EnvironmentEnum b : EnvironmentEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<EnvironmentEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EnvironmentEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public EnvironmentEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return EnvironmentEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("environment")
  private EnvironmentEnum environment = null;

  public DeviceMetadata deviceId(String deviceId) {
    this.deviceId = deviceId;
    return this;
  }

   /**
   * Relatively stable ID for the device. Will update on app uninstall and reinstall
   * @return deviceId
  **/
  @Schema(example = "1234567890", description = "Relatively stable ID for the device. Will update on app uninstall and reinstall")
  public String getDeviceId() {
    return deviceId;
  }

  public void setDeviceId(String deviceId) {
    this.deviceId = deviceId;
  }

  public DeviceMetadata klaviyoSdk(KlaviyoSdkEnum klaviyoSdk) {
    this.klaviyoSdk = klaviyoSdk;
    return this;
  }

   /**
   * The name of the SDK used to create the push token.
   * @return klaviyoSdk
  **/
  @Schema(example = "swift", description = "The name of the SDK used to create the push token.")
  public KlaviyoSdkEnum getKlaviyoSdk() {
    return klaviyoSdk;
  }

  public void setKlaviyoSdk(KlaviyoSdkEnum klaviyoSdk) {
    this.klaviyoSdk = klaviyoSdk;
  }

  public DeviceMetadata sdkVersion(String sdkVersion) {
    this.sdkVersion = sdkVersion;
    return this;
  }

   /**
   * The version of the SDK used to create the push token
   * @return sdkVersion
  **/
  @Schema(example = "1.0.0", description = "The version of the SDK used to create the push token")
  public String getSdkVersion() {
    return sdkVersion;
  }

  public void setSdkVersion(String sdkVersion) {
    this.sdkVersion = sdkVersion;
  }

  public DeviceMetadata deviceModel(String deviceModel) {
    this.deviceModel = deviceModel;
    return this;
  }

   /**
   * The model of the device
   * @return deviceModel
  **/
  @Schema(example = "iPhone12,1", description = "The model of the device")
  public String getDeviceModel() {
    return deviceModel;
  }

  public void setDeviceModel(String deviceModel) {
    this.deviceModel = deviceModel;
  }

  public DeviceMetadata osName(OsNameEnum osName) {
    this.osName = osName;
    return this;
  }

   /**
   * The name of the operating system on the device.
   * @return osName
  **/
  @Schema(example = "ios", description = "The name of the operating system on the device.")
  public OsNameEnum getOsName() {
    return osName;
  }

  public void setOsName(OsNameEnum osName) {
    this.osName = osName;
  }

  public DeviceMetadata osVersion(String osVersion) {
    this.osVersion = osVersion;
    return this;
  }

   /**
   * The version of the operating system on the device
   * @return osVersion
  **/
  @Schema(example = "14.0", description = "The version of the operating system on the device")
  public String getOsVersion() {
    return osVersion;
  }

  public void setOsVersion(String osVersion) {
    this.osVersion = osVersion;
  }

  public DeviceMetadata manufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
    return this;
  }

   /**
   * The manufacturer of the device
   * @return manufacturer
  **/
  @Schema(example = "Apple", description = "The manufacturer of the device")
  public String getManufacturer() {
    return manufacturer;
  }

  public void setManufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
  }

  public DeviceMetadata appName(String appName) {
    this.appName = appName;
    return this;
  }

   /**
   * The name of the app that created the push token
   * @return appName
  **/
  @Schema(example = "Klaviyo", description = "The name of the app that created the push token")
  public String getAppName() {
    return appName;
  }

  public void setAppName(String appName) {
    this.appName = appName;
  }

  public DeviceMetadata appVersion(String appVersion) {
    this.appVersion = appVersion;
    return this;
  }

   /**
   * The version of the app that created the push token
   * @return appVersion
  **/
  @Schema(example = "1.0.0", description = "The version of the app that created the push token")
  public String getAppVersion() {
    return appVersion;
  }

  public void setAppVersion(String appVersion) {
    this.appVersion = appVersion;
  }

  public DeviceMetadata appBuild(String appBuild) {
    this.appBuild = appBuild;
    return this;
  }

   /**
   * The build of the app that created the push token
   * @return appBuild
  **/
  @Schema(example = "1", description = "The build of the app that created the push token")
  public String getAppBuild() {
    return appBuild;
  }

  public void setAppBuild(String appBuild) {
    this.appBuild = appBuild;
  }

  public DeviceMetadata appId(String appId) {
    this.appId = appId;
    return this;
  }

   /**
   * The ID of the app that created the push token
   * @return appId
  **/
  @Schema(example = "com.klaviyo.app", description = "The ID of the app that created the push token")
  public String getAppId() {
    return appId;
  }

  public void setAppId(String appId) {
    this.appId = appId;
  }

  public DeviceMetadata environment(EnvironmentEnum environment) {
    this.environment = environment;
    return this;
  }

   /**
   * The environment in which the push token was created
   * @return environment
  **/
  @Schema(example = "release", description = "The environment in which the push token was created")
  public EnvironmentEnum getEnvironment() {
    return environment;
  }

  public void setEnvironment(EnvironmentEnum environment) {
    this.environment = environment;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceMetadata deviceMetadata = (DeviceMetadata) o;
    return Objects.equals(this.deviceId, deviceMetadata.deviceId) &&
        Objects.equals(this.klaviyoSdk, deviceMetadata.klaviyoSdk) &&
        Objects.equals(this.sdkVersion, deviceMetadata.sdkVersion) &&
        Objects.equals(this.deviceModel, deviceMetadata.deviceModel) &&
        Objects.equals(this.osName, deviceMetadata.osName) &&
        Objects.equals(this.osVersion, deviceMetadata.osVersion) &&
        Objects.equals(this.manufacturer, deviceMetadata.manufacturer) &&
        Objects.equals(this.appName, deviceMetadata.appName) &&
        Objects.equals(this.appVersion, deviceMetadata.appVersion) &&
        Objects.equals(this.appBuild, deviceMetadata.appBuild) &&
        Objects.equals(this.appId, deviceMetadata.appId) &&
        Objects.equals(this.environment, deviceMetadata.environment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deviceId, klaviyoSdk, sdkVersion, deviceModel, osName, osVersion, manufacturer, appName, appVersion, appBuild, appId, environment);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceMetadata {\n");
    
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    klaviyoSdk: ").append(toIndentedString(klaviyoSdk)).append("\n");
    sb.append("    sdkVersion: ").append(toIndentedString(sdkVersion)).append("\n");
    sb.append("    deviceModel: ").append(toIndentedString(deviceModel)).append("\n");
    sb.append("    osName: ").append(toIndentedString(osName)).append("\n");
    sb.append("    osVersion: ").append(toIndentedString(osVersion)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("    appName: ").append(toIndentedString(appName)).append("\n");
    sb.append("    appVersion: ").append(toIndentedString(appVersion)).append("\n");
    sb.append("    appBuild: ").append(toIndentedString(appBuild)).append("\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

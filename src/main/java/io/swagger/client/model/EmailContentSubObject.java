/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * EmailContentSubObject
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-18T16:09:09.130713678Z[GMT]")

public class EmailContentSubObject implements OneOfCampaignMessageCreateQueryResourceObjectAttributesContent, OneOfCampaignMessagePartialUpdateQueryResourceObjectAttributesContent, OneOfCampaignMessageResponseObjectResourceAttributesContent {
  @SerializedName("subject")
  private String subject = null;

  @SerializedName("preview_text")
  private String previewText = null;

  @SerializedName("from_email")
  private String fromEmail = null;

  @SerializedName("from_label")
  private String fromLabel = null;

  @SerializedName("reply_to_email")
  private String replyToEmail = null;

  @SerializedName("cc_email")
  private String ccEmail = null;

  @SerializedName("bcc_email")
  private String bccEmail = null;

  public EmailContentSubObject subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * The subject of the message
   * @return subject
  **/
  @Schema(example = "Buy our product!", description = "The subject of the message")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public EmailContentSubObject previewText(String previewText) {
    this.previewText = previewText;
    return this;
  }

   /**
   * Preview text associated with the message
   * @return previewText
  **/
  @Schema(example = "My preview text", description = "Preview text associated with the message")
  public String getPreviewText() {
    return previewText;
  }

  public void setPreviewText(String previewText) {
    this.previewText = previewText;
  }

  public EmailContentSubObject fromEmail(String fromEmail) {
    this.fromEmail = fromEmail;
    return this;
  }

   /**
   * The email the message should be sent from
   * @return fromEmail
  **/
  @Schema(example = "store@my-company.com", description = "The email the message should be sent from")
  public String getFromEmail() {
    return fromEmail;
  }

  public void setFromEmail(String fromEmail) {
    this.fromEmail = fromEmail;
  }

  public EmailContentSubObject fromLabel(String fromLabel) {
    this.fromLabel = fromLabel;
    return this;
  }

   /**
   * The label associated with the from_email
   * @return fromLabel
  **/
  @Schema(example = "My Company", description = "The label associated with the from_email")
  public String getFromLabel() {
    return fromLabel;
  }

  public void setFromLabel(String fromLabel) {
    this.fromLabel = fromLabel;
  }

  public EmailContentSubObject replyToEmail(String replyToEmail) {
    this.replyToEmail = replyToEmail;
    return this;
  }

   /**
   * Optional Reply-To email address
   * @return replyToEmail
  **/
  @Schema(example = "reply-to@my-company.com", description = "Optional Reply-To email address")
  public String getReplyToEmail() {
    return replyToEmail;
  }

  public void setReplyToEmail(String replyToEmail) {
    this.replyToEmail = replyToEmail;
  }

  public EmailContentSubObject ccEmail(String ccEmail) {
    this.ccEmail = ccEmail;
    return this;
  }

   /**
   * Optional CC email address
   * @return ccEmail
  **/
  @Schema(example = "cc@my-company.com", description = "Optional CC email address")
  public String getCcEmail() {
    return ccEmail;
  }

  public void setCcEmail(String ccEmail) {
    this.ccEmail = ccEmail;
  }

  public EmailContentSubObject bccEmail(String bccEmail) {
    this.bccEmail = bccEmail;
    return this;
  }

   /**
   * Optional BCC email address
   * @return bccEmail
  **/
  @Schema(example = "bcc@my-company.com", description = "Optional BCC email address")
  public String getBccEmail() {
    return bccEmail;
  }

  public void setBccEmail(String bccEmail) {
    this.bccEmail = bccEmail;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailContentSubObject emailContentSubObject = (EmailContentSubObject) o;
    return Objects.equals(this.subject, emailContentSubObject.subject) &&
        Objects.equals(this.previewText, emailContentSubObject.previewText) &&
        Objects.equals(this.fromEmail, emailContentSubObject.fromEmail) &&
        Objects.equals(this.fromLabel, emailContentSubObject.fromLabel) &&
        Objects.equals(this.replyToEmail, emailContentSubObject.replyToEmail) &&
        Objects.equals(this.ccEmail, emailContentSubObject.ccEmail) &&
        Objects.equals(this.bccEmail, emailContentSubObject.bccEmail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(subject, previewText, fromEmail, fromLabel, replyToEmail, ccEmail, bccEmail);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailContentSubObject {\n");
    
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    previewText: ").append(toIndentedString(previewText)).append("\n");
    sb.append("    fromEmail: ").append(toIndentedString(fromEmail)).append("\n");
    sb.append("    fromLabel: ").append(toIndentedString(fromLabel)).append("\n");
    sb.append("    replyToEmail: ").append(toIndentedString(replyToEmail)).append("\n");
    sb.append("    ccEmail: ").append(toIndentedString(ccEmail)).append("\n");
    sb.append("    bccEmail: ").append(toIndentedString(bccEmail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * MobilePushMessageContent
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-18T16:09:09.130713678Z[GMT]")

public class MobilePushMessageContent implements OneOfFlowMessageResponseObjectResourceAttributesContent {
  @SerializedName("title")
  private String title = null;

  @SerializedName("body")
  private String body = null;

  @SerializedName("sound")
  private Boolean sound = false;

  @SerializedName("badge")
  private Boolean badge = false;

  @SerializedName("media_url")
  private String mediaUrl = null;

  @SerializedName("dynamic_image")
  private String dynamicImage = null;

  @SerializedName("ios_link")
  private String iosLink = null;

  @SerializedName("android_link")
  private String androidLink = null;

  @SerializedName("on_open")
  private String onOpen = "home";

  public MobilePushMessageContent title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @Schema(required = true, description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public MobilePushMessageContent body(String body) {
    this.body = body;
    return this;
  }

   /**
   * Get body
   * @return body
  **/
  @Schema(required = true, description = "")
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }

  public MobilePushMessageContent sound(Boolean sound) {
    this.sound = sound;
    return this;
  }

   /**
   * Get sound
   * @return sound
  **/
  @Schema(description = "")
  public Boolean isSound() {
    return sound;
  }

  public void setSound(Boolean sound) {
    this.sound = sound;
  }

  public MobilePushMessageContent badge(Boolean badge) {
    this.badge = badge;
    return this;
  }

   /**
   * Get badge
   * @return badge
  **/
  @Schema(description = "")
  public Boolean isBadge() {
    return badge;
  }

  public void setBadge(Boolean badge) {
    this.badge = badge;
  }

  public MobilePushMessageContent mediaUrl(String mediaUrl) {
    this.mediaUrl = mediaUrl;
    return this;
  }

   /**
   * Get mediaUrl
   * @return mediaUrl
  **/
  @Schema(description = "")
  public String getMediaUrl() {
    return mediaUrl;
  }

  public void setMediaUrl(String mediaUrl) {
    this.mediaUrl = mediaUrl;
  }

  public MobilePushMessageContent dynamicImage(String dynamicImage) {
    this.dynamicImage = dynamicImage;
    return this;
  }

   /**
   * Get dynamicImage
   * @return dynamicImage
  **/
  @Schema(description = "")
  public String getDynamicImage() {
    return dynamicImage;
  }

  public void setDynamicImage(String dynamicImage) {
    this.dynamicImage = dynamicImage;
  }

  public MobilePushMessageContent iosLink(String iosLink) {
    this.iosLink = iosLink;
    return this;
  }

   /**
   * Get iosLink
   * @return iosLink
  **/
  @Schema(description = "")
  public String getIosLink() {
    return iosLink;
  }

  public void setIosLink(String iosLink) {
    this.iosLink = iosLink;
  }

  public MobilePushMessageContent androidLink(String androidLink) {
    this.androidLink = androidLink;
    return this;
  }

   /**
   * Get androidLink
   * @return androidLink
  **/
  @Schema(description = "")
  public String getAndroidLink() {
    return androidLink;
  }

  public void setAndroidLink(String androidLink) {
    this.androidLink = androidLink;
  }

  public MobilePushMessageContent onOpen(String onOpen) {
    this.onOpen = onOpen;
    return this;
  }

   /**
   * Get onOpen
   * @return onOpen
  **/
  @Schema(example = "home", description = "")
  public String getOnOpen() {
    return onOpen;
  }

  public void setOnOpen(String onOpen) {
    this.onOpen = onOpen;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MobilePushMessageContent mobilePushMessageContent = (MobilePushMessageContent) o;
    return Objects.equals(this.title, mobilePushMessageContent.title) &&
        Objects.equals(this.body, mobilePushMessageContent.body) &&
        Objects.equals(this.sound, mobilePushMessageContent.sound) &&
        Objects.equals(this.badge, mobilePushMessageContent.badge) &&
        Objects.equals(this.mediaUrl, mobilePushMessageContent.mediaUrl) &&
        Objects.equals(this.dynamicImage, mobilePushMessageContent.dynamicImage) &&
        Objects.equals(this.iosLink, mobilePushMessageContent.iosLink) &&
        Objects.equals(this.androidLink, mobilePushMessageContent.androidLink) &&
        Objects.equals(this.onOpen, mobilePushMessageContent.onOpen);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, body, sound, badge, mediaUrl, dynamicImage, iosLink, androidLink, onOpen);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MobilePushMessageContent {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    sound: ").append(toIndentedString(sound)).append("\n");
    sb.append("    badge: ").append(toIndentedString(badge)).append("\n");
    sb.append("    mediaUrl: ").append(toIndentedString(mediaUrl)).append("\n");
    sb.append("    dynamicImage: ").append(toIndentedString(dynamicImage)).append("\n");
    sb.append("    iosLink: ").append(toIndentedString(iosLink)).append("\n");
    sb.append("    androidLink: ").append(toIndentedString(androidLink)).append("\n");
    sb.append("    onOpen: ").append(toIndentedString(onOpen)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

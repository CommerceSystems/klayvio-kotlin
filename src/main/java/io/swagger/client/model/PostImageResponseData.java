/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ImageEnum;
import io.swagger.client.model.ImageResponseObjectResourceAttributes;
import io.swagger.client.model.ObjectLinks;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * PostImageResponseData
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-18T16:09:09.130713678Z[GMT]")

public class PostImageResponseData {
  @SerializedName("type")
  private ImageEnum type = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("attributes")
  private ImageResponseObjectResourceAttributes attributes = null;

  @SerializedName("links")
  private ObjectLinks links = null;

  public PostImageResponseData type(ImageEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public ImageEnum getType() {
    return type;
  }

  public void setType(ImageEnum type) {
    this.type = type;
  }

  public PostImageResponseData id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the image
   * @return id
  **/
  @Schema(example = "7", required = true, description = "The ID of the image")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PostImageResponseData attributes(ImageResponseObjectResourceAttributes attributes) {
    this.attributes = attributes;
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @Schema(required = true, description = "")
  public ImageResponseObjectResourceAttributes getAttributes() {
    return attributes;
  }

  public void setAttributes(ImageResponseObjectResourceAttributes attributes) {
    this.attributes = attributes;
  }

  public PostImageResponseData links(ObjectLinks links) {
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @Schema(required = true, description = "")
  public ObjectLinks getLinks() {
    return links;
  }

  public void setLinks(ObjectLinks links) {
    this.links = links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostImageResponseData postImageResponseData = (PostImageResponseData) o;
    return Objects.equals(this.type, postImageResponseData.type) &&
        Objects.equals(this.id, postImageResponseData.id) &&
        Objects.equals(this.attributes, postImageResponseData.attributes) &&
        Objects.equals(this.links, postImageResponseData.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, id, attributes, links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostImageResponseData {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

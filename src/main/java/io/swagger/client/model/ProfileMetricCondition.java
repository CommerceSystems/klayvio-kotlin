/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.NumericOperatorFilter;
import io.swagger.client.model.ProfileMetricEnum;
import io.swagger.client.model.ProfileMetricPropertyFilter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ProfileMetricCondition
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-18T16:09:09.130713678Z[GMT]")

public class ProfileMetricCondition implements OneOfConditionGroupConditionsItems {
  @SerializedName("type")
  private ProfileMetricEnum type = null;

  @SerializedName("metric_id")
  private String metricId = null;

  /**
   * Measurements for profile metrics.
   */
  @JsonAdapter(MeasurementEnum.Adapter.class)
  public enum MeasurementEnum {
    @SerializedName("count")
    COUNT("count"),
    @SerializedName("sum")
    SUM("sum");

    private String value;

    MeasurementEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static MeasurementEnum fromValue(String input) {
      for (MeasurementEnum b : MeasurementEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<MeasurementEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MeasurementEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public MeasurementEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return MeasurementEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("measurement")
  private MeasurementEnum measurement = null;

  @SerializedName("measurement_filter")
  private NumericOperatorFilter measurementFilter = null;

  @SerializedName("timeframe_filter")
  private OneOfProfileMetricConditionTimeframeFilter timeframeFilter = null;

  @SerializedName("metric_filters")
  private List<ProfileMetricPropertyFilter> metricFilters = null;

  public ProfileMetricCondition type(ProfileMetricEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public ProfileMetricEnum getType() {
    return type;
  }

  public void setType(ProfileMetricEnum type) {
    this.type = type;
  }

  public ProfileMetricCondition metricId(String metricId) {
    this.metricId = metricId;
    return this;
  }

   /**
   * Get metricId
   * @return metricId
  **/
  @Schema(required = true, description = "")
  public String getMetricId() {
    return metricId;
  }

  public void setMetricId(String metricId) {
    this.metricId = metricId;
  }

  public ProfileMetricCondition measurement(MeasurementEnum measurement) {
    this.measurement = measurement;
    return this;
  }

   /**
   * Measurements for profile metrics.
   * @return measurement
  **/
  @Schema(required = true, description = "Measurements for profile metrics.")
  public MeasurementEnum getMeasurement() {
    return measurement;
  }

  public void setMeasurement(MeasurementEnum measurement) {
    this.measurement = measurement;
  }

  public ProfileMetricCondition measurementFilter(NumericOperatorFilter measurementFilter) {
    this.measurementFilter = measurementFilter;
    return this;
  }

   /**
   * Get measurementFilter
   * @return measurementFilter
  **/
  @Schema(required = true, description = "")
  public NumericOperatorFilter getMeasurementFilter() {
    return measurementFilter;
  }

  public void setMeasurementFilter(NumericOperatorFilter measurementFilter) {
    this.measurementFilter = measurementFilter;
  }

  public ProfileMetricCondition timeframeFilter(OneOfProfileMetricConditionTimeframeFilter timeframeFilter) {
    this.timeframeFilter = timeframeFilter;
    return this;
  }

   /**
   * Get timeframeFilter
   * @return timeframeFilter
  **/
  @Schema(required = true, description = "")
  public OneOfProfileMetricConditionTimeframeFilter getTimeframeFilter() {
    return timeframeFilter;
  }

  public void setTimeframeFilter(OneOfProfileMetricConditionTimeframeFilter timeframeFilter) {
    this.timeframeFilter = timeframeFilter;
  }

  public ProfileMetricCondition metricFilters(List<ProfileMetricPropertyFilter> metricFilters) {
    this.metricFilters = metricFilters;
    return this;
  }

  public ProfileMetricCondition addMetricFiltersItem(ProfileMetricPropertyFilter metricFiltersItem) {
    if (this.metricFilters == null) {
      this.metricFilters = new ArrayList<ProfileMetricPropertyFilter>();
    }
    this.metricFilters.add(metricFiltersItem);
    return this;
  }

   /**
   * Get metricFilters
   * @return metricFilters
  **/
  @Schema(description = "")
  public List<ProfileMetricPropertyFilter> getMetricFilters() {
    return metricFilters;
  }

  public void setMetricFilters(List<ProfileMetricPropertyFilter> metricFilters) {
    this.metricFilters = metricFilters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProfileMetricCondition profileMetricCondition = (ProfileMetricCondition) o;
    return Objects.equals(this.type, profileMetricCondition.type) &&
        Objects.equals(this.metricId, profileMetricCondition.metricId) &&
        Objects.equals(this.measurement, profileMetricCondition.measurement) &&
        Objects.equals(this.measurementFilter, profileMetricCondition.measurementFilter) &&
        Objects.equals(this.timeframeFilter, profileMetricCondition.timeframeFilter) &&
        Objects.equals(this.metricFilters, profileMetricCondition.metricFilters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, metricId, measurement, measurementFilter, timeframeFilter, metricFilters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProfileMetricCondition {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    metricId: ").append(toIndentedString(metricId)).append("\n");
    sb.append("    measurement: ").append(toIndentedString(measurement)).append("\n");
    sb.append("    measurementFilter: ").append(toIndentedString(measurementFilter)).append("\n");
    sb.append("    timeframeFilter: ").append(toIndentedString(timeframeFilter)).append("\n");
    sb.append("    metricFilters: ").append(toIndentedString(metricFilters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

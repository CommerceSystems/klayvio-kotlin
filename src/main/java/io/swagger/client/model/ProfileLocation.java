/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ProfileLocation
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-18T16:09:09.130713678Z[GMT]")

public class ProfileLocation {
  @SerializedName("address1")
  private String address1 = null;

  @SerializedName("address2")
  private String address2 = null;

  @SerializedName("city")
  private String city = null;

  @SerializedName("country")
  private String country = null;

  @SerializedName("latitude")
  private OneOfProfileLocationLatitude latitude = null;

  @SerializedName("longitude")
  private OneOfProfileLocationLongitude longitude = null;

  @SerializedName("region")
  private String region = null;

  @SerializedName("zip")
  private String zip = null;

  @SerializedName("timezone")
  private String timezone = null;

  @SerializedName("ip")
  private String ip = null;

  public ProfileLocation address1(String address1) {
    this.address1 = address1;
    return this;
  }

   /**
   * First line of street address
   * @return address1
  **/
  @Schema(example = "89 E 42nd St", description = "First line of street address")
  public String getAddress1() {
    return address1;
  }

  public void setAddress1(String address1) {
    this.address1 = address1;
  }

  public ProfileLocation address2(String address2) {
    this.address2 = address2;
    return this;
  }

   /**
   * Second line of street address
   * @return address2
  **/
  @Schema(example = "1st floor", description = "Second line of street address")
  public String getAddress2() {
    return address2;
  }

  public void setAddress2(String address2) {
    this.address2 = address2;
  }

  public ProfileLocation city(String city) {
    this.city = city;
    return this;
  }

   /**
   * City name
   * @return city
  **/
  @Schema(example = "New York", description = "City name")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public ProfileLocation country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Country name
   * @return country
  **/
  @Schema(example = "United States", description = "Country name")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public ProfileLocation latitude(OneOfProfileLocationLatitude latitude) {
    this.latitude = latitude;
    return this;
  }

   /**
   * Latitude coordinate. We recommend providing a precision of four decimal places.
   * @return latitude
  **/
  @Schema(example = "40.7128", description = "Latitude coordinate. We recommend providing a precision of four decimal places.")
  public OneOfProfileLocationLatitude getLatitude() {
    return latitude;
  }

  public void setLatitude(OneOfProfileLocationLatitude latitude) {
    this.latitude = latitude;
  }

  public ProfileLocation longitude(OneOfProfileLocationLongitude longitude) {
    this.longitude = longitude;
    return this;
  }

   /**
   * Longitude coordinate. We recommend providing a precision of four decimal places.
   * @return longitude
  **/
  @Schema(example = "74.0060", description = "Longitude coordinate. We recommend providing a precision of four decimal places.")
  public OneOfProfileLocationLongitude getLongitude() {
    return longitude;
  }

  public void setLongitude(OneOfProfileLocationLongitude longitude) {
    this.longitude = longitude;
  }

  public ProfileLocation region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Region within a country, such as state or province
   * @return region
  **/
  @Schema(example = "NY", description = "Region within a country, such as state or province")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public ProfileLocation zip(String zip) {
    this.zip = zip;
    return this;
  }

   /**
   * Zip code
   * @return zip
  **/
  @Schema(example = "10017", description = "Zip code")
  public String getZip() {
    return zip;
  }

  public void setZip(String zip) {
    this.zip = zip;
  }

  public ProfileLocation timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * Time zone name. We recommend using time zones from the IANA Time Zone Database.
   * @return timezone
  **/
  @Schema(example = "America/New_York", description = "Time zone name. We recommend using time zones from the IANA Time Zone Database.")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public ProfileLocation ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * IP Address
   * @return ip
  **/
  @Schema(example = "127.0.0.1", description = "IP Address")
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProfileLocation profileLocation = (ProfileLocation) o;
    return Objects.equals(this.address1, profileLocation.address1) &&
        Objects.equals(this.address2, profileLocation.address2) &&
        Objects.equals(this.city, profileLocation.city) &&
        Objects.equals(this.country, profileLocation.country) &&
        Objects.equals(this.latitude, profileLocation.latitude) &&
        Objects.equals(this.longitude, profileLocation.longitude) &&
        Objects.equals(this.region, profileLocation.region) &&
        Objects.equals(this.zip, profileLocation.zip) &&
        Objects.equals(this.timezone, profileLocation.timezone) &&
        Objects.equals(this.ip, profileLocation.ip);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address1, address2, city, country, latitude, longitude, region, zip, timezone, ip);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProfileLocation {\n");
    
    sb.append("    address1: ").append(toIndentedString(address1)).append("\n");
    sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

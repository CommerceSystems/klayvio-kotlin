/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Timeframe
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-18T16:09:09.130713678Z[GMT]")

public class Timeframe implements OneOfCampaignValuesRequestDTOResourceObjectAttributesTimeframe, OneOfFlowSeriesRequestDTOResourceObjectAttributesTimeframe, OneOfFlowValuesRequestDTOResourceObjectAttributesTimeframe {
  /**
   * Pre-defined key that represents a set timeframe
   */
  @JsonAdapter(KeyEnum.Adapter.class)
  public enum KeyEnum {
    @SerializedName("last_12_months")
    LAST_12_MONTHS("last_12_months"),
    @SerializedName("last_30_days")
    LAST_30_DAYS("last_30_days"),
    @SerializedName("last_365_days")
    LAST_365_DAYS("last_365_days"),
    @SerializedName("last_3_months")
    LAST_3_MONTHS("last_3_months"),
    @SerializedName("last_7_days")
    LAST_7_DAYS("last_7_days"),
    @SerializedName("last_90_days")
    LAST_90_DAYS("last_90_days"),
    @SerializedName("last_month")
    LAST_MONTH("last_month"),
    @SerializedName("last_week")
    LAST_WEEK("last_week"),
    @SerializedName("last_year")
    LAST_YEAR("last_year"),
    @SerializedName("this_month")
    THIS_MONTH("this_month"),
    @SerializedName("this_week")
    THIS_WEEK("this_week"),
    @SerializedName("this_year")
    THIS_YEAR("this_year"),
    @SerializedName("today")
    TODAY("today"),
    @SerializedName("yesterday")
    YESTERDAY("yesterday");

    private String value;

    KeyEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static KeyEnum fromValue(String input) {
      for (KeyEnum b : KeyEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<KeyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final KeyEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public KeyEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return KeyEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("key")
  private KeyEnum key = null;

  public Timeframe key(KeyEnum key) {
    this.key = key;
    return this;
  }

   /**
   * Pre-defined key that represents a set timeframe
   * @return key
  **/
  @Schema(required = true, description = "Pre-defined key that represents a set timeframe")
  public KeyEnum getKey() {
    return key;
  }

  public void setKey(KeyEnum key) {
    this.key = key;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Timeframe timeframe = (Timeframe) o;
    return Objects.equals(this.key, timeframe.key);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Timeframe {\n");
    
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

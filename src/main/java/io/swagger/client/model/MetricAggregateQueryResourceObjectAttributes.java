/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * MetricAggregateQueryResourceObjectAttributes
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-18T16:09:09.130713678Z[GMT]")

public class MetricAggregateQueryResourceObjectAttributes {
  @SerializedName("metric_id")
  private String metricId = null;

  @SerializedName("page_cursor")
  private String pageCursor = null;

  /**
   * Supported measurements for aggregation
   */
  @JsonAdapter(MeasurementsEnum.Adapter.class)
  public enum MeasurementsEnum {
    @SerializedName("count")
    COUNT("count"),
    @SerializedName("sum_value")
    SUM_VALUE("sum_value"),
    @SerializedName("unique")
    UNIQUE("unique");

    private String value;

    MeasurementsEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static MeasurementsEnum fromValue(String input) {
      for (MeasurementsEnum b : MeasurementsEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<MeasurementsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MeasurementsEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public MeasurementsEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return MeasurementsEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("measurements")
  private List<MeasurementsEnum> measurements = new ArrayList<MeasurementsEnum>();

  /**
   * Aggregation interval, e.g. \&quot;hour\&quot;, \&quot;day\&quot;, \&quot;week\&quot;, \&quot;month\&quot;
   */
  @JsonAdapter(IntervalEnum.Adapter.class)
  public enum IntervalEnum {
    @SerializedName("day")
    DAY("day"),
    @SerializedName("hour")
    HOUR("hour"),
    @SerializedName("month")
    MONTH("month"),
    @SerializedName("week")
    WEEK("week");

    private String value;

    IntervalEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static IntervalEnum fromValue(String input) {
      for (IntervalEnum b : IntervalEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<IntervalEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IntervalEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public IntervalEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return IntervalEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("interval")
  private IntervalEnum interval = IntervalEnum.DAY;

  @SerializedName("page_size")
  private Integer pageSize = 500;

  /**
   * Supported dimensions for grouping and filtering
   */
  @JsonAdapter(ByEnum.Adapter.class)
  public enum ByEnum {
    @SerializedName("$attributed_channel")
    _ATTRIBUTED_CHANNEL("$attributed_channel"),
    @SerializedName("$attributed_flow")
    _ATTRIBUTED_FLOW("$attributed_flow"),
    @SerializedName("$attributed_message")
    _ATTRIBUTED_MESSAGE("$attributed_message"),
    @SerializedName("$attributed_variation")
    _ATTRIBUTED_VARIATION("$attributed_variation"),
    @SerializedName("$campaign_channel")
    _CAMPAIGN_CHANNEL("$campaign_channel"),
    @SerializedName("$flow")
    _FLOW("$flow"),
    @SerializedName("$flow_channel")
    _FLOW_CHANNEL("$flow_channel"),
    @SerializedName("$message")
    _MESSAGE("$message"),
    @SerializedName("$message_send_cohort")
    _MESSAGE_SEND_COHORT("$message_send_cohort"),
    @SerializedName("$variation")
    _VARIATION("$variation"),
    @SerializedName("$variation_send_cohort")
    _VARIATION_SEND_COHORT("$variation_send_cohort"),
    @SerializedName("Bot Click")
    BOT_CLICK("Bot Click"),
    @SerializedName("Bounce Type")
    BOUNCE_TYPE("Bounce Type"),
    @SerializedName("Campaign Name")
    CAMPAIGN_NAME("Campaign Name"),
    @SerializedName("Client Canonical")
    CLIENT_CANONICAL("Client Canonical"),
    @SerializedName("Client Name")
    CLIENT_NAME("Client Name"),
    @SerializedName("Client Type")
    CLIENT_TYPE("Client Type"),
    @SerializedName("Email Domain")
    EMAIL_DOMAIN("Email Domain"),
    @SerializedName("Failure Source")
    FAILURE_SOURCE("Failure Source"),
    @SerializedName("Failure Type")
    FAILURE_TYPE("Failure Type"),
    @SerializedName("From Number")
    FROM_NUMBER("From Number"),
    @SerializedName("From Phone Region")
    FROM_PHONE_REGION("From Phone Region"),
    @SerializedName("Inbox Provider")
    INBOX_PROVIDER("Inbox Provider"),
    @SerializedName("List")
    LIST("List"),
    @SerializedName("Message Name")
    MESSAGE_NAME("Message Name"),
    @SerializedName("Message Type")
    MESSAGE_TYPE("Message Type"),
    @SerializedName("Method")
    METHOD("Method"),
    @SerializedName("Subject")
    SUBJECT("Subject"),
    @SerializedName("To Number")
    TO_NUMBER("To Number"),
    @SerializedName("To Phone Region")
    TO_PHONE_REGION("To Phone Region"),
    @SerializedName("URL")
    URL("URL"),
    @SerializedName("form_id")
    FORM_ID("form_id");

    private String value;

    ByEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ByEnum fromValue(String input) {
      for (ByEnum b : ByEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ByEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ByEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ByEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ByEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("by")
  private List<ByEnum> by = null;

  @SerializedName("return_fields")
  private List<String> returnFields = null;

  @SerializedName("filter")
  private List<String> filter = new ArrayList<String>();

  @SerializedName("timezone")
  private String timezone = "UTC";

  /**
   * Provide a sort key (e.g. -$message)
   */
  @JsonAdapter(SortEnum.Adapter.class)
  public enum SortEnum {
    @SerializedName("$attributed_channel")
    _ATTRIBUTED_CHANNEL("$attributed_channel"),
    @SerializedName("-$attributed_channel")
    _ATTRIBUTED_CHANNEL_1("-$attributed_channel"),
    @SerializedName("$attributed_flow")
    _ATTRIBUTED_FLOW("$attributed_flow"),
    @SerializedName("-$attributed_flow")
    _ATTRIBUTED_FLOW_3("-$attributed_flow"),
    @SerializedName("$attributed_message")
    _ATTRIBUTED_MESSAGE("$attributed_message"),
    @SerializedName("-$attributed_message")
    _ATTRIBUTED_MESSAGE_5("-$attributed_message"),
    @SerializedName("$attributed_variation")
    _ATTRIBUTED_VARIATION("$attributed_variation"),
    @SerializedName("-$attributed_variation")
    _ATTRIBUTED_VARIATION_7("-$attributed_variation"),
    @SerializedName("$campaign_channel")
    _CAMPAIGN_CHANNEL("$campaign_channel"),
    @SerializedName("-$campaign_channel")
    _CAMPAIGN_CHANNEL_9("-$campaign_channel"),
    @SerializedName("$flow")
    _FLOW("$flow"),
    @SerializedName("-$flow")
    _FLOW_11("-$flow"),
    @SerializedName("$flow_channel")
    _FLOW_CHANNEL("$flow_channel"),
    @SerializedName("-$flow_channel")
    _FLOW_CHANNEL_13("-$flow_channel"),
    @SerializedName("$message")
    _MESSAGE("$message"),
    @SerializedName("-$message")
    _MESSAGE_15("-$message"),
    @SerializedName("$message_send_cohort")
    _MESSAGE_SEND_COHORT("$message_send_cohort"),
    @SerializedName("-$message_send_cohort")
    _MESSAGE_SEND_COHORT_17("-$message_send_cohort"),
    @SerializedName("$variation")
    _VARIATION("$variation"),
    @SerializedName("-$variation")
    _VARIATION_19("-$variation"),
    @SerializedName("$variation_send_cohort")
    _VARIATION_SEND_COHORT("$variation_send_cohort"),
    @SerializedName("-$variation_send_cohort")
    _VARIATION_SEND_COHORT_21("-$variation_send_cohort"),
    @SerializedName("Bot Click")
    BOT_CLICK("Bot Click"),
    @SerializedName("-Bot Click")
    _BOT_CLICK("-Bot Click"),
    @SerializedName("Bounce Type")
    BOUNCE_TYPE("Bounce Type"),
    @SerializedName("-Bounce Type")
    _BOUNCE_TYPE("-Bounce Type"),
    @SerializedName("Campaign Name")
    CAMPAIGN_NAME("Campaign Name"),
    @SerializedName("-Campaign Name")
    _CAMPAIGN_NAME("-Campaign Name"),
    @SerializedName("Client Canonical")
    CLIENT_CANONICAL("Client Canonical"),
    @SerializedName("-Client Canonical")
    _CLIENT_CANONICAL("-Client Canonical"),
    @SerializedName("Client Name")
    CLIENT_NAME("Client Name"),
    @SerializedName("-Client Name")
    _CLIENT_NAME("-Client Name"),
    @SerializedName("Client Type")
    CLIENT_TYPE("Client Type"),
    @SerializedName("-Client Type")
    _CLIENT_TYPE("-Client Type"),
    @SerializedName("Email Domain")
    EMAIL_DOMAIN("Email Domain"),
    @SerializedName("-Email Domain")
    _EMAIL_DOMAIN("-Email Domain"),
    @SerializedName("Failure Source")
    FAILURE_SOURCE("Failure Source"),
    @SerializedName("-Failure Source")
    _FAILURE_SOURCE("-Failure Source"),
    @SerializedName("Failure Type")
    FAILURE_TYPE("Failure Type"),
    @SerializedName("-Failure Type")
    _FAILURE_TYPE("-Failure Type"),
    @SerializedName("From Number")
    FROM_NUMBER("From Number"),
    @SerializedName("-From Number")
    _FROM_NUMBER("-From Number"),
    @SerializedName("From Phone Region")
    FROM_PHONE_REGION("From Phone Region"),
    @SerializedName("-From Phone Region")
    _FROM_PHONE_REGION("-From Phone Region"),
    @SerializedName("Inbox Provider")
    INBOX_PROVIDER("Inbox Provider"),
    @SerializedName("-Inbox Provider")
    _INBOX_PROVIDER("-Inbox Provider"),
    @SerializedName("List")
    LIST("List"),
    @SerializedName("-List")
    _LIST("-List"),
    @SerializedName("Message Name")
    MESSAGE_NAME("Message Name"),
    @SerializedName("-Message Name")
    _MESSAGE_NAME("-Message Name"),
    @SerializedName("Message Type")
    MESSAGE_TYPE("Message Type"),
    @SerializedName("-Message Type")
    _MESSAGE_TYPE("-Message Type"),
    @SerializedName("Method")
    METHOD("Method"),
    @SerializedName("-Method")
    _METHOD("-Method"),
    @SerializedName("Subject")
    SUBJECT("Subject"),
    @SerializedName("-Subject")
    _SUBJECT("-Subject"),
    @SerializedName("To Number")
    TO_NUMBER("To Number"),
    @SerializedName("-To Number")
    _TO_NUMBER("-To Number"),
    @SerializedName("To Phone Region")
    TO_PHONE_REGION("To Phone Region"),
    @SerializedName("-To Phone Region")
    _TO_PHONE_REGION("-To Phone Region"),
    @SerializedName("URL")
    URL("URL"),
    @SerializedName("-URL")
    _URL("-URL"),
    @SerializedName("count")
    COUNT("count"),
    @SerializedName("-count")
    _COUNT("-count"),
    @SerializedName("form_id")
    FORM_ID("form_id"),
    @SerializedName("-form_id")
    _FORM_ID("-form_id"),
    @SerializedName("sum_value")
    SUM_VALUE("sum_value"),
    @SerializedName("-sum_value")
    _SUM_VALUE("-sum_value"),
    @SerializedName("unique")
    UNIQUE("unique"),
    @SerializedName("-unique")
    _UNIQUE("-unique");

    private String value;

    SortEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SortEnum fromValue(String input) {
      for (SortEnum b : SortEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SortEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SortEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SortEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return SortEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("sort")
  private SortEnum sort = null;

  public MetricAggregateQueryResourceObjectAttributes metricId(String metricId) {
    this.metricId = metricId;
    return this;
  }

   /**
   * The metric ID used in the aggregation.
   * @return metricId
  **/
  @Schema(example = "0rG4eQ", required = true, description = "The metric ID used in the aggregation.")
  public String getMetricId() {
    return metricId;
  }

  public void setMetricId(String metricId) {
    this.metricId = metricId;
  }

  public MetricAggregateQueryResourceObjectAttributes pageCursor(String pageCursor) {
    this.pageCursor = pageCursor;
    return this;
  }

   /**
   * Optional pagination cursor to iterate over large result sets
   * @return pageCursor
  **/
  @Schema(description = "Optional pagination cursor to iterate over large result sets")
  public String getPageCursor() {
    return pageCursor;
  }

  public void setPageCursor(String pageCursor) {
    this.pageCursor = pageCursor;
  }

  public MetricAggregateQueryResourceObjectAttributes measurements(List<MeasurementsEnum> measurements) {
    this.measurements = measurements;
    return this;
  }

  public MetricAggregateQueryResourceObjectAttributes addMeasurementsItem(MeasurementsEnum measurementsItem) {
    this.measurements.add(measurementsItem);
    return this;
  }

   /**
   * Measurement key, e.g. &#x60;unique&#x60;, &#x60;sum_value&#x60;, &#x60;count&#x60;
   * @return measurements
  **/
  @Schema(example = "count", required = true, description = "Measurement key, e.g. `unique`, `sum_value`, `count`")
  public List<MeasurementsEnum> getMeasurements() {
    return measurements;
  }

  public void setMeasurements(List<MeasurementsEnum> measurements) {
    this.measurements = measurements;
  }

  public MetricAggregateQueryResourceObjectAttributes interval(IntervalEnum interval) {
    this.interval = interval;
    return this;
  }

   /**
   * Aggregation interval, e.g. \&quot;hour\&quot;, \&quot;day\&quot;, \&quot;week\&quot;, \&quot;month\&quot;
   * @return interval
  **/
  @Schema(example = "day", description = "Aggregation interval, e.g. \"hour\", \"day\", \"week\", \"month\"")
  public IntervalEnum getInterval() {
    return interval;
  }

  public void setInterval(IntervalEnum interval) {
    this.interval = interval;
  }

  public MetricAggregateQueryResourceObjectAttributes pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Alter the maximum number of returned rows in a single page of aggregation results
   * @return pageSize
  **/
  @Schema(example = "500", description = "Alter the maximum number of returned rows in a single page of aggregation results")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public MetricAggregateQueryResourceObjectAttributes by(List<ByEnum> by) {
    this.by = by;
    return this;
  }

  public MetricAggregateQueryResourceObjectAttributes addByItem(ByEnum byItem) {
    if (this.by == null) {
      this.by = new ArrayList<ByEnum>();
    }
    this.by.add(byItem);
    return this;
  }

   /**
   * Optional attribute(s) used for partitioning by the aggregation function
   * @return by
  **/
  @Schema(example = "$message", description = "Optional attribute(s) used for partitioning by the aggregation function")
  public List<ByEnum> getBy() {
    return by;
  }

  public void setBy(List<ByEnum> by) {
    this.by = by;
  }

  public MetricAggregateQueryResourceObjectAttributes returnFields(List<String> returnFields) {
    this.returnFields = returnFields;
    return this;
  }

  public MetricAggregateQueryResourceObjectAttributes addReturnFieldsItem(String returnFieldsItem) {
    if (this.returnFields == null) {
      this.returnFields = new ArrayList<String>();
    }
    this.returnFields.add(returnFieldsItem);
    return this;
  }

   /**
   * Provide fields to limit the returned data
   * @return returnFields
  **/
  @Schema(description = "Provide fields to limit the returned data")
  public List<String> getReturnFields() {
    return returnFields;
  }

  public void setReturnFields(List<String> returnFields) {
    this.returnFields = returnFields;
  }

  public MetricAggregateQueryResourceObjectAttributes filter(List<String> filter) {
    this.filter = filter;
    return this;
  }

  public MetricAggregateQueryResourceObjectAttributes addFilterItem(String filterItem) {
    this.filter.add(filterItem);
    return this;
  }

   /**
   * List of filters, must include time range using ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).             These filters follow a similar format to those in &#x60;GET&#x60; requests, the primary difference is that this endpoint asks for a list.             The time range can be filtered by providing a &#x60;greater-or-equal&#x60; and a &#x60;less-than&#x60; filter on the &#x60;datetime&#x60; field.
   * @return filter
  **/
  @Schema(example = "[\"greater-or-equal(datetime,2022-12-01T00:00:00)\",\"less-than(datetime,2022-12-08T00:00:00\"]", required = true, description = "List of filters, must include time range using ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).             These filters follow a similar format to those in `GET` requests, the primary difference is that this endpoint asks for a list.             The time range can be filtered by providing a `greater-or-equal` and a `less-than` filter on the `datetime` field.")
  public List<String> getFilter() {
    return filter;
  }

  public void setFilter(List<String> filter) {
    this.filter = filter;
  }

  public MetricAggregateQueryResourceObjectAttributes timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * The timezone used for processing the query, e.g. &#x60;&#x27;America/New_York&#x27;&#x60;.             This field is validated against a list of common timezones from the [IANA Time Zone Database](https://www.iana.org/time-zones).             While most are supported, a few notable exceptions are &#x60;Factory&#x60;, &#x60;Europe/Kyiv&#x60; and &#x60;Pacific/Kanton&#x60;. This field is case-sensitive.
   * @return timezone
  **/
  @Schema(example = "America/New_York", description = "The timezone used for processing the query, e.g. `'America/New_York'`.             This field is validated against a list of common timezones from the [IANA Time Zone Database](https://www.iana.org/time-zones).             While most are supported, a few notable exceptions are `Factory`, `Europe/Kyiv` and `Pacific/Kanton`. This field is case-sensitive.")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public MetricAggregateQueryResourceObjectAttributes sort(SortEnum sort) {
    this.sort = sort;
    return this;
  }

   /**
   * Provide a sort key (e.g. -$message)
   * @return sort
  **/
  @Schema(description = "Provide a sort key (e.g. -$message)")
  public SortEnum getSort() {
    return sort;
  }

  public void setSort(SortEnum sort) {
    this.sort = sort;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetricAggregateQueryResourceObjectAttributes metricAggregateQueryResourceObjectAttributes = (MetricAggregateQueryResourceObjectAttributes) o;
    return Objects.equals(this.metricId, metricAggregateQueryResourceObjectAttributes.metricId) &&
        Objects.equals(this.pageCursor, metricAggregateQueryResourceObjectAttributes.pageCursor) &&
        Objects.equals(this.measurements, metricAggregateQueryResourceObjectAttributes.measurements) &&
        Objects.equals(this.interval, metricAggregateQueryResourceObjectAttributes.interval) &&
        Objects.equals(this.pageSize, metricAggregateQueryResourceObjectAttributes.pageSize) &&
        Objects.equals(this.by, metricAggregateQueryResourceObjectAttributes.by) &&
        Objects.equals(this.returnFields, metricAggregateQueryResourceObjectAttributes.returnFields) &&
        Objects.equals(this.filter, metricAggregateQueryResourceObjectAttributes.filter) &&
        Objects.equals(this.timezone, metricAggregateQueryResourceObjectAttributes.timezone) &&
        Objects.equals(this.sort, metricAggregateQueryResourceObjectAttributes.sort);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metricId, pageCursor, measurements, interval, pageSize, by, returnFields, filter, timezone, sort);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetricAggregateQueryResourceObjectAttributes {\n");
    
    sb.append("    metricId: ").append(toIndentedString(metricId)).append("\n");
    sb.append("    pageCursor: ").append(toIndentedString(pageCursor)).append("\n");
    sb.append("    measurements: ").append(toIndentedString(measurements)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    by: ").append(toIndentedString(by)).append("\n");
    sb.append("    returnFields: ").append(toIndentedString(returnFields)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

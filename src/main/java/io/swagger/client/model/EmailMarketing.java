/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.EmailMarketingListSuppression;
import io.swagger.client.model.EmailMarketingSuppression;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * EmailMarketing
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-18T16:09:09.130713678Z[GMT]")

public class EmailMarketing {
  @SerializedName("can_receive_email_marketing")
  private Boolean canReceiveEmailMarketing = null;

  @SerializedName("consent")
  private String consent = null;

  @SerializedName("consent_timestamp")
  private OffsetDateTime consentTimestamp = null;

  @SerializedName("last_updated")
  private OffsetDateTime lastUpdated = null;

  @SerializedName("method")
  private String method = null;

  @SerializedName("method_detail")
  private String methodDetail = "";

  @SerializedName("custom_method_detail")
  private String customMethodDetail = null;

  @SerializedName("double_optin")
  private Boolean doubleOptin = null;

  @SerializedName("suppression")
  private List<EmailMarketingSuppression> suppression = null;

  @SerializedName("list_suppressions")
  private List<EmailMarketingListSuppression> listSuppressions = null;

  public EmailMarketing canReceiveEmailMarketing(Boolean canReceiveEmailMarketing) {
    this.canReceiveEmailMarketing = canReceiveEmailMarketing;
    return this;
  }

   /**
   * Whether or not this profile has implicit consent to receive email marketing. True if it does profile does not have any global suppressions.
   * @return canReceiveEmailMarketing
  **/
  @Schema(required = true, description = "Whether or not this profile has implicit consent to receive email marketing. True if it does profile does not have any global suppressions.")
  public Boolean isCanReceiveEmailMarketing() {
    return canReceiveEmailMarketing;
  }

  public void setCanReceiveEmailMarketing(Boolean canReceiveEmailMarketing) {
    this.canReceiveEmailMarketing = canReceiveEmailMarketing;
  }

  public EmailMarketing consent(String consent) {
    this.consent = consent;
    return this;
  }

   /**
   * The consent status for email marketing.
   * @return consent
  **/
  @Schema(example = "SUBSCRIBED", required = true, description = "The consent status for email marketing.")
  public String getConsent() {
    return consent;
  }

  public void setConsent(String consent) {
    this.consent = consent;
  }

  public EmailMarketing consentTimestamp(OffsetDateTime consentTimestamp) {
    this.consentTimestamp = consentTimestamp;
    return this;
  }

   /**
   * The timestamp when consent was recorded or updated for email marketing, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).
   * @return consentTimestamp
  **/
  @Schema(example = "2023-02-21T20:07:38Z", description = "The timestamp when consent was recorded or updated for email marketing, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).")
  public OffsetDateTime getConsentTimestamp() {
    return consentTimestamp;
  }

  public void setConsentTimestamp(OffsetDateTime consentTimestamp) {
    this.consentTimestamp = consentTimestamp;
  }

  public EmailMarketing lastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * The timestamp when a field on the email marketing object was last modified.
   * @return lastUpdated
  **/
  @Schema(example = "2023-02-21T20:07:38Z", description = "The timestamp when a field on the email marketing object was last modified.")
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
  }

  public EmailMarketing method(String method) {
    this.method = method;
    return this;
  }

   /**
   * The method by which the profile was subscribed to email marketing.
   * @return method
  **/
  @Schema(example = "PREFERENCE_PAGE", description = "The method by which the profile was subscribed to email marketing.")
  public String getMethod() {
    return method;
  }

  public void setMethod(String method) {
    this.method = method;
  }

  public EmailMarketing methodDetail(String methodDetail) {
    this.methodDetail = methodDetail;
    return this;
  }

   /**
   * Additional details about the method by which the profile was subscribed to email marketing. This may be empty if no details were provided.
   * @return methodDetail
  **/
  @Schema(example = "mydomain.com/signup", description = "Additional details about the method by which the profile was subscribed to email marketing. This may be empty if no details were provided.")
  public String getMethodDetail() {
    return methodDetail;
  }

  public void setMethodDetail(String methodDetail) {
    this.methodDetail = methodDetail;
  }

  public EmailMarketing customMethodDetail(String customMethodDetail) {
    this.customMethodDetail = customMethodDetail;
    return this;
  }

   /**
   * Additional detail provided by the caller when the profile was subscribed. This may be empty if no details were provided.
   * @return customMethodDetail
  **/
  @Schema(example = "marketing drive", description = "Additional detail provided by the caller when the profile was subscribed. This may be empty if no details were provided.")
  public String getCustomMethodDetail() {
    return customMethodDetail;
  }

  public void setCustomMethodDetail(String customMethodDetail) {
    this.customMethodDetail = customMethodDetail;
  }

  public EmailMarketing doubleOptin(Boolean doubleOptin) {
    this.doubleOptin = doubleOptin;
    return this;
  }

   /**
   * Whether the profile was subscribed to email marketing using a double opt-in.
   * @return doubleOptin
  **/
  @Schema(example = "true", description = "Whether the profile was subscribed to email marketing using a double opt-in.")
  public Boolean isDoubleOptin() {
    return doubleOptin;
  }

  public void setDoubleOptin(Boolean doubleOptin) {
    this.doubleOptin = doubleOptin;
  }

  public EmailMarketing suppression(List<EmailMarketingSuppression> suppression) {
    this.suppression = suppression;
    return this;
  }

  public EmailMarketing addSuppressionItem(EmailMarketingSuppression suppressionItem) {
    if (this.suppression == null) {
      this.suppression = new ArrayList<EmailMarketingSuppression>();
    }
    this.suppression.add(suppressionItem);
    return this;
  }

   /**
   * The global email marketing suppression for this profile.
   * @return suppression
  **/
  @Schema(description = "The global email marketing suppression for this profile.")
  public List<EmailMarketingSuppression> getSuppression() {
    return suppression;
  }

  public void setSuppression(List<EmailMarketingSuppression> suppression) {
    this.suppression = suppression;
  }

  public EmailMarketing listSuppressions(List<EmailMarketingListSuppression> listSuppressions) {
    this.listSuppressions = listSuppressions;
    return this;
  }

  public EmailMarketing addListSuppressionsItem(EmailMarketingListSuppression listSuppressionsItem) {
    if (this.listSuppressions == null) {
      this.listSuppressions = new ArrayList<EmailMarketingListSuppression>();
    }
    this.listSuppressions.add(listSuppressionsItem);
    return this;
  }

   /**
   * The list suppressions for this profile.
   * @return listSuppressions
  **/
  @Schema(description = "The list suppressions for this profile.")
  public List<EmailMarketingListSuppression> getListSuppressions() {
    return listSuppressions;
  }

  public void setListSuppressions(List<EmailMarketingListSuppression> listSuppressions) {
    this.listSuppressions = listSuppressions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailMarketing emailMarketing = (EmailMarketing) o;
    return Objects.equals(this.canReceiveEmailMarketing, emailMarketing.canReceiveEmailMarketing) &&
        Objects.equals(this.consent, emailMarketing.consent) &&
        Objects.equals(this.consentTimestamp, emailMarketing.consentTimestamp) &&
        Objects.equals(this.lastUpdated, emailMarketing.lastUpdated) &&
        Objects.equals(this.method, emailMarketing.method) &&
        Objects.equals(this.methodDetail, emailMarketing.methodDetail) &&
        Objects.equals(this.customMethodDetail, emailMarketing.customMethodDetail) &&
        Objects.equals(this.doubleOptin, emailMarketing.doubleOptin) &&
        Objects.equals(this.suppression, emailMarketing.suppression) &&
        Objects.equals(this.listSuppressions, emailMarketing.listSuppressions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canReceiveEmailMarketing, consent, consentTimestamp, lastUpdated, method, methodDetail, customMethodDetail, doubleOptin, suppression, listSuppressions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailMarketing {\n");
    
    sb.append("    canReceiveEmailMarketing: ").append(toIndentedString(canReceiveEmailMarketing)).append("\n");
    sb.append("    consent: ").append(toIndentedString(consent)).append("\n");
    sb.append("    consentTimestamp: ").append(toIndentedString(consentTimestamp)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    methodDetail: ").append(toIndentedString(methodDetail)).append("\n");
    sb.append("    customMethodDetail: ").append(toIndentedString(customMethodDetail)).append("\n");
    sb.append("    doubleOptin: ").append(toIndentedString(doubleOptin)).append("\n");
    sb.append("    suppression: ").append(toIndentedString(suppression)).append("\n");
    sb.append("    listSuppressions: ").append(toIndentedString(listSuppressions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

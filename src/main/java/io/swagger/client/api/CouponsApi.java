/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.CouponCodeCreateJobCreateQuery;
import io.swagger.client.model.CouponCodeCreateQuery;
import io.swagger.client.model.CouponCodeUpdateQuery;
import io.swagger.client.model.CouponCreateQuery;
import io.swagger.client.model.CouponUpdateQuery;
import io.swagger.client.model.GetCouponCodeCreateJobResponseCollectionCompoundDocument;
import io.swagger.client.model.GetCouponCodeCreateJobResponseCompoundDocument;
import io.swagger.client.model.GetCouponCodeRelationshipCouponResponse;
import io.swagger.client.model.GetCouponCodeResponseCollection;
import io.swagger.client.model.GetCouponCodeResponseCollectionCompoundDocument;
import io.swagger.client.model.GetCouponCodeResponseCompoundDocument;
import io.swagger.client.model.GetCouponRelationshipCouponCodesListResponseCollection;
import io.swagger.client.model.GetCouponResponse;
import io.swagger.client.model.GetCouponResponseCollection;
import io.swagger.client.model.InlineResponse4XX;
import io.swagger.client.model.PatchCouponCodeResponse;
import io.swagger.client.model.PatchCouponResponse;
import io.swagger.client.model.PostCouponCodeCreateJobResponse;
import io.swagger.client.model.PostCouponCodeResponse;
import io.swagger.client.model.PostCouponResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CouponsApi {
    private ApiClient apiClient;
    private Map<String, String> headers;

    public CouponsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public CouponsApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public void setHeadersOverrides(Map<String, String> headers) {
        this.headers = headers;
    }

    /**
     * Build call for createCoupon
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call createCouponCall(CouponCreateQuery body, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/api/coupons/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call createCouponValidateBeforeCall(CouponCreateQuery body, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling createCoupon(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling createCoupon(Async)");
        }
        
        com.squareup.okhttp.Call call = createCouponCall(body, revision, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Create Coupon
     * Creates a new coupon.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;coupons:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return PostCouponResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PostCouponResponse createCoupon(CouponCreateQuery body, String revision) throws ApiException {
        ApiResponse<PostCouponResponse> resp = createCouponWithHttpInfo(body, revision);
        return resp.getData();
    }

    /**
     * Create Coupon
     * Creates a new coupon.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;coupons:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return ApiResponse&lt;PostCouponResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PostCouponResponse> createCouponWithHttpInfo(CouponCreateQuery body, String revision) throws ApiException {
        com.squareup.okhttp.Call call = createCouponValidateBeforeCall(body, revision, null, null);
        Type localVarReturnType = new TypeToken<PostCouponResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Create Coupon (asynchronously)
     * Creates a new coupon.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;coupons:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call createCouponAsync(CouponCreateQuery body, String revision, final ApiCallback<PostCouponResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = createCouponValidateBeforeCall(body, revision, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PostCouponResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for createCouponCode
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call createCouponCodeCall(CouponCodeCreateQuery body, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/api/coupon-codes/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call createCouponCodeValidateBeforeCall(CouponCodeCreateQuery body, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling createCouponCode(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling createCouponCode(Async)");
        }
        
        com.squareup.okhttp.Call call = createCouponCodeCall(body, revision, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Create Coupon Code
     * Synchronously creates a coupon code for the given coupon.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;coupon-codes:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return PostCouponCodeResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PostCouponCodeResponse createCouponCode(CouponCodeCreateQuery body, String revision) throws ApiException {
        ApiResponse<PostCouponCodeResponse> resp = createCouponCodeWithHttpInfo(body, revision);
        return resp.getData();
    }

    /**
     * Create Coupon Code
     * Synchronously creates a coupon code for the given coupon.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;coupon-codes:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return ApiResponse&lt;PostCouponCodeResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PostCouponCodeResponse> createCouponCodeWithHttpInfo(CouponCodeCreateQuery body, String revision) throws ApiException {
        com.squareup.okhttp.Call call = createCouponCodeValidateBeforeCall(body, revision, null, null);
        Type localVarReturnType = new TypeToken<PostCouponCodeResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Create Coupon Code (asynchronously)
     * Synchronously creates a coupon code for the given coupon.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;coupon-codes:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call createCouponCodeAsync(CouponCodeCreateQuery body, String revision, final ApiCallback<PostCouponCodeResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = createCouponCodeValidateBeforeCall(body, revision, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PostCouponCodeResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for deleteCoupon
     * @param id The internal id of a Coupon is equivalent to its external id stored within an integration. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteCouponCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/coupons/{id}/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteCouponValidateBeforeCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling deleteCoupon(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling deleteCoupon(Async)");
        }
        
        com.squareup.okhttp.Call call = deleteCouponCall(id, revision, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete Coupon
     * Delete the coupon with the given coupon ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;coupons:write&#x60;
     * @param id The internal id of a Coupon is equivalent to its external id stored within an integration. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void deleteCoupon(String id, String revision) throws ApiException {
        deleteCouponWithHttpInfo(id, revision);
    }

    /**
     * Delete Coupon
     * Delete the coupon with the given coupon ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;coupons:write&#x60;
     * @param id The internal id of a Coupon is equivalent to its external id stored within an integration. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> deleteCouponWithHttpInfo(String id, String revision) throws ApiException {
        com.squareup.okhttp.Call call = deleteCouponValidateBeforeCall(id, revision, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete Coupon (asynchronously)
     * Delete the coupon with the given coupon ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;coupons:write&#x60;
     * @param id The internal id of a Coupon is equivalent to its external id stored within an integration. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteCouponAsync(String id, String revision, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteCouponValidateBeforeCall(id, revision, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for deleteCouponCode
     * @param id The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteCouponCodeCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/coupon-codes/{id}/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteCouponCodeValidateBeforeCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling deleteCouponCode(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling deleteCouponCode(Async)");
        }
        
        com.squareup.okhttp.Call call = deleteCouponCodeCall(id, revision, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete Coupon Code
     * Deletes a coupon code specified by the given identifier synchronously. If a profile has been assigned to the coupon code, an exception will be raised&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;coupon-codes:write&#x60;
     * @param id The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void deleteCouponCode(String id, String revision) throws ApiException {
        deleteCouponCodeWithHttpInfo(id, revision);
    }

    /**
     * Delete Coupon Code
     * Deletes a coupon code specified by the given identifier synchronously. If a profile has been assigned to the coupon code, an exception will be raised&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;coupon-codes:write&#x60;
     * @param id The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> deleteCouponCodeWithHttpInfo(String id, String revision) throws ApiException {
        com.squareup.okhttp.Call call = deleteCouponCodeValidateBeforeCall(id, revision, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete Coupon Code (asynchronously)
     * Deletes a coupon code specified by the given identifier synchronously. If a profile has been assigned to the coupon code, an exception will be raised&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;coupon-codes:write&#x60;
     * @param id The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteCouponCodeAsync(String id, String revision, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteCouponCodeValidateBeforeCall(id, revision, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for getCoupon
     * @param id The internal id of a Coupon is equivalent to its external id stored within an integration. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getCouponCall(String id, String revision, List<String> fieldsCoupon, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/coupons/{id}/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (fieldsCoupon != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[coupon]", fieldsCoupon));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getCouponValidateBeforeCall(String id, String revision, List<String> fieldsCoupon, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getCoupon(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getCoupon(Async)");
        }
        
        com.squareup.okhttp.Call call = getCouponCall(id, revision, fieldsCoupon, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Coupon
     * Get a specific coupon with the given coupon ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupons:read&#x60;
     * @param id The internal id of a Coupon is equivalent to its external id stored within an integration. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return GetCouponResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetCouponResponse getCoupon(String id, String revision, List<String> fieldsCoupon) throws ApiException {
        ApiResponse<GetCouponResponse> resp = getCouponWithHttpInfo(id, revision, fieldsCoupon);
        return resp.getData();
    }

    /**
     * Get Coupon
     * Get a specific coupon with the given coupon ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupons:read&#x60;
     * @param id The internal id of a Coupon is equivalent to its external id stored within an integration. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return ApiResponse&lt;GetCouponResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetCouponResponse> getCouponWithHttpInfo(String id, String revision, List<String> fieldsCoupon) throws ApiException {
        com.squareup.okhttp.Call call = getCouponValidateBeforeCall(id, revision, fieldsCoupon, null, null);
        Type localVarReturnType = new TypeToken<GetCouponResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Coupon (asynchronously)
     * Get a specific coupon with the given coupon ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupons:read&#x60;
     * @param id The internal id of a Coupon is equivalent to its external id stored within an integration. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getCouponAsync(String id, String revision, List<String> fieldsCoupon, final ApiCallback<GetCouponResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getCouponValidateBeforeCall(id, revision, fieldsCoupon, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetCouponResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getCouponCode
     * @param id The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCode For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getCouponCodeCall(String id, String revision, List<String> fieldsCouponCode, List<String> fieldsCoupon, List<String> include, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/coupon-codes/{id}/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (fieldsCouponCode != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[coupon-code]", fieldsCouponCode));
        if (fieldsCoupon != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[coupon]", fieldsCoupon));
        if (include != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "include", include));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getCouponCodeValidateBeforeCall(String id, String revision, List<String> fieldsCouponCode, List<String> fieldsCoupon, List<String> include, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getCouponCode(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getCouponCode(Async)");
        }
        
        com.squareup.okhttp.Call call = getCouponCodeCall(id, revision, fieldsCouponCode, fieldsCoupon, include, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Coupon Code
     * Returns a Coupon Code specified by the given identifier.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;coupon-codes:read&#x60;
     * @param id The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCode For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return GetCouponCodeResponseCompoundDocument
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetCouponCodeResponseCompoundDocument getCouponCode(String id, String revision, List<String> fieldsCouponCode, List<String> fieldsCoupon, List<String> include) throws ApiException {
        ApiResponse<GetCouponCodeResponseCompoundDocument> resp = getCouponCodeWithHttpInfo(id, revision, fieldsCouponCode, fieldsCoupon, include);
        return resp.getData();
    }

    /**
     * Get Coupon Code
     * Returns a Coupon Code specified by the given identifier.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;coupon-codes:read&#x60;
     * @param id The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCode For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return ApiResponse&lt;GetCouponCodeResponseCompoundDocument&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetCouponCodeResponseCompoundDocument> getCouponCodeWithHttpInfo(String id, String revision, List<String> fieldsCouponCode, List<String> fieldsCoupon, List<String> include) throws ApiException {
        com.squareup.okhttp.Call call = getCouponCodeValidateBeforeCall(id, revision, fieldsCouponCode, fieldsCoupon, include, null, null);
        Type localVarReturnType = new TypeToken<GetCouponCodeResponseCompoundDocument>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Coupon Code (asynchronously)
     * Returns a Coupon Code specified by the given identifier.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;coupon-codes:read&#x60;
     * @param id The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCode For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getCouponCodeAsync(String id, String revision, List<String> fieldsCouponCode, List<String> fieldsCoupon, List<String> include, final ApiCallback<GetCouponCodeResponseCompoundDocument> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getCouponCodeValidateBeforeCall(id, revision, fieldsCouponCode, fieldsCoupon, include, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetCouponCodeResponseCompoundDocument>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getCouponCodeBulkCreateJob
     * @param jobId ID of the job to retrieve. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCodeBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCouponCode For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getCouponCodeBulkCreateJobCall(String jobId, String revision, List<String> fieldsCouponCodeBulkCreateJob, List<String> fieldsCouponCode, List<String> include, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/coupon-code-bulk-create-jobs/{job_id}/"
            .replaceAll("\\{" + "job_id" + "\\}", apiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (fieldsCouponCodeBulkCreateJob != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[coupon-code-bulk-create-job]", fieldsCouponCodeBulkCreateJob));
        if (fieldsCouponCode != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[coupon-code]", fieldsCouponCode));
        if (include != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "include", include));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getCouponCodeBulkCreateJobValidateBeforeCall(String jobId, String revision, List<String> fieldsCouponCodeBulkCreateJob, List<String> fieldsCouponCode, List<String> include, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling getCouponCodeBulkCreateJob(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getCouponCodeBulkCreateJob(Async)");
        }
        
        com.squareup.okhttp.Call call = getCouponCodeBulkCreateJobCall(jobId, revision, fieldsCouponCodeBulkCreateJob, fieldsCouponCode, include, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Coupon Code Bulk Create Job
     * Get a coupon code bulk create job with the given job ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupon-codes:read&#x60;
     * @param jobId ID of the job to retrieve. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCodeBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCouponCode For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return GetCouponCodeCreateJobResponseCompoundDocument
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetCouponCodeCreateJobResponseCompoundDocument getCouponCodeBulkCreateJob(String jobId, String revision, List<String> fieldsCouponCodeBulkCreateJob, List<String> fieldsCouponCode, List<String> include) throws ApiException {
        ApiResponse<GetCouponCodeCreateJobResponseCompoundDocument> resp = getCouponCodeBulkCreateJobWithHttpInfo(jobId, revision, fieldsCouponCodeBulkCreateJob, fieldsCouponCode, include);
        return resp.getData();
    }

    /**
     * Get Coupon Code Bulk Create Job
     * Get a coupon code bulk create job with the given job ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupon-codes:read&#x60;
     * @param jobId ID of the job to retrieve. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCodeBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCouponCode For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return ApiResponse&lt;GetCouponCodeCreateJobResponseCompoundDocument&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetCouponCodeCreateJobResponseCompoundDocument> getCouponCodeBulkCreateJobWithHttpInfo(String jobId, String revision, List<String> fieldsCouponCodeBulkCreateJob, List<String> fieldsCouponCode, List<String> include) throws ApiException {
        com.squareup.okhttp.Call call = getCouponCodeBulkCreateJobValidateBeforeCall(jobId, revision, fieldsCouponCodeBulkCreateJob, fieldsCouponCode, include, null, null);
        Type localVarReturnType = new TypeToken<GetCouponCodeCreateJobResponseCompoundDocument>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Coupon Code Bulk Create Job (asynchronously)
     * Get a coupon code bulk create job with the given job ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupon-codes:read&#x60;
     * @param jobId ID of the job to retrieve. (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCodeBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCouponCode For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getCouponCodeBulkCreateJobAsync(String jobId, String revision, List<String> fieldsCouponCodeBulkCreateJob, List<String> fieldsCouponCode, List<String> include, final ApiCallback<GetCouponCodeCreateJobResponseCompoundDocument> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getCouponCodeBulkCreateJobValidateBeforeCall(jobId, revision, fieldsCouponCodeBulkCreateJob, fieldsCouponCode, include, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetCouponCodeCreateJobResponseCompoundDocument>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getCouponCodeBulkCreateJobs
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCodeBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getCouponCodeBulkCreateJobsCall(String revision, List<String> fieldsCouponCodeBulkCreateJob, String filter, String pageCursor, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/coupon-code-bulk-create-jobs/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (fieldsCouponCodeBulkCreateJob != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[coupon-code-bulk-create-job]", fieldsCouponCodeBulkCreateJob));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("filter", filter));
        if (pageCursor != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("page[cursor]", pageCursor));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getCouponCodeBulkCreateJobsValidateBeforeCall(String revision, List<String> fieldsCouponCodeBulkCreateJob, String filter, String pageCursor, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getCouponCodeBulkCreateJobs(Async)");
        }
        
        com.squareup.okhttp.Call call = getCouponCodeBulkCreateJobsCall(revision, fieldsCouponCodeBulkCreateJob, filter, pageCursor, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Coupon Code Bulk Create Jobs
     * Get all coupon code bulk create jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupon-codes:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCodeBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return GetCouponCodeCreateJobResponseCollectionCompoundDocument
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetCouponCodeCreateJobResponseCollectionCompoundDocument getCouponCodeBulkCreateJobs(String revision, List<String> fieldsCouponCodeBulkCreateJob, String filter, String pageCursor) throws ApiException {
        ApiResponse<GetCouponCodeCreateJobResponseCollectionCompoundDocument> resp = getCouponCodeBulkCreateJobsWithHttpInfo(revision, fieldsCouponCodeBulkCreateJob, filter, pageCursor);
        return resp.getData();
    }

    /**
     * Get Coupon Code Bulk Create Jobs
     * Get all coupon code bulk create jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupon-codes:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCodeBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return ApiResponse&lt;GetCouponCodeCreateJobResponseCollectionCompoundDocument&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetCouponCodeCreateJobResponseCollectionCompoundDocument> getCouponCodeBulkCreateJobsWithHttpInfo(String revision, List<String> fieldsCouponCodeBulkCreateJob, String filter, String pageCursor) throws ApiException {
        com.squareup.okhttp.Call call = getCouponCodeBulkCreateJobsValidateBeforeCall(revision, fieldsCouponCodeBulkCreateJob, filter, pageCursor, null, null);
        Type localVarReturnType = new TypeToken<GetCouponCodeCreateJobResponseCollectionCompoundDocument>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Coupon Code Bulk Create Jobs (asynchronously)
     * Get all coupon code bulk create jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupon-codes:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCodeBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getCouponCodeBulkCreateJobsAsync(String revision, List<String> fieldsCouponCodeBulkCreateJob, String filter, String pageCursor, final ApiCallback<GetCouponCodeCreateJobResponseCollectionCompoundDocument> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getCouponCodeBulkCreateJobsValidateBeforeCall(revision, fieldsCouponCodeBulkCreateJob, filter, pageCursor, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetCouponCodeCreateJobResponseCollectionCompoundDocument>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getCouponCodeRelationshipsCoupon
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getCouponCodeRelationshipsCouponCall(String id, String revision, String pageCursor, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/coupons/{id}/relationships/coupon-codes/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (pageCursor != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("page[cursor]", pageCursor));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getCouponCodeRelationshipsCouponValidateBeforeCall(String id, String revision, String pageCursor, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getCouponCodeRelationshipsCoupon(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getCouponCodeRelationshipsCoupon(Async)");
        }
        
        com.squareup.okhttp.Call call = getCouponCodeRelationshipsCouponCall(id, revision, pageCursor, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Coupon Code Relationships Coupon
     * Gets a list of coupon code relationships associated with the given coupon id&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupon-codes:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return GetCouponRelationshipCouponCodesListResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetCouponRelationshipCouponCodesListResponseCollection getCouponCodeRelationshipsCoupon(String id, String revision, String pageCursor) throws ApiException {
        ApiResponse<GetCouponRelationshipCouponCodesListResponseCollection> resp = getCouponCodeRelationshipsCouponWithHttpInfo(id, revision, pageCursor);
        return resp.getData();
    }

    /**
     * Get Coupon Code Relationships Coupon
     * Gets a list of coupon code relationships associated with the given coupon id&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupon-codes:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return ApiResponse&lt;GetCouponRelationshipCouponCodesListResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetCouponRelationshipCouponCodesListResponseCollection> getCouponCodeRelationshipsCouponWithHttpInfo(String id, String revision, String pageCursor) throws ApiException {
        com.squareup.okhttp.Call call = getCouponCodeRelationshipsCouponValidateBeforeCall(id, revision, pageCursor, null, null);
        Type localVarReturnType = new TypeToken<GetCouponRelationshipCouponCodesListResponseCollection>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Coupon Code Relationships Coupon (asynchronously)
     * Gets a list of coupon code relationships associated with the given coupon id&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupon-codes:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getCouponCodeRelationshipsCouponAsync(String id, String revision, String pageCursor, final ApiCallback<GetCouponRelationshipCouponCodesListResponseCollection> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getCouponCodeRelationshipsCouponValidateBeforeCall(id, revision, pageCursor, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetCouponRelationshipCouponCodesListResponseCollection>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getCouponCodes
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCode For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;expires_at&#x60;: &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;coupon.id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;profile.id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60; (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getCouponCodesCall(String revision, List<String> fieldsCouponCode, List<String> fieldsCoupon, String filter, List<String> include, String pageCursor, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/coupon-codes/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (fieldsCouponCode != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[coupon-code]", fieldsCouponCode));
        if (fieldsCoupon != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[coupon]", fieldsCoupon));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("filter", filter));
        if (include != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "include", include));
        if (pageCursor != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("page[cursor]", pageCursor));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getCouponCodesValidateBeforeCall(String revision, List<String> fieldsCouponCode, List<String> fieldsCoupon, String filter, List<String> include, String pageCursor, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getCouponCodes(Async)");
        }
        
        com.squareup.okhttp.Call call = getCouponCodesCall(revision, fieldsCouponCode, fieldsCoupon, filter, include, pageCursor, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Coupon Codes
     * Gets a list of coupon codes associated with a coupon/coupons or a profile/profiles.  A coupon/coupons or a profile/profiles must be provided as required filter params.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;coupon-codes:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCode For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;expires_at&#x60;: &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;coupon.id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;profile.id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60; (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return GetCouponCodeResponseCollectionCompoundDocument
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetCouponCodeResponseCollectionCompoundDocument getCouponCodes(String revision, List<String> fieldsCouponCode, List<String> fieldsCoupon, String filter, List<String> include, String pageCursor) throws ApiException {
        ApiResponse<GetCouponCodeResponseCollectionCompoundDocument> resp = getCouponCodesWithHttpInfo(revision, fieldsCouponCode, fieldsCoupon, filter, include, pageCursor);
        return resp.getData();
    }

    /**
     * Get Coupon Codes
     * Gets a list of coupon codes associated with a coupon/coupons or a profile/profiles.  A coupon/coupons or a profile/profiles must be provided as required filter params.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;coupon-codes:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCode For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;expires_at&#x60;: &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;coupon.id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;profile.id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60; (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return ApiResponse&lt;GetCouponCodeResponseCollectionCompoundDocument&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetCouponCodeResponseCollectionCompoundDocument> getCouponCodesWithHttpInfo(String revision, List<String> fieldsCouponCode, List<String> fieldsCoupon, String filter, List<String> include, String pageCursor) throws ApiException {
        com.squareup.okhttp.Call call = getCouponCodesValidateBeforeCall(revision, fieldsCouponCode, fieldsCoupon, filter, include, pageCursor, null, null);
        Type localVarReturnType = new TypeToken<GetCouponCodeResponseCollectionCompoundDocument>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Coupon Codes (asynchronously)
     * Gets a list of coupon codes associated with a coupon/coupons or a profile/profiles.  A coupon/coupons or a profile/profiles must be provided as required filter params.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;coupon-codes:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCode For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;expires_at&#x60;: &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;coupon.id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;profile.id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60; (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getCouponCodesAsync(String revision, List<String> fieldsCouponCode, List<String> fieldsCoupon, String filter, List<String> include, String pageCursor, final ApiCallback<GetCouponCodeResponseCollectionCompoundDocument> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getCouponCodesValidateBeforeCall(revision, fieldsCouponCode, fieldsCoupon, filter, include, pageCursor, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetCouponCodeResponseCollectionCompoundDocument>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getCouponCodesForCoupon
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCode For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;expires_at&#x60;: &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;coupon.id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;profile.id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getCouponCodesForCouponCall(String id, String revision, List<String> fieldsCouponCode, String filter, String pageCursor, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/coupons/{id}/coupon-codes/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (fieldsCouponCode != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[coupon-code]", fieldsCouponCode));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("filter", filter));
        if (pageCursor != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("page[cursor]", pageCursor));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getCouponCodesForCouponValidateBeforeCall(String id, String revision, List<String> fieldsCouponCode, String filter, String pageCursor, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getCouponCodesForCoupon(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getCouponCodesForCoupon(Async)");
        }
        
        com.squareup.okhttp.Call call = getCouponCodesForCouponCall(id, revision, fieldsCouponCode, filter, pageCursor, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Coupon Codes For Coupon
     * Gets a list of coupon codes associated with the given coupon id&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupon-codes:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCode For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;expires_at&#x60;: &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;coupon.id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;profile.id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return GetCouponCodeResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetCouponCodeResponseCollection getCouponCodesForCoupon(String id, String revision, List<String> fieldsCouponCode, String filter, String pageCursor) throws ApiException {
        ApiResponse<GetCouponCodeResponseCollection> resp = getCouponCodesForCouponWithHttpInfo(id, revision, fieldsCouponCode, filter, pageCursor);
        return resp.getData();
    }

    /**
     * Get Coupon Codes For Coupon
     * Gets a list of coupon codes associated with the given coupon id&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupon-codes:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCode For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;expires_at&#x60;: &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;coupon.id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;profile.id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return ApiResponse&lt;GetCouponCodeResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetCouponCodeResponseCollection> getCouponCodesForCouponWithHttpInfo(String id, String revision, List<String> fieldsCouponCode, String filter, String pageCursor) throws ApiException {
        com.squareup.okhttp.Call call = getCouponCodesForCouponValidateBeforeCall(id, revision, fieldsCouponCode, filter, pageCursor, null, null);
        Type localVarReturnType = new TypeToken<GetCouponCodeResponseCollection>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Coupon Codes For Coupon (asynchronously)
     * Gets a list of coupon codes associated with the given coupon id&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupon-codes:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCouponCode For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;expires_at&#x60;: &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;coupon.id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;profile.id&#x60;: &#x60;any&#x60;, &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getCouponCodesForCouponAsync(String id, String revision, List<String> fieldsCouponCode, String filter, String pageCursor, final ApiCallback<GetCouponCodeResponseCollection> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getCouponCodesForCouponValidateBeforeCall(id, revision, fieldsCouponCode, filter, pageCursor, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetCouponCodeResponseCollection>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getCouponForCouponCode
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getCouponForCouponCodeCall(String id, String revision, List<String> fieldsCoupon, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/coupon-codes/{id}/coupon/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (fieldsCoupon != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[coupon]", fieldsCoupon));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getCouponForCouponCodeValidateBeforeCall(String id, String revision, List<String> fieldsCoupon, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getCouponForCouponCode(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getCouponForCouponCode(Async)");
        }
        
        com.squareup.okhttp.Call call = getCouponForCouponCodeCall(id, revision, fieldsCoupon, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Coupon For Coupon Code
     * Get the coupon associated with a given coupon code ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupons:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return GetCouponResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetCouponResponseCollection getCouponForCouponCode(String id, String revision, List<String> fieldsCoupon) throws ApiException {
        ApiResponse<GetCouponResponseCollection> resp = getCouponForCouponCodeWithHttpInfo(id, revision, fieldsCoupon);
        return resp.getData();
    }

    /**
     * Get Coupon For Coupon Code
     * Get the coupon associated with a given coupon code ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupons:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return ApiResponse&lt;GetCouponResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetCouponResponseCollection> getCouponForCouponCodeWithHttpInfo(String id, String revision, List<String> fieldsCoupon) throws ApiException {
        com.squareup.okhttp.Call call = getCouponForCouponCodeValidateBeforeCall(id, revision, fieldsCoupon, null, null);
        Type localVarReturnType = new TypeToken<GetCouponResponseCollection>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Coupon For Coupon Code (asynchronously)
     * Get the coupon associated with a given coupon code ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupons:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getCouponForCouponCodeAsync(String id, String revision, List<String> fieldsCoupon, final ApiCallback<GetCouponResponseCollection> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getCouponForCouponCodeValidateBeforeCall(id, revision, fieldsCoupon, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetCouponResponseCollection>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getCouponRelationshipsCouponCodes
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getCouponRelationshipsCouponCodesCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/coupon-codes/{id}/relationships/coupon/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getCouponRelationshipsCouponCodesValidateBeforeCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getCouponRelationshipsCouponCodes(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getCouponRelationshipsCouponCodes(Async)");
        }
        
        com.squareup.okhttp.Call call = getCouponRelationshipsCouponCodesCall(id, revision, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Coupon Relationships Coupon Codes
     * Gets the coupon relationship associated with the given coupon code id&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupons:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return GetCouponCodeRelationshipCouponResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetCouponCodeRelationshipCouponResponse getCouponRelationshipsCouponCodes(String id, String revision) throws ApiException {
        ApiResponse<GetCouponCodeRelationshipCouponResponse> resp = getCouponRelationshipsCouponCodesWithHttpInfo(id, revision);
        return resp.getData();
    }

    /**
     * Get Coupon Relationships Coupon Codes
     * Gets the coupon relationship associated with the given coupon code id&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupons:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return ApiResponse&lt;GetCouponCodeRelationshipCouponResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetCouponCodeRelationshipCouponResponse> getCouponRelationshipsCouponCodesWithHttpInfo(String id, String revision) throws ApiException {
        com.squareup.okhttp.Call call = getCouponRelationshipsCouponCodesValidateBeforeCall(id, revision, null, null);
        Type localVarReturnType = new TypeToken<GetCouponCodeRelationshipCouponResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Coupon Relationships Coupon Codes (asynchronously)
     * Gets the coupon relationship associated with the given coupon code id&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupons:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getCouponRelationshipsCouponCodesAsync(String id, String revision, final ApiCallback<GetCouponCodeRelationshipCouponResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getCouponRelationshipsCouponCodesValidateBeforeCall(id, revision, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetCouponCodeRelationshipCouponResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getCoupons
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getCouponsCall(String revision, List<String> fieldsCoupon, String pageCursor, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/coupons/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (fieldsCoupon != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[coupon]", fieldsCoupon));
        if (pageCursor != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("page[cursor]", pageCursor));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getCouponsValidateBeforeCall(String revision, List<String> fieldsCoupon, String pageCursor, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getCoupons(Async)");
        }
        
        com.squareup.okhttp.Call call = getCouponsCall(revision, fieldsCoupon, pageCursor, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Coupons
     * Get all coupons in an account.  To learn more, see our [Coupons API guide](https://developers.klaviyo.com/en/docs/use_klaviyos_coupons_api).&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupons:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return GetCouponResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetCouponResponseCollection getCoupons(String revision, List<String> fieldsCoupon, String pageCursor) throws ApiException {
        ApiResponse<GetCouponResponseCollection> resp = getCouponsWithHttpInfo(revision, fieldsCoupon, pageCursor);
        return resp.getData();
    }

    /**
     * Get Coupons
     * Get all coupons in an account.  To learn more, see our [Coupons API guide](https://developers.klaviyo.com/en/docs/use_klaviyos_coupons_api).&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupons:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return ApiResponse&lt;GetCouponResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetCouponResponseCollection> getCouponsWithHttpInfo(String revision, List<String> fieldsCoupon, String pageCursor) throws ApiException {
        com.squareup.okhttp.Call call = getCouponsValidateBeforeCall(revision, fieldsCoupon, pageCursor, null, null);
        Type localVarReturnType = new TypeToken<GetCouponResponseCollection>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Coupons (asynchronously)
     * Get all coupons in an account.  To learn more, see our [Coupons API guide](https://developers.klaviyo.com/en/docs/use_klaviyos_coupons_api).&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupons:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsCoupon For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getCouponsAsync(String revision, List<String> fieldsCoupon, String pageCursor, final ApiCallback<GetCouponResponseCollection> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getCouponsValidateBeforeCall(revision, fieldsCoupon, pageCursor, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetCouponResponseCollection>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for spawnCouponCodeBulkCreateJob
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call spawnCouponCodeBulkCreateJobCall(CouponCodeCreateJobCreateQuery body, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/api/coupon-code-bulk-create-jobs/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call spawnCouponCodeBulkCreateJobValidateBeforeCall(CouponCodeCreateJobCreateQuery body, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling spawnCouponCodeBulkCreateJob(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling spawnCouponCodeBulkCreateJob(Async)");
        }
        
        com.squareup.okhttp.Call call = spawnCouponCodeBulkCreateJobCall(body, revision, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Spawn Coupon Code Bulk Create Job
     * Create a coupon-code-bulk-create-job to bulk create a list of coupon codes.  Max number of coupon codes per job we allow for is 1000. Max number of jobs queued at once we allow for is 100.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupon-codes:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return PostCouponCodeCreateJobResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PostCouponCodeCreateJobResponse spawnCouponCodeBulkCreateJob(CouponCodeCreateJobCreateQuery body, String revision) throws ApiException {
        ApiResponse<PostCouponCodeCreateJobResponse> resp = spawnCouponCodeBulkCreateJobWithHttpInfo(body, revision);
        return resp.getData();
    }

    /**
     * Spawn Coupon Code Bulk Create Job
     * Create a coupon-code-bulk-create-job to bulk create a list of coupon codes.  Max number of coupon codes per job we allow for is 1000. Max number of jobs queued at once we allow for is 100.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupon-codes:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return ApiResponse&lt;PostCouponCodeCreateJobResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PostCouponCodeCreateJobResponse> spawnCouponCodeBulkCreateJobWithHttpInfo(CouponCodeCreateJobCreateQuery body, String revision) throws ApiException {
        com.squareup.okhttp.Call call = spawnCouponCodeBulkCreateJobValidateBeforeCall(body, revision, null, null);
        Type localVarReturnType = new TypeToken<PostCouponCodeCreateJobResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Spawn Coupon Code Bulk Create Job (asynchronously)
     * Create a coupon-code-bulk-create-job to bulk create a list of coupon codes.  Max number of coupon codes per job we allow for is 1000. Max number of jobs queued at once we allow for is 100.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;coupon-codes:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call spawnCouponCodeBulkCreateJobAsync(CouponCodeCreateJobCreateQuery body, String revision, final ApiCallback<PostCouponCodeCreateJobResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = spawnCouponCodeBulkCreateJobValidateBeforeCall(body, revision, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PostCouponCodeCreateJobResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for updateCoupon
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id The internal id of a Coupon is equivalent to its external id stored within an integration. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call updateCouponCall(CouponUpdateQuery body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/api/coupons/{id}/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call updateCouponValidateBeforeCall(CouponUpdateQuery body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling updateCoupon(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling updateCoupon(Async)");
        }
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling updateCoupon(Async)");
        }
        
        com.squareup.okhttp.Call call = updateCouponCall(body, revision, id, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Update Coupon
     * *Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;coupons:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id The internal id of a Coupon is equivalent to its external id stored within an integration. (required)
     * @return PatchCouponResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PatchCouponResponse updateCoupon(CouponUpdateQuery body, String revision, String id) throws ApiException {
        ApiResponse<PatchCouponResponse> resp = updateCouponWithHttpInfo(body, revision, id);
        return resp.getData();
    }

    /**
     * Update Coupon
     * *Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;coupons:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id The internal id of a Coupon is equivalent to its external id stored within an integration. (required)
     * @return ApiResponse&lt;PatchCouponResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PatchCouponResponse> updateCouponWithHttpInfo(CouponUpdateQuery body, String revision, String id) throws ApiException {
        com.squareup.okhttp.Call call = updateCouponValidateBeforeCall(body, revision, id, null, null);
        Type localVarReturnType = new TypeToken<PatchCouponResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Update Coupon (asynchronously)
     * *Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;coupons:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id The internal id of a Coupon is equivalent to its external id stored within an integration. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call updateCouponAsync(CouponUpdateQuery body, String revision, String id, final ApiCallback<PatchCouponResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = updateCouponValidateBeforeCall(body, revision, id, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PatchCouponResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for updateCouponCode
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with. (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call updateCouponCodeCall(CouponCodeUpdateQuery body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/api/coupon-codes/{id}/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call updateCouponCodeValidateBeforeCall(CouponCodeUpdateQuery body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling updateCouponCode(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling updateCouponCode(Async)");
        }
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling updateCouponCode(Async)");
        }
        
        com.squareup.okhttp.Call call = updateCouponCodeCall(body, revision, id, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Update Coupon Code
     * Updates a coupon code specified by the given identifier synchronously. We allow updating the &#x27;status&#x27; and &#x27;expires_at&#x27; of coupon codes.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;coupon-codes:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with. (required)
     * @return PatchCouponCodeResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PatchCouponCodeResponse updateCouponCode(CouponCodeUpdateQuery body, String revision, String id) throws ApiException {
        ApiResponse<PatchCouponCodeResponse> resp = updateCouponCodeWithHttpInfo(body, revision, id);
        return resp.getData();
    }

    /**
     * Update Coupon Code
     * Updates a coupon code specified by the given identifier synchronously. We allow updating the &#x27;status&#x27; and &#x27;expires_at&#x27; of coupon codes.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;coupon-codes:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with. (required)
     * @return ApiResponse&lt;PatchCouponCodeResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PatchCouponCodeResponse> updateCouponCodeWithHttpInfo(CouponCodeUpdateQuery body, String revision, String id) throws ApiException {
        com.squareup.okhttp.Call call = updateCouponCodeValidateBeforeCall(body, revision, id, null, null);
        Type localVarReturnType = new TypeToken<PatchCouponCodeResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Update Coupon Code (asynchronously)
     * Updates a coupon code specified by the given identifier synchronously. We allow updating the &#x27;status&#x27; and &#x27;expires_at&#x27; of coupon codes.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;coupon-codes:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with. (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call updateCouponCodeAsync(CouponCodeUpdateQuery body, String revision, String id, final ApiCallback<PatchCouponCodeResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = updateCouponCodeValidateBeforeCall(body, revision, id, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PatchCouponCodeResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}

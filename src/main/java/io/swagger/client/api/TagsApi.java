/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.DeleteTagGroupResponse;
import io.swagger.client.model.GetTagCampaignRelationshipsResponseCollection;
import io.swagger.client.model.GetTagFlowRelationshipsResponseCollection;
import io.swagger.client.model.GetTagGroupResponse;
import io.swagger.client.model.GetTagGroupResponseCollection;
import io.swagger.client.model.GetTagGroupTagRelationshipsResponseCollection;
import io.swagger.client.model.GetTagListRelationshipsResponseCollection;
import io.swagger.client.model.GetTagResponseCollection;
import io.swagger.client.model.GetTagResponseCollectionCompoundDocument;
import io.swagger.client.model.GetTagResponseCompoundDocument;
import io.swagger.client.model.GetTagSegmentRelationshipsResponseCollection;
import io.swagger.client.model.GetTagTagGroupRelationshipsResponse;
import io.swagger.client.model.InlineResponse4XX;
import io.swagger.client.model.PatchTagGroupResponse;
import io.swagger.client.model.PostTagGroupResponse;
import io.swagger.client.model.PostTagResponse;
import io.swagger.client.model.TagCampaignOp;
import io.swagger.client.model.TagCreateQuery;
import io.swagger.client.model.TagFlowOp;
import io.swagger.client.model.TagGroupCreateQuery;
import io.swagger.client.model.TagGroupUpdateQuery;
import io.swagger.client.model.TagListOp;
import io.swagger.client.model.TagSegmentOp;
import io.swagger.client.model.TagUpdateQuery;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TagsApi {
    private ApiClient apiClient;
    private Map<String, String> headers;

    public TagsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public TagsApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public void setHeadersOverrides(Map<String, String> headers) {
        this.headers = headers;
    }

    /**
     * Build call for createTag
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call createTagCall(TagCreateQuery body, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/api/tags/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call createTagValidateBeforeCall(TagCreateQuery body, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling createTag(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling createTag(Async)");
        }
        
        com.squareup.okhttp.Call call = createTagCall(body, revision, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Create Tag
     * Create a tag. An account cannot have more than **500** unique tags.  A tag belongs to a single tag group. If the &#x60;tag_group_id&#x60; is not specified, the tag is added to the account&#x27;s default tag group.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return PostTagResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PostTagResponse createTag(TagCreateQuery body, String revision) throws ApiException {
        ApiResponse<PostTagResponse> resp = createTagWithHttpInfo(body, revision);
        return resp.getData();
    }

    /**
     * Create Tag
     * Create a tag. An account cannot have more than **500** unique tags.  A tag belongs to a single tag group. If the &#x60;tag_group_id&#x60; is not specified, the tag is added to the account&#x27;s default tag group.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return ApiResponse&lt;PostTagResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PostTagResponse> createTagWithHttpInfo(TagCreateQuery body, String revision) throws ApiException {
        com.squareup.okhttp.Call call = createTagValidateBeforeCall(body, revision, null, null);
        Type localVarReturnType = new TypeToken<PostTagResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Create Tag (asynchronously)
     * Create a tag. An account cannot have more than **500** unique tags.  A tag belongs to a single tag group. If the &#x60;tag_group_id&#x60; is not specified, the tag is added to the account&#x27;s default tag group.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call createTagAsync(TagCreateQuery body, String revision, final ApiCallback<PostTagResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = createTagValidateBeforeCall(body, revision, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PostTagResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for createTagGroup
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call createTagGroupCall(TagGroupCreateQuery body, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/api/tag-groups/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call createTagGroupValidateBeforeCall(TagGroupCreateQuery body, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling createTagGroup(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling createTagGroup(Async)");
        }
        
        com.squareup.okhttp.Call call = createTagGroupCall(body, revision, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Create Tag Group
     * Create a tag group. An account cannot have more than **50** unique tag groups.  If &#x60;exclusive&#x60; is not specified &#x60;true&#x60; or &#x60;false&#x60;, the tag group defaults to non-exclusive.  If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return PostTagGroupResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PostTagGroupResponse createTagGroup(TagGroupCreateQuery body, String revision) throws ApiException {
        ApiResponse<PostTagGroupResponse> resp = createTagGroupWithHttpInfo(body, revision);
        return resp.getData();
    }

    /**
     * Create Tag Group
     * Create a tag group. An account cannot have more than **50** unique tag groups.  If &#x60;exclusive&#x60; is not specified &#x60;true&#x60; or &#x60;false&#x60;, the tag group defaults to non-exclusive.  If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return ApiResponse&lt;PostTagGroupResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PostTagGroupResponse> createTagGroupWithHttpInfo(TagGroupCreateQuery body, String revision) throws ApiException {
        com.squareup.okhttp.Call call = createTagGroupValidateBeforeCall(body, revision, null, null);
        Type localVarReturnType = new TypeToken<PostTagGroupResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Create Tag Group (asynchronously)
     * Create a tag group. An account cannot have more than **50** unique tag groups.  If &#x60;exclusive&#x60; is not specified &#x60;true&#x60; or &#x60;false&#x60;, the tag group defaults to non-exclusive.  If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call createTagGroupAsync(TagGroupCreateQuery body, String revision, final ApiCallback<PostTagGroupResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = createTagGroupValidateBeforeCall(body, revision, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PostTagGroupResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for createTagRelationshipsCampaigns
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call createTagRelationshipsCampaignsCall(TagCampaignOp body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/api/tags/{id}/relationships/campaigns/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call createTagRelationshipsCampaignsValidateBeforeCall(TagCampaignOp body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling createTagRelationshipsCampaigns(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling createTagRelationshipsCampaigns(Async)");
        }
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling createTagRelationshipsCampaigns(Async)");
        }
        
        com.squareup.okhttp.Call call = createTagRelationshipsCampaignsCall(body, revision, id, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Create Tag Relationships Campaigns
     * Associate a tag with one or more campaigns. Any campaign cannot be associated with more than **100** tags.   Use the request body to pass in the ID(s) of the campaign(s) that will be associated with the tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;campaigns:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void createTagRelationshipsCampaigns(TagCampaignOp body, String revision, String id) throws ApiException {
        createTagRelationshipsCampaignsWithHttpInfo(body, revision, id);
    }

    /**
     * Create Tag Relationships Campaigns
     * Associate a tag with one or more campaigns. Any campaign cannot be associated with more than **100** tags.   Use the request body to pass in the ID(s) of the campaign(s) that will be associated with the tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;campaigns:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> createTagRelationshipsCampaignsWithHttpInfo(TagCampaignOp body, String revision, String id) throws ApiException {
        com.squareup.okhttp.Call call = createTagRelationshipsCampaignsValidateBeforeCall(body, revision, id, null, null);
        return apiClient.execute(call);
    }

    /**
     * Create Tag Relationships Campaigns (asynchronously)
     * Associate a tag with one or more campaigns. Any campaign cannot be associated with more than **100** tags.   Use the request body to pass in the ID(s) of the campaign(s) that will be associated with the tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;campaigns:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call createTagRelationshipsCampaignsAsync(TagCampaignOp body, String revision, String id, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = createTagRelationshipsCampaignsValidateBeforeCall(body, revision, id, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for createTagRelationshipsFlows
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call createTagRelationshipsFlowsCall(TagFlowOp body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/api/tags/{id}/relationships/flows/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call createTagRelationshipsFlowsValidateBeforeCall(TagFlowOp body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling createTagRelationshipsFlows(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling createTagRelationshipsFlows(Async)");
        }
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling createTagRelationshipsFlows(Async)");
        }
        
        com.squareup.okhttp.Call call = createTagRelationshipsFlowsCall(body, revision, id, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Create Tag Relationships Flows
     * Associate a tag with one or more flows. Any flow cannot be associated with more than **100** tags.   Use the request body to pass in the ID(s) of the flow(s) that will be associated with the tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void createTagRelationshipsFlows(TagFlowOp body, String revision, String id) throws ApiException {
        createTagRelationshipsFlowsWithHttpInfo(body, revision, id);
    }

    /**
     * Create Tag Relationships Flows
     * Associate a tag with one or more flows. Any flow cannot be associated with more than **100** tags.   Use the request body to pass in the ID(s) of the flow(s) that will be associated with the tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> createTagRelationshipsFlowsWithHttpInfo(TagFlowOp body, String revision, String id) throws ApiException {
        com.squareup.okhttp.Call call = createTagRelationshipsFlowsValidateBeforeCall(body, revision, id, null, null);
        return apiClient.execute(call);
    }

    /**
     * Create Tag Relationships Flows (asynchronously)
     * Associate a tag with one or more flows. Any flow cannot be associated with more than **100** tags.   Use the request body to pass in the ID(s) of the flow(s) that will be associated with the tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call createTagRelationshipsFlowsAsync(TagFlowOp body, String revision, String id, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = createTagRelationshipsFlowsValidateBeforeCall(body, revision, id, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for createTagRelationshipsLists
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call createTagRelationshipsListsCall(TagListOp body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/api/tags/{id}/relationships/lists/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call createTagRelationshipsListsValidateBeforeCall(TagListOp body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling createTagRelationshipsLists(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling createTagRelationshipsLists(Async)");
        }
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling createTagRelationshipsLists(Async)");
        }
        
        com.squareup.okhttp.Call call = createTagRelationshipsListsCall(body, revision, id, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Create Tag Relationships Lists
     * Associate a tag with one or more lists. Any list cannot be associated with more than **100** tags.   Use the request body to pass in the ID(s) of the lists(s) that will be associated with the tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;lists:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void createTagRelationshipsLists(TagListOp body, String revision, String id) throws ApiException {
        createTagRelationshipsListsWithHttpInfo(body, revision, id);
    }

    /**
     * Create Tag Relationships Lists
     * Associate a tag with one or more lists. Any list cannot be associated with more than **100** tags.   Use the request body to pass in the ID(s) of the lists(s) that will be associated with the tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;lists:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> createTagRelationshipsListsWithHttpInfo(TagListOp body, String revision, String id) throws ApiException {
        com.squareup.okhttp.Call call = createTagRelationshipsListsValidateBeforeCall(body, revision, id, null, null);
        return apiClient.execute(call);
    }

    /**
     * Create Tag Relationships Lists (asynchronously)
     * Associate a tag with one or more lists. Any list cannot be associated with more than **100** tags.   Use the request body to pass in the ID(s) of the lists(s) that will be associated with the tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;lists:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call createTagRelationshipsListsAsync(TagListOp body, String revision, String id, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = createTagRelationshipsListsValidateBeforeCall(body, revision, id, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for createTagRelationshipsSegments
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call createTagRelationshipsSegmentsCall(TagSegmentOp body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/api/tags/{id}/relationships/segments/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call createTagRelationshipsSegmentsValidateBeforeCall(TagSegmentOp body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling createTagRelationshipsSegments(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling createTagRelationshipsSegments(Async)");
        }
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling createTagRelationshipsSegments(Async)");
        }
        
        com.squareup.okhttp.Call call = createTagRelationshipsSegmentsCall(body, revision, id, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Create Tag Relationships Segments
     * Associate a tag with one or more segments. Any segment cannot be associated with more than **100** tags.   Use the request body to pass in the ID(s) of the segments(s) that will be associated with the tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;segments:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void createTagRelationshipsSegments(TagSegmentOp body, String revision, String id) throws ApiException {
        createTagRelationshipsSegmentsWithHttpInfo(body, revision, id);
    }

    /**
     * Create Tag Relationships Segments
     * Associate a tag with one or more segments. Any segment cannot be associated with more than **100** tags.   Use the request body to pass in the ID(s) of the segments(s) that will be associated with the tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;segments:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> createTagRelationshipsSegmentsWithHttpInfo(TagSegmentOp body, String revision, String id) throws ApiException {
        com.squareup.okhttp.Call call = createTagRelationshipsSegmentsValidateBeforeCall(body, revision, id, null, null);
        return apiClient.execute(call);
    }

    /**
     * Create Tag Relationships Segments (asynchronously)
     * Associate a tag with one or more segments. Any segment cannot be associated with more than **100** tags.   Use the request body to pass in the ID(s) of the segments(s) that will be associated with the tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;segments:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call createTagRelationshipsSegmentsAsync(TagSegmentOp body, String revision, String id, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = createTagRelationshipsSegmentsValidateBeforeCall(body, revision, id, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for deleteTag
     * @param id The Tag ID (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteTagCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/tags/{id}/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteTagValidateBeforeCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling deleteTag(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling deleteTag(Async)");
        }
        
        com.squareup.okhttp.Call call = deleteTagCall(id, revision, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete Tag
     * Delete the tag with the given tag ID. Any associations between the tag and other resources will also be removed.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60; &#x60;tags:write&#x60;
     * @param id The Tag ID (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void deleteTag(String id, String revision) throws ApiException {
        deleteTagWithHttpInfo(id, revision);
    }

    /**
     * Delete Tag
     * Delete the tag with the given tag ID. Any associations between the tag and other resources will also be removed.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60; &#x60;tags:write&#x60;
     * @param id The Tag ID (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> deleteTagWithHttpInfo(String id, String revision) throws ApiException {
        com.squareup.okhttp.Call call = deleteTagValidateBeforeCall(id, revision, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete Tag (asynchronously)
     * Delete the tag with the given tag ID. Any associations between the tag and other resources will also be removed.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60; &#x60;tags:write&#x60;
     * @param id The Tag ID (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteTagAsync(String id, String revision, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteTagValidateBeforeCall(id, revision, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for deleteTagGroup
     * @param id The Tag Group ID (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteTagGroupCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/tag-groups/{id}/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteTagGroupValidateBeforeCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling deleteTagGroup(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling deleteTagGroup(Async)");
        }
        
        com.squareup.okhttp.Call call = deleteTagGroupCall(id, revision, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete Tag Group
     * Delete the tag group with the given tag group ID.  Any tags inside that tag group, and any associations between those tags and other resources, will also be removed. The default tag group cannot be deleted.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60; &#x60;tags:write&#x60;
     * @param id The Tag Group ID (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return DeleteTagGroupResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public DeleteTagGroupResponse deleteTagGroup(String id, String revision) throws ApiException {
        ApiResponse<DeleteTagGroupResponse> resp = deleteTagGroupWithHttpInfo(id, revision);
        return resp.getData();
    }

    /**
     * Delete Tag Group
     * Delete the tag group with the given tag group ID.  Any tags inside that tag group, and any associations between those tags and other resources, will also be removed. The default tag group cannot be deleted.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60; &#x60;tags:write&#x60;
     * @param id The Tag Group ID (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return ApiResponse&lt;DeleteTagGroupResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<DeleteTagGroupResponse> deleteTagGroupWithHttpInfo(String id, String revision) throws ApiException {
        com.squareup.okhttp.Call call = deleteTagGroupValidateBeforeCall(id, revision, null, null);
        Type localVarReturnType = new TypeToken<DeleteTagGroupResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Delete Tag Group (asynchronously)
     * Delete the tag group with the given tag group ID.  Any tags inside that tag group, and any associations between those tags and other resources, will also be removed. The default tag group cannot be deleted.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60; &#x60;tags:write&#x60;
     * @param id The Tag Group ID (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteTagGroupAsync(String id, String revision, final ApiCallback<DeleteTagGroupResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteTagGroupValidateBeforeCall(id, revision, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<DeleteTagGroupResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for deleteTagRelationshipsCampaigns
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteTagRelationshipsCampaignsCall(TagCampaignOp body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/api/tags/{id}/relationships/campaigns/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteTagRelationshipsCampaignsValidateBeforeCall(TagCampaignOp body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling deleteTagRelationshipsCampaigns(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling deleteTagRelationshipsCampaigns(Async)");
        }
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling deleteTagRelationshipsCampaigns(Async)");
        }
        
        com.squareup.okhttp.Call call = deleteTagRelationshipsCampaignsCall(body, revision, id, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete Tag Relationships Campaigns
     * Remove a tag&#x27;s association with one or more campaigns.   Use the request body to pass in the ID(s) of the campaign(s) whose association with the tag will be removed.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;campaigns:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void deleteTagRelationshipsCampaigns(TagCampaignOp body, String revision, String id) throws ApiException {
        deleteTagRelationshipsCampaignsWithHttpInfo(body, revision, id);
    }

    /**
     * Delete Tag Relationships Campaigns
     * Remove a tag&#x27;s association with one or more campaigns.   Use the request body to pass in the ID(s) of the campaign(s) whose association with the tag will be removed.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;campaigns:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> deleteTagRelationshipsCampaignsWithHttpInfo(TagCampaignOp body, String revision, String id) throws ApiException {
        com.squareup.okhttp.Call call = deleteTagRelationshipsCampaignsValidateBeforeCall(body, revision, id, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete Tag Relationships Campaigns (asynchronously)
     * Remove a tag&#x27;s association with one or more campaigns.   Use the request body to pass in the ID(s) of the campaign(s) whose association with the tag will be removed.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;campaigns:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteTagRelationshipsCampaignsAsync(TagCampaignOp body, String revision, String id, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteTagRelationshipsCampaignsValidateBeforeCall(body, revision, id, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for deleteTagRelationshipsFlows
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteTagRelationshipsFlowsCall(TagFlowOp body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/api/tags/{id}/relationships/flows/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteTagRelationshipsFlowsValidateBeforeCall(TagFlowOp body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling deleteTagRelationshipsFlows(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling deleteTagRelationshipsFlows(Async)");
        }
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling deleteTagRelationshipsFlows(Async)");
        }
        
        com.squareup.okhttp.Call call = deleteTagRelationshipsFlowsCall(body, revision, id, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete Tag Relationships Flows
     * Remove a tag&#x27;s association with one or more flows.   Use the request body to pass in the ID(s) of the flows(s) whose association with the tag will be removed.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void deleteTagRelationshipsFlows(TagFlowOp body, String revision, String id) throws ApiException {
        deleteTagRelationshipsFlowsWithHttpInfo(body, revision, id);
    }

    /**
     * Delete Tag Relationships Flows
     * Remove a tag&#x27;s association with one or more flows.   Use the request body to pass in the ID(s) of the flows(s) whose association with the tag will be removed.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> deleteTagRelationshipsFlowsWithHttpInfo(TagFlowOp body, String revision, String id) throws ApiException {
        com.squareup.okhttp.Call call = deleteTagRelationshipsFlowsValidateBeforeCall(body, revision, id, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete Tag Relationships Flows (asynchronously)
     * Remove a tag&#x27;s association with one or more flows.   Use the request body to pass in the ID(s) of the flows(s) whose association with the tag will be removed.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteTagRelationshipsFlowsAsync(TagFlowOp body, String revision, String id, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteTagRelationshipsFlowsValidateBeforeCall(body, revision, id, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for deleteTagRelationshipsLists
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteTagRelationshipsListsCall(TagListOp body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/api/tags/{id}/relationships/lists/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteTagRelationshipsListsValidateBeforeCall(TagListOp body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling deleteTagRelationshipsLists(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling deleteTagRelationshipsLists(Async)");
        }
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling deleteTagRelationshipsLists(Async)");
        }
        
        com.squareup.okhttp.Call call = deleteTagRelationshipsListsCall(body, revision, id, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete Tag Relationships Lists
     * Remove a tag&#x27;s association with one or more lists.   Use the request body to pass in the ID(s) of the list(s) whose association with the tag will be removed.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;lists:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void deleteTagRelationshipsLists(TagListOp body, String revision, String id) throws ApiException {
        deleteTagRelationshipsListsWithHttpInfo(body, revision, id);
    }

    /**
     * Delete Tag Relationships Lists
     * Remove a tag&#x27;s association with one or more lists.   Use the request body to pass in the ID(s) of the list(s) whose association with the tag will be removed.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;lists:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> deleteTagRelationshipsListsWithHttpInfo(TagListOp body, String revision, String id) throws ApiException {
        com.squareup.okhttp.Call call = deleteTagRelationshipsListsValidateBeforeCall(body, revision, id, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete Tag Relationships Lists (asynchronously)
     * Remove a tag&#x27;s association with one or more lists.   Use the request body to pass in the ID(s) of the list(s) whose association with the tag will be removed.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;lists:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteTagRelationshipsListsAsync(TagListOp body, String revision, String id, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteTagRelationshipsListsValidateBeforeCall(body, revision, id, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for deleteTagRelationshipsSegments
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call deleteTagRelationshipsSegmentsCall(TagSegmentOp body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/api/tags/{id}/relationships/segments/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call deleteTagRelationshipsSegmentsValidateBeforeCall(TagSegmentOp body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling deleteTagRelationshipsSegments(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling deleteTagRelationshipsSegments(Async)");
        }
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling deleteTagRelationshipsSegments(Async)");
        }
        
        com.squareup.okhttp.Call call = deleteTagRelationshipsSegmentsCall(body, revision, id, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Delete Tag Relationships Segments
     * Remove a tag&#x27;s association with one or more segments.   Use the request body to pass in the ID(s) of the segments(s) whose association with the tag will be removed.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;segments:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void deleteTagRelationshipsSegments(TagSegmentOp body, String revision, String id) throws ApiException {
        deleteTagRelationshipsSegmentsWithHttpInfo(body, revision, id);
    }

    /**
     * Delete Tag Relationships Segments
     * Remove a tag&#x27;s association with one or more segments.   Use the request body to pass in the ID(s) of the segments(s) whose association with the tag will be removed.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;segments:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> deleteTagRelationshipsSegmentsWithHttpInfo(TagSegmentOp body, String revision, String id) throws ApiException {
        com.squareup.okhttp.Call call = deleteTagRelationshipsSegmentsValidateBeforeCall(body, revision, id, null, null);
        return apiClient.execute(call);
    }

    /**
     * Delete Tag Relationships Segments (asynchronously)
     * Remove a tag&#x27;s association with one or more segments.   Use the request body to pass in the ID(s) of the segments(s) whose association with the tag will be removed.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;segments:write&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call deleteTagRelationshipsSegmentsAsync(TagSegmentOp body, String revision, String id, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = deleteTagRelationshipsSegmentsValidateBeforeCall(body, revision, id, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for getTag
     * @param id The Tag ID (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getTagCall(String id, String revision, List<String> fieldsTagGroup, List<String> fieldsTag, List<String> include, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/tags/{id}/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (fieldsTagGroup != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[tag-group]", fieldsTagGroup));
        if (fieldsTag != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[tag]", fieldsTag));
        if (include != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "include", include));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getTagValidateBeforeCall(String id, String revision, List<String> fieldsTagGroup, List<String> fieldsTag, List<String> include, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getTag(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getTag(Async)");
        }
        
        com.squareup.okhttp.Call call = getTagCall(id, revision, fieldsTagGroup, fieldsTag, include, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Tag
     * Retrieve the tag with the given tag ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param id The Tag ID (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return GetTagResponseCompoundDocument
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetTagResponseCompoundDocument getTag(String id, String revision, List<String> fieldsTagGroup, List<String> fieldsTag, List<String> include) throws ApiException {
        ApiResponse<GetTagResponseCompoundDocument> resp = getTagWithHttpInfo(id, revision, fieldsTagGroup, fieldsTag, include);
        return resp.getData();
    }

    /**
     * Get Tag
     * Retrieve the tag with the given tag ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param id The Tag ID (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return ApiResponse&lt;GetTagResponseCompoundDocument&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetTagResponseCompoundDocument> getTagWithHttpInfo(String id, String revision, List<String> fieldsTagGroup, List<String> fieldsTag, List<String> include) throws ApiException {
        com.squareup.okhttp.Call call = getTagValidateBeforeCall(id, revision, fieldsTagGroup, fieldsTag, include, null, null);
        Type localVarReturnType = new TypeToken<GetTagResponseCompoundDocument>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Tag (asynchronously)
     * Retrieve the tag with the given tag ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param id The Tag ID (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getTagAsync(String id, String revision, List<String> fieldsTagGroup, List<String> fieldsTag, List<String> include, final ApiCallback<GetTagResponseCompoundDocument> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getTagValidateBeforeCall(id, revision, fieldsTagGroup, fieldsTag, include, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetTagResponseCompoundDocument>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getTagGroup
     * @param id The Tag Group ID (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getTagGroupCall(String id, String revision, List<String> fieldsTagGroup, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/tag-groups/{id}/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (fieldsTagGroup != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[tag-group]", fieldsTagGroup));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getTagGroupValidateBeforeCall(String id, String revision, List<String> fieldsTagGroup, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getTagGroup(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getTagGroup(Async)");
        }
        
        com.squareup.okhttp.Call call = getTagGroupCall(id, revision, fieldsTagGroup, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Tag Group
     * Retrieve the tag group with the given tag group ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param id The Tag Group ID (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return GetTagGroupResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetTagGroupResponse getTagGroup(String id, String revision, List<String> fieldsTagGroup) throws ApiException {
        ApiResponse<GetTagGroupResponse> resp = getTagGroupWithHttpInfo(id, revision, fieldsTagGroup);
        return resp.getData();
    }

    /**
     * Get Tag Group
     * Retrieve the tag group with the given tag group ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param id The Tag Group ID (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return ApiResponse&lt;GetTagGroupResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetTagGroupResponse> getTagGroupWithHttpInfo(String id, String revision, List<String> fieldsTagGroup) throws ApiException {
        com.squareup.okhttp.Call call = getTagGroupValidateBeforeCall(id, revision, fieldsTagGroup, null, null);
        Type localVarReturnType = new TypeToken<GetTagGroupResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Tag Group (asynchronously)
     * Retrieve the tag group with the given tag group ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param id The Tag Group ID (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getTagGroupAsync(String id, String revision, List<String> fieldsTagGroup, final ApiCallback<GetTagGroupResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getTagGroupValidateBeforeCall(id, revision, fieldsTagGroup, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetTagGroupResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getTagGroupRelationshipsTags
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getTagGroupRelationshipsTagsCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/tag-groups/{id}/relationships/tags/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getTagGroupRelationshipsTagsValidateBeforeCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getTagGroupRelationshipsTags(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getTagGroupRelationshipsTags(Async)");
        }
        
        com.squareup.okhttp.Call call = getTagGroupRelationshipsTagsCall(id, revision, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Tag Group Relationships Tags
     * Returns the tag IDs of all tags inside the given tag group.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return GetTagGroupTagRelationshipsResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetTagGroupTagRelationshipsResponseCollection getTagGroupRelationshipsTags(String id, String revision) throws ApiException {
        ApiResponse<GetTagGroupTagRelationshipsResponseCollection> resp = getTagGroupRelationshipsTagsWithHttpInfo(id, revision);
        return resp.getData();
    }

    /**
     * Get Tag Group Relationships Tags
     * Returns the tag IDs of all tags inside the given tag group.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return ApiResponse&lt;GetTagGroupTagRelationshipsResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetTagGroupTagRelationshipsResponseCollection> getTagGroupRelationshipsTagsWithHttpInfo(String id, String revision) throws ApiException {
        com.squareup.okhttp.Call call = getTagGroupRelationshipsTagsValidateBeforeCall(id, revision, null, null);
        Type localVarReturnType = new TypeToken<GetTagGroupTagRelationshipsResponseCollection>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Tag Group Relationships Tags (asynchronously)
     * Returns the tag IDs of all tags inside the given tag group.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getTagGroupRelationshipsTagsAsync(String id, String revision, final ApiCallback<GetTagGroupTagRelationshipsResponseCollection> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getTagGroupRelationshipsTagsValidateBeforeCall(id, revision, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetTagGroupTagRelationshipsResponseCollection>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getTagGroupTags
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getTagGroupTagsCall(String id, String revision, List<String> fieldsTag, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/tag-groups/{id}/tags/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (fieldsTag != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[tag]", fieldsTag));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getTagGroupTagsValidateBeforeCall(String id, String revision, List<String> fieldsTag, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getTagGroupTags(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getTagGroupTags(Async)");
        }
        
        com.squareup.okhttp.Call call = getTagGroupTagsCall(id, revision, fieldsTag, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Tag Group Tags
     * Return the tags for a given tag group ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return GetTagResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetTagResponseCollection getTagGroupTags(String id, String revision, List<String> fieldsTag) throws ApiException {
        ApiResponse<GetTagResponseCollection> resp = getTagGroupTagsWithHttpInfo(id, revision, fieldsTag);
        return resp.getData();
    }

    /**
     * Get Tag Group Tags
     * Return the tags for a given tag group ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return ApiResponse&lt;GetTagResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetTagResponseCollection> getTagGroupTagsWithHttpInfo(String id, String revision, List<String> fieldsTag) throws ApiException {
        com.squareup.okhttp.Call call = getTagGroupTagsValidateBeforeCall(id, revision, fieldsTag, null, null);
        Type localVarReturnType = new TypeToken<GetTagResponseCollection>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Tag Group Tags (asynchronously)
     * Return the tags for a given tag group ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getTagGroupTagsAsync(String id, String revision, List<String> fieldsTag, final ApiCallback<GetTagResponseCollection> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getTagGroupTagsValidateBeforeCall(id, revision, fieldsTag, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetTagResponseCollection>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getTagGroups
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;, &#x60;ends-with&#x60;, &#x60;equals&#x60;, &#x60;starts-with&#x60;&lt;br&gt;&#x60;exclusive&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;default&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getTagGroupsCall(String revision, List<String> fieldsTagGroup, String filter, String pageCursor, String sort, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/tag-groups/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (fieldsTagGroup != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[tag-group]", fieldsTagGroup));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("filter", filter));
        if (pageCursor != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("page[cursor]", pageCursor));
        if (sort != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("sort", sort));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getTagGroupsValidateBeforeCall(String revision, List<String> fieldsTagGroup, String filter, String pageCursor, String sort, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getTagGroups(Async)");
        }
        
        com.squareup.okhttp.Call call = getTagGroupsCall(revision, fieldsTagGroup, filter, pageCursor, sort, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Tag Groups
     * List all tag groups in an account. Every account has one default tag group.  Tag groups can be filtered by &#x60;name&#x60;, &#x60;exclusive&#x60;, and &#x60;default&#x60;, and sorted by &#x60;name&#x60; or &#x60;id&#x60; in ascending or descending order.  Returns a maximum of 25 tag groups per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;, &#x60;ends-with&#x60;, &#x60;equals&#x60;, &#x60;starts-with&#x60;&lt;br&gt;&#x60;exclusive&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;default&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return GetTagGroupResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetTagGroupResponseCollection getTagGroups(String revision, List<String> fieldsTagGroup, String filter, String pageCursor, String sort) throws ApiException {
        ApiResponse<GetTagGroupResponseCollection> resp = getTagGroupsWithHttpInfo(revision, fieldsTagGroup, filter, pageCursor, sort);
        return resp.getData();
    }

    /**
     * Get Tag Groups
     * List all tag groups in an account. Every account has one default tag group.  Tag groups can be filtered by &#x60;name&#x60;, &#x60;exclusive&#x60;, and &#x60;default&#x60;, and sorted by &#x60;name&#x60; or &#x60;id&#x60; in ascending or descending order.  Returns a maximum of 25 tag groups per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;, &#x60;ends-with&#x60;, &#x60;equals&#x60;, &#x60;starts-with&#x60;&lt;br&gt;&#x60;exclusive&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;default&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return ApiResponse&lt;GetTagGroupResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetTagGroupResponseCollection> getTagGroupsWithHttpInfo(String revision, List<String> fieldsTagGroup, String filter, String pageCursor, String sort) throws ApiException {
        com.squareup.okhttp.Call call = getTagGroupsValidateBeforeCall(revision, fieldsTagGroup, filter, pageCursor, sort, null, null);
        Type localVarReturnType = new TypeToken<GetTagGroupResponseCollection>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Tag Groups (asynchronously)
     * List all tag groups in an account. Every account has one default tag group.  Tag groups can be filtered by &#x60;name&#x60;, &#x60;exclusive&#x60;, and &#x60;default&#x60;, and sorted by &#x60;name&#x60; or &#x60;id&#x60; in ascending or descending order.  Returns a maximum of 25 tag groups per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;, &#x60;ends-with&#x60;, &#x60;equals&#x60;, &#x60;starts-with&#x60;&lt;br&gt;&#x60;exclusive&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;default&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getTagGroupsAsync(String revision, List<String> fieldsTagGroup, String filter, String pageCursor, String sort, final ApiCallback<GetTagGroupResponseCollection> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getTagGroupsValidateBeforeCall(revision, fieldsTagGroup, filter, pageCursor, sort, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetTagGroupResponseCollection>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getTagRelationshipsCampaigns
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getTagRelationshipsCampaignsCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/tags/{id}/relationships/campaigns/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getTagRelationshipsCampaignsValidateBeforeCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getTagRelationshipsCampaigns(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getTagRelationshipsCampaigns(Async)");
        }
        
        com.squareup.okhttp.Call call = getTagRelationshipsCampaignsCall(id, revision, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Tag Relationships Campaigns
     * Returns the IDs of all campaigns associated with the given tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;campaigns:read&#x60; &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return GetTagCampaignRelationshipsResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetTagCampaignRelationshipsResponseCollection getTagRelationshipsCampaigns(String id, String revision) throws ApiException {
        ApiResponse<GetTagCampaignRelationshipsResponseCollection> resp = getTagRelationshipsCampaignsWithHttpInfo(id, revision);
        return resp.getData();
    }

    /**
     * Get Tag Relationships Campaigns
     * Returns the IDs of all campaigns associated with the given tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;campaigns:read&#x60; &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return ApiResponse&lt;GetTagCampaignRelationshipsResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetTagCampaignRelationshipsResponseCollection> getTagRelationshipsCampaignsWithHttpInfo(String id, String revision) throws ApiException {
        com.squareup.okhttp.Call call = getTagRelationshipsCampaignsValidateBeforeCall(id, revision, null, null);
        Type localVarReturnType = new TypeToken<GetTagCampaignRelationshipsResponseCollection>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Tag Relationships Campaigns (asynchronously)
     * Returns the IDs of all campaigns associated with the given tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;campaigns:read&#x60; &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getTagRelationshipsCampaignsAsync(String id, String revision, final ApiCallback<GetTagCampaignRelationshipsResponseCollection> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getTagRelationshipsCampaignsValidateBeforeCall(id, revision, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetTagCampaignRelationshipsResponseCollection>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getTagRelationshipsFlows
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getTagRelationshipsFlowsCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/tags/{id}/relationships/flows/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getTagRelationshipsFlowsValidateBeforeCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getTagRelationshipsFlows(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getTagRelationshipsFlows(Async)");
        }
        
        com.squareup.okhttp.Call call = getTagRelationshipsFlowsCall(id, revision, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Tag Relationships Flows
     * Returns the IDs of all flows associated with the given tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60; &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return GetTagFlowRelationshipsResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetTagFlowRelationshipsResponseCollection getTagRelationshipsFlows(String id, String revision) throws ApiException {
        ApiResponse<GetTagFlowRelationshipsResponseCollection> resp = getTagRelationshipsFlowsWithHttpInfo(id, revision);
        return resp.getData();
    }

    /**
     * Get Tag Relationships Flows
     * Returns the IDs of all flows associated with the given tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60; &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return ApiResponse&lt;GetTagFlowRelationshipsResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetTagFlowRelationshipsResponseCollection> getTagRelationshipsFlowsWithHttpInfo(String id, String revision) throws ApiException {
        com.squareup.okhttp.Call call = getTagRelationshipsFlowsValidateBeforeCall(id, revision, null, null);
        Type localVarReturnType = new TypeToken<GetTagFlowRelationshipsResponseCollection>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Tag Relationships Flows (asynchronously)
     * Returns the IDs of all flows associated with the given tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60; &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getTagRelationshipsFlowsAsync(String id, String revision, final ApiCallback<GetTagFlowRelationshipsResponseCollection> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getTagRelationshipsFlowsValidateBeforeCall(id, revision, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetTagFlowRelationshipsResponseCollection>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getTagRelationshipsLists
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getTagRelationshipsListsCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/tags/{id}/relationships/lists/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getTagRelationshipsListsValidateBeforeCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getTagRelationshipsLists(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getTagRelationshipsLists(Async)");
        }
        
        com.squareup.okhttp.Call call = getTagRelationshipsListsCall(id, revision, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Tag Relationships Lists
     * Returns the IDs of all lists associated with the given tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;lists:read&#x60; &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return GetTagListRelationshipsResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetTagListRelationshipsResponseCollection getTagRelationshipsLists(String id, String revision) throws ApiException {
        ApiResponse<GetTagListRelationshipsResponseCollection> resp = getTagRelationshipsListsWithHttpInfo(id, revision);
        return resp.getData();
    }

    /**
     * Get Tag Relationships Lists
     * Returns the IDs of all lists associated with the given tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;lists:read&#x60; &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return ApiResponse&lt;GetTagListRelationshipsResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetTagListRelationshipsResponseCollection> getTagRelationshipsListsWithHttpInfo(String id, String revision) throws ApiException {
        com.squareup.okhttp.Call call = getTagRelationshipsListsValidateBeforeCall(id, revision, null, null);
        Type localVarReturnType = new TypeToken<GetTagListRelationshipsResponseCollection>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Tag Relationships Lists (asynchronously)
     * Returns the IDs of all lists associated with the given tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;lists:read&#x60; &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getTagRelationshipsListsAsync(String id, String revision, final ApiCallback<GetTagListRelationshipsResponseCollection> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getTagRelationshipsListsValidateBeforeCall(id, revision, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetTagListRelationshipsResponseCollection>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getTagRelationshipsSegments
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getTagRelationshipsSegmentsCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/tags/{id}/relationships/segments/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getTagRelationshipsSegmentsValidateBeforeCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getTagRelationshipsSegments(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getTagRelationshipsSegments(Async)");
        }
        
        com.squareup.okhttp.Call call = getTagRelationshipsSegmentsCall(id, revision, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Tag Relationships Segments
     * Returns the IDs of all segments associated with the given tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;segments:read&#x60; &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return GetTagSegmentRelationshipsResponseCollection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetTagSegmentRelationshipsResponseCollection getTagRelationshipsSegments(String id, String revision) throws ApiException {
        ApiResponse<GetTagSegmentRelationshipsResponseCollection> resp = getTagRelationshipsSegmentsWithHttpInfo(id, revision);
        return resp.getData();
    }

    /**
     * Get Tag Relationships Segments
     * Returns the IDs of all segments associated with the given tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;segments:read&#x60; &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return ApiResponse&lt;GetTagSegmentRelationshipsResponseCollection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetTagSegmentRelationshipsResponseCollection> getTagRelationshipsSegmentsWithHttpInfo(String id, String revision) throws ApiException {
        com.squareup.okhttp.Call call = getTagRelationshipsSegmentsValidateBeforeCall(id, revision, null, null);
        Type localVarReturnType = new TypeToken<GetTagSegmentRelationshipsResponseCollection>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Tag Relationships Segments (asynchronously)
     * Returns the IDs of all segments associated with the given tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;segments:read&#x60; &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getTagRelationshipsSegmentsAsync(String id, String revision, final ApiCallback<GetTagSegmentRelationshipsResponseCollection> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getTagRelationshipsSegmentsValidateBeforeCall(id, revision, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetTagSegmentRelationshipsResponseCollection>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getTagRelationshipsTagGroup
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getTagRelationshipsTagGroupCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/tags/{id}/relationships/tag-group/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getTagRelationshipsTagGroupValidateBeforeCall(String id, String revision, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getTagRelationshipsTagGroup(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getTagRelationshipsTagGroup(Async)");
        }
        
        com.squareup.okhttp.Call call = getTagRelationshipsTagGroupCall(id, revision, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Tag Relationships Tag Group
     * Returns the id of the tag group related to the given tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return GetTagTagGroupRelationshipsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetTagTagGroupRelationshipsResponse getTagRelationshipsTagGroup(String id, String revision) throws ApiException {
        ApiResponse<GetTagTagGroupRelationshipsResponse> resp = getTagRelationshipsTagGroupWithHttpInfo(id, revision);
        return resp.getData();
    }

    /**
     * Get Tag Relationships Tag Group
     * Returns the id of the tag group related to the given tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @return ApiResponse&lt;GetTagTagGroupRelationshipsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetTagTagGroupRelationshipsResponse> getTagRelationshipsTagGroupWithHttpInfo(String id, String revision) throws ApiException {
        com.squareup.okhttp.Call call = getTagRelationshipsTagGroupValidateBeforeCall(id, revision, null, null);
        Type localVarReturnType = new TypeToken<GetTagTagGroupRelationshipsResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Tag Relationships Tag Group (asynchronously)
     * Returns the id of the tag group related to the given tag.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getTagRelationshipsTagGroupAsync(String id, String revision, final ApiCallback<GetTagTagGroupRelationshipsResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getTagRelationshipsTagGroupValidateBeforeCall(id, revision, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetTagTagGroupRelationshipsResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getTagTagGroup
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getTagTagGroupCall(String id, String revision, List<String> fieldsTagGroup, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/tags/{id}/tag-group/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (fieldsTagGroup != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[tag-group]", fieldsTagGroup));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getTagTagGroupValidateBeforeCall(String id, String revision, List<String> fieldsTagGroup, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling getTagTagGroup(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getTagTagGroup(Async)");
        }
        
        com.squareup.okhttp.Call call = getTagTagGroupCall(id, revision, fieldsTagGroup, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Tag Tag Group
     * Returns the tag group resource for a given tag ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return GetTagGroupResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetTagGroupResponse getTagTagGroup(String id, String revision, List<String> fieldsTagGroup) throws ApiException {
        ApiResponse<GetTagGroupResponse> resp = getTagTagGroupWithHttpInfo(id, revision, fieldsTagGroup);
        return resp.getData();
    }

    /**
     * Get Tag Tag Group
     * Returns the tag group resource for a given tag ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return ApiResponse&lt;GetTagGroupResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetTagGroupResponse> getTagTagGroupWithHttpInfo(String id, String revision, List<String> fieldsTagGroup) throws ApiException {
        com.squareup.okhttp.Call call = getTagTagGroupValidateBeforeCall(id, revision, fieldsTagGroup, null, null);
        Type localVarReturnType = new TypeToken<GetTagGroupResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Tag Tag Group (asynchronously)
     * Returns the tag group resource for a given tag ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param id  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getTagTagGroupAsync(String id, String revision, List<String> fieldsTagGroup, final ApiCallback<GetTagGroupResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getTagTagGroupValidateBeforeCall(id, revision, fieldsTagGroup, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetTagGroupResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getTags
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;, &#x60;ends-with&#x60;, &#x60;equals&#x60;, &#x60;starts-with&#x60; (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getTagsCall(String revision, List<String> fieldsTagGroup, List<String> fieldsTag, String filter, List<String> include, String pageCursor, String sort, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/tags/";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (fieldsTagGroup != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[tag-group]", fieldsTagGroup));
        if (fieldsTag != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "fields[tag]", fieldsTag));
        if (filter != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("filter", filter));
        if (include != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("csv", "include", include));
        if (pageCursor != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("page[cursor]", pageCursor));
        if (sort != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("sort", sort));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getTagsValidateBeforeCall(String revision, List<String> fieldsTagGroup, List<String> fieldsTag, String filter, List<String> include, String pageCursor, String sort, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling getTags(Async)");
        }
        
        com.squareup.okhttp.Call call = getTagsCall(revision, fieldsTagGroup, fieldsTag, filter, include, pageCursor, sort, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Get Tags
     * List all tags in an account.  Tags can be filtered by &#x60;name&#x60;, and sorted by &#x60;name&#x60; or &#x60;id&#x60; in ascending or descending order.  Returns a maximum of 50 tags per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;, &#x60;ends-with&#x60;, &#x60;equals&#x60;, &#x60;starts-with&#x60; (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return GetTagResponseCollectionCompoundDocument
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public GetTagResponseCollectionCompoundDocument getTags(String revision, List<String> fieldsTagGroup, List<String> fieldsTag, String filter, List<String> include, String pageCursor, String sort) throws ApiException {
        ApiResponse<GetTagResponseCollectionCompoundDocument> resp = getTagsWithHttpInfo(revision, fieldsTagGroup, fieldsTag, filter, include, pageCursor, sort);
        return resp.getData();
    }

    /**
     * Get Tags
     * List all tags in an account.  Tags can be filtered by &#x60;name&#x60;, and sorted by &#x60;name&#x60; or &#x60;id&#x60; in ascending or descending order.  Returns a maximum of 50 tags per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;, &#x60;ends-with&#x60;, &#x60;equals&#x60;, &#x60;starts-with&#x60; (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return ApiResponse&lt;GetTagResponseCollectionCompoundDocument&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<GetTagResponseCollectionCompoundDocument> getTagsWithHttpInfo(String revision, List<String> fieldsTagGroup, List<String> fieldsTag, String filter, List<String> include, String pageCursor, String sort) throws ApiException {
        com.squareup.okhttp.Call call = getTagsValidateBeforeCall(revision, fieldsTagGroup, fieldsTag, filter, include, pageCursor, sort, null, null);
        Type localVarReturnType = new TypeToken<GetTagResponseCollectionCompoundDocument>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get Tags (asynchronously)
     * List all tags in an account.  Tags can be filtered by &#x60;name&#x60;, and sorted by &#x60;name&#x60; or &#x60;id&#x60; in ascending or descending order.  Returns a maximum of 50 tags per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param fieldsTagGroup For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;, &#x60;ends-with&#x60;, &#x60;equals&#x60;, &#x60;starts-with&#x60; (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getTagsAsync(String revision, List<String> fieldsTagGroup, List<String> fieldsTag, String filter, List<String> include, String pageCursor, String sort, final ApiCallback<GetTagResponseCollectionCompoundDocument> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getTagsValidateBeforeCall(revision, fieldsTagGroup, fieldsTag, filter, include, pageCursor, sort, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<GetTagResponseCollectionCompoundDocument>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for updateTag
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id The Tag ID (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call updateTagCall(TagUpdateQuery body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/api/tags/{id}/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call updateTagValidateBeforeCall(TagUpdateQuery body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling updateTag(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling updateTag(Async)");
        }
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling updateTag(Async)");
        }
        
        com.squareup.okhttp.Call call = updateTagCall(body, revision, id, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Update Tag
     * Update the tag with the given tag ID.  Only a tag&#x27;s &#x60;name&#x60; can be changed. A tag cannot be moved from one tag group to another.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id The Tag ID (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void updateTag(TagUpdateQuery body, String revision, String id) throws ApiException {
        updateTagWithHttpInfo(body, revision, id);
    }

    /**
     * Update Tag
     * Update the tag with the given tag ID.  Only a tag&#x27;s &#x60;name&#x60; can be changed. A tag cannot be moved from one tag group to another.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id The Tag ID (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> updateTagWithHttpInfo(TagUpdateQuery body, String revision, String id) throws ApiException {
        com.squareup.okhttp.Call call = updateTagValidateBeforeCall(body, revision, id, null, null);
        return apiClient.execute(call);
    }

    /**
     * Update Tag (asynchronously)
     * Update the tag with the given tag ID.  Only a tag&#x27;s &#x60;name&#x60; can be changed. A tag cannot be moved from one tag group to another.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id The Tag ID (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call updateTagAsync(TagUpdateQuery body, String revision, String id, final ApiCallback<Void> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = updateTagValidateBeforeCall(body, revision, id, progressListener, progressRequestListener);
        apiClient.executeAsync(call, callback);
        return call;
    }
    /**
     * Build call for updateTagGroup
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id The Tag Group ID (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call updateTagGroupCall(TagGroupUpdateQuery body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;
        
        // create path and map variables
        String localVarPath = "/api/tag-groups/{id}/"
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (revision != null)
        localVarHeaderParams.put("revision", apiClient.parameterToString(revision));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Klaviyo-API-Key" };
        if (headers != null) {
            localVarHeaderParams.putAll(headers);
        }
        return apiClient.buildCall(localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call updateTagGroupValidateBeforeCall(TagGroupUpdateQuery body, String revision, String id, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling updateTagGroup(Async)");
        }
        // verify the required parameter 'revision' is set
        if (revision == null) {
            throw new ApiException("Missing the required parameter 'revision' when calling updateTagGroup(Async)");
        }
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling updateTagGroup(Async)");
        }
        
        com.squareup.okhttp.Call call = updateTagGroupCall(body, revision, id, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Update Tag Group
     * Update the tag group with the given tag group ID.  Only a tag group&#x27;s &#x60;name&#x60; can be changed. A tag group&#x27;s &#x60;exclusive&#x60; or &#x60;default&#x60; value cannot be changed.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id The Tag Group ID (required)
     * @return PatchTagGroupResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public PatchTagGroupResponse updateTagGroup(TagGroupUpdateQuery body, String revision, String id) throws ApiException {
        ApiResponse<PatchTagGroupResponse> resp = updateTagGroupWithHttpInfo(body, revision, id);
        return resp.getData();
    }

    /**
     * Update Tag Group
     * Update the tag group with the given tag group ID.  Only a tag group&#x27;s &#x60;name&#x60; can be changed. A tag group&#x27;s &#x60;exclusive&#x60; or &#x60;default&#x60; value cannot be changed.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id The Tag Group ID (required)
     * @return ApiResponse&lt;PatchTagGroupResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<PatchTagGroupResponse> updateTagGroupWithHttpInfo(TagGroupUpdateQuery body, String revision, String id) throws ApiException {
        com.squareup.okhttp.Call call = updateTagGroupValidateBeforeCall(body, revision, id, null, null);
        Type localVarReturnType = new TypeToken<PatchTagGroupResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Update Tag Group (asynchronously)
     * Update the tag group with the given tag group ID.  Only a tag group&#x27;s &#x60;name&#x60; can be changed. A tag group&#x27;s &#x60;exclusive&#x60; or &#x60;default&#x60; value cannot be changed.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;tags:read&#x60; &#x60;tags:write&#x60;
     * @param body  (required)
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (required)
     * @param id The Tag Group ID (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call updateTagGroupAsync(TagGroupUpdateQuery body, String revision, String id, final ApiCallback<PatchTagGroupResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = updateTagGroupValidateBeforeCall(body, revision, id, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<PatchTagGroupResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}

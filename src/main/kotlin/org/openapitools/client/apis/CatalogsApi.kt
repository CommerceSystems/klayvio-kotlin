/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import java.io.IOException
import okhttp3.OkHttpClient
import okhttp3.HttpUrl

import org.openapitools.client.models.CatalogCategoryCreateJobCreateQuery
import org.openapitools.client.models.CatalogCategoryCreateQuery
import org.openapitools.client.models.CatalogCategoryDeleteJobCreateQuery
import org.openapitools.client.models.CatalogCategoryItemOp
import org.openapitools.client.models.CatalogCategoryUpdateJobCreateQuery
import org.openapitools.client.models.CatalogCategoryUpdateQuery
import org.openapitools.client.models.CatalogItemCategoryOp
import org.openapitools.client.models.CatalogItemCreateJobCreateQuery
import org.openapitools.client.models.CatalogItemCreateQuery
import org.openapitools.client.models.CatalogItemDeleteJobCreateQuery
import org.openapitools.client.models.CatalogItemUpdateJobCreateQuery
import org.openapitools.client.models.CatalogItemUpdateQuery
import org.openapitools.client.models.CatalogVariantCreateJobCreateQuery
import org.openapitools.client.models.CatalogVariantCreateQuery
import org.openapitools.client.models.CatalogVariantDeleteJobCreateQuery
import org.openapitools.client.models.CatalogVariantUpdateJobCreateQuery
import org.openapitools.client.models.CatalogVariantUpdateQuery
import org.openapitools.client.models.GetAccounts4XXResponse
import org.openapitools.client.models.GetCatalogCategoryCreateJobResponseCollectionCompoundDocument
import org.openapitools.client.models.GetCatalogCategoryCreateJobResponseCompoundDocument
import org.openapitools.client.models.GetCatalogCategoryDeleteJobResponse
import org.openapitools.client.models.GetCatalogCategoryDeleteJobResponseCollection
import org.openapitools.client.models.GetCatalogCategoryItemListResponseCollection
import org.openapitools.client.models.GetCatalogCategoryResponse
import org.openapitools.client.models.GetCatalogCategoryResponseCollection
import org.openapitools.client.models.GetCatalogCategoryUpdateJobResponseCollectionCompoundDocument
import org.openapitools.client.models.GetCatalogCategoryUpdateJobResponseCompoundDocument
import org.openapitools.client.models.GetCatalogItemCategoryListResponseCollection
import org.openapitools.client.models.GetCatalogItemCreateJobResponseCollectionCompoundDocument
import org.openapitools.client.models.GetCatalogItemCreateJobResponseCompoundDocument
import org.openapitools.client.models.GetCatalogItemDeleteJobResponse
import org.openapitools.client.models.GetCatalogItemDeleteJobResponseCollection
import org.openapitools.client.models.GetCatalogItemResponseCollectionCompoundDocument
import org.openapitools.client.models.GetCatalogItemResponseCompoundDocument
import org.openapitools.client.models.GetCatalogItemUpdateJobResponseCollectionCompoundDocument
import org.openapitools.client.models.GetCatalogItemUpdateJobResponseCompoundDocument
import org.openapitools.client.models.GetCatalogVariantCreateJobResponseCollectionCompoundDocument
import org.openapitools.client.models.GetCatalogVariantCreateJobResponseCompoundDocument
import org.openapitools.client.models.GetCatalogVariantDeleteJobResponse
import org.openapitools.client.models.GetCatalogVariantDeleteJobResponseCollection
import org.openapitools.client.models.GetCatalogVariantResponse
import org.openapitools.client.models.GetCatalogVariantResponseCollection
import org.openapitools.client.models.GetCatalogVariantUpdateJobResponseCollectionCompoundDocument
import org.openapitools.client.models.GetCatalogVariantUpdateJobResponseCompoundDocument
import org.openapitools.client.models.PatchCatalogCategoryResponse
import org.openapitools.client.models.PatchCatalogItemResponse
import org.openapitools.client.models.PatchCatalogVariantResponse
import org.openapitools.client.models.PostCatalogCategoryCreateJobResponse
import org.openapitools.client.models.PostCatalogCategoryDeleteJobResponse
import org.openapitools.client.models.PostCatalogCategoryResponse
import org.openapitools.client.models.PostCatalogCategoryUpdateJobResponse
import org.openapitools.client.models.PostCatalogItemCreateJobResponse
import org.openapitools.client.models.PostCatalogItemDeleteJobResponse
import org.openapitools.client.models.PostCatalogItemResponse
import org.openapitools.client.models.PostCatalogItemUpdateJobResponse
import org.openapitools.client.models.PostCatalogVariantCreateJobResponse
import org.openapitools.client.models.PostCatalogVariantDeleteJobResponse
import org.openapitools.client.models.PostCatalogVariantResponse
import org.openapitools.client.models.PostCatalogVariantUpdateJobResponse
import org.openapitools.client.models.ServerBISSubscriptionCreateQuery

import com.squareup.moshi.Json

import org.openapitools.client.infrastructure.ApiClient
import org.openapitools.client.infrastructure.ApiResponse
import org.openapitools.client.infrastructure.ClientException
import org.openapitools.client.infrastructure.ClientError
import org.openapitools.client.infrastructure.ServerException
import org.openapitools.client.infrastructure.ServerError
import org.openapitools.client.infrastructure.MultiValueMap
import org.openapitools.client.infrastructure.PartConfig
import org.openapitools.client.infrastructure.RequestConfig
import org.openapitools.client.infrastructure.RequestMethod
import org.openapitools.client.infrastructure.ResponseType
import org.openapitools.client.infrastructure.Success
import org.openapitools.client.infrastructure.toMultiValue

class CatalogsApi(basePath: kotlin.String = defaultBasePath, client: OkHttpClient = ApiClient.defaultClient) : ApiClient(basePath, client) {
    companion object {
        @JvmStatic
        val defaultBasePath: String by lazy {
            System.getProperties().getProperty(ApiClient.baseUrlKey, "https://a.klaviyo.com")
        }
    }

    /**
     * Create Back In Stock Subscription
     * Subscribe a profile to receive back in stock notifications. Check out [our Back in Stock API guide](https://developers.klaviyo.com/en/docs/how_to_set_up_custom_back_in_stock) for more details.  This endpoint is specifically designed to be called from server-side applications. To create subscriptions from client-side contexts, use [POST /client/back-in-stock-subscriptions](https://developers.klaviyo.com/en/reference/create_client_back_in_stock_subscription).&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60; &#x60;profiles:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param serverBISSubscriptionCreateQuery 
     * @return void
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun createBackInStockSubscription(revision: kotlin.String = "2024-07-15", serverBISSubscriptionCreateQuery: ServerBISSubscriptionCreateQuery) : Unit {
        val localVarResponse = createBackInStockSubscriptionWithHttpInfo(revision = revision, serverBISSubscriptionCreateQuery = serverBISSubscriptionCreateQuery)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> Unit
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Create Back In Stock Subscription
     * Subscribe a profile to receive back in stock notifications. Check out [our Back in Stock API guide](https://developers.klaviyo.com/en/docs/how_to_set_up_custom_back_in_stock) for more details.  This endpoint is specifically designed to be called from server-side applications. To create subscriptions from client-side contexts, use [POST /client/back-in-stock-subscriptions](https://developers.klaviyo.com/en/reference/create_client_back_in_stock_subscription).&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60; &#x60;profiles:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param serverBISSubscriptionCreateQuery 
     * @return ApiResponse<Unit?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Throws(IllegalStateException::class, IOException::class)
    fun createBackInStockSubscriptionWithHttpInfo(revision: kotlin.String, serverBISSubscriptionCreateQuery: ServerBISSubscriptionCreateQuery) : ApiResponse<Unit?> {
        val localVariableConfig = createBackInStockSubscriptionRequestConfig(revision = revision, serverBISSubscriptionCreateQuery = serverBISSubscriptionCreateQuery)

        return request<ServerBISSubscriptionCreateQuery, Unit>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation createBackInStockSubscription
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param serverBISSubscriptionCreateQuery 
     * @return RequestConfig
     */
    fun createBackInStockSubscriptionRequestConfig(revision: kotlin.String, serverBISSubscriptionCreateQuery: ServerBISSubscriptionCreateQuery) : RequestConfig<ServerBISSubscriptionCreateQuery> {
        val localVariableBody = serverBISSubscriptionCreateQuery
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/api/back-in-stock-subscriptions/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Create Catalog Category
     * Create a new catalog category.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryCreateQuery 
     * @return PostCatalogCategoryResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun createCatalogCategory(revision: kotlin.String = "2024-07-15", catalogCategoryCreateQuery: CatalogCategoryCreateQuery) : PostCatalogCategoryResponse {
        val localVarResponse = createCatalogCategoryWithHttpInfo(revision = revision, catalogCategoryCreateQuery = catalogCategoryCreateQuery)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as PostCatalogCategoryResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Create Catalog Category
     * Create a new catalog category.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryCreateQuery 
     * @return ApiResponse<PostCatalogCategoryResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun createCatalogCategoryWithHttpInfo(revision: kotlin.String, catalogCategoryCreateQuery: CatalogCategoryCreateQuery) : ApiResponse<PostCatalogCategoryResponse?> {
        val localVariableConfig = createCatalogCategoryRequestConfig(revision = revision, catalogCategoryCreateQuery = catalogCategoryCreateQuery)

        return request<CatalogCategoryCreateQuery, PostCatalogCategoryResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation createCatalogCategory
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryCreateQuery 
     * @return RequestConfig
     */
    fun createCatalogCategoryRequestConfig(revision: kotlin.String, catalogCategoryCreateQuery: CatalogCategoryCreateQuery) : RequestConfig<CatalogCategoryCreateQuery> {
        val localVariableBody = catalogCategoryCreateQuery
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/api/catalog-categories/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Create Catalog Category Relationships Items
     * Create a new item relationship for the given category ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryItemOp 
     * @return void
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun createCatalogCategoryRelationshipsItems(id: kotlin.String, revision: kotlin.String = "2024-07-15", catalogCategoryItemOp: CatalogCategoryItemOp) : Unit {
        val localVarResponse = createCatalogCategoryRelationshipsItemsWithHttpInfo(id = id, revision = revision, catalogCategoryItemOp = catalogCategoryItemOp)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> Unit
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Create Catalog Category Relationships Items
     * Create a new item relationship for the given category ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryItemOp 
     * @return ApiResponse<Unit?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Throws(IllegalStateException::class, IOException::class)
    fun createCatalogCategoryRelationshipsItemsWithHttpInfo(id: kotlin.String, revision: kotlin.String, catalogCategoryItemOp: CatalogCategoryItemOp) : ApiResponse<Unit?> {
        val localVariableConfig = createCatalogCategoryRelationshipsItemsRequestConfig(id = id, revision = revision, catalogCategoryItemOp = catalogCategoryItemOp)

        return request<CatalogCategoryItemOp, Unit>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation createCatalogCategoryRelationshipsItems
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryItemOp 
     * @return RequestConfig
     */
    fun createCatalogCategoryRelationshipsItemsRequestConfig(id: kotlin.String, revision: kotlin.String, catalogCategoryItemOp: CatalogCategoryItemOp) : RequestConfig<CatalogCategoryItemOp> {
        val localVariableBody = catalogCategoryItemOp
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/api/catalog-categories/{id}/relationships/items/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Create Catalog Item
     * Create a new catalog item.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemCreateQuery 
     * @return PostCatalogItemResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun createCatalogItem(revision: kotlin.String = "2024-07-15", catalogItemCreateQuery: CatalogItemCreateQuery) : PostCatalogItemResponse {
        val localVarResponse = createCatalogItemWithHttpInfo(revision = revision, catalogItemCreateQuery = catalogItemCreateQuery)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as PostCatalogItemResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Create Catalog Item
     * Create a new catalog item.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemCreateQuery 
     * @return ApiResponse<PostCatalogItemResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun createCatalogItemWithHttpInfo(revision: kotlin.String, catalogItemCreateQuery: CatalogItemCreateQuery) : ApiResponse<PostCatalogItemResponse?> {
        val localVariableConfig = createCatalogItemRequestConfig(revision = revision, catalogItemCreateQuery = catalogItemCreateQuery)

        return request<CatalogItemCreateQuery, PostCatalogItemResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation createCatalogItem
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemCreateQuery 
     * @return RequestConfig
     */
    fun createCatalogItemRequestConfig(revision: kotlin.String, catalogItemCreateQuery: CatalogItemCreateQuery) : RequestConfig<CatalogItemCreateQuery> {
        val localVariableBody = catalogItemCreateQuery
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/api/catalog-items/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Create Catalog Item Relationships Categories
     * Create a new catalog category relationship for the given item ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemCategoryOp 
     * @return void
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun createCatalogItemRelationshipsCategories(id: kotlin.String, revision: kotlin.String = "2024-07-15", catalogItemCategoryOp: CatalogItemCategoryOp) : Unit {
        val localVarResponse = createCatalogItemRelationshipsCategoriesWithHttpInfo(id = id, revision = revision, catalogItemCategoryOp = catalogItemCategoryOp)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> Unit
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Create Catalog Item Relationships Categories
     * Create a new catalog category relationship for the given item ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemCategoryOp 
     * @return ApiResponse<Unit?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Throws(IllegalStateException::class, IOException::class)
    fun createCatalogItemRelationshipsCategoriesWithHttpInfo(id: kotlin.String, revision: kotlin.String, catalogItemCategoryOp: CatalogItemCategoryOp) : ApiResponse<Unit?> {
        val localVariableConfig = createCatalogItemRelationshipsCategoriesRequestConfig(id = id, revision = revision, catalogItemCategoryOp = catalogItemCategoryOp)

        return request<CatalogItemCategoryOp, Unit>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation createCatalogItemRelationshipsCategories
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemCategoryOp 
     * @return RequestConfig
     */
    fun createCatalogItemRelationshipsCategoriesRequestConfig(id: kotlin.String, revision: kotlin.String, catalogItemCategoryOp: CatalogItemCategoryOp) : RequestConfig<CatalogItemCategoryOp> {
        val localVariableBody = catalogItemCategoryOp
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/api/catalog-items/{id}/relationships/categories/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Create Catalog Variant
     * Create a new variant for a related catalog item.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogVariantCreateQuery 
     * @return PostCatalogVariantResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun createCatalogVariant(revision: kotlin.String = "2024-07-15", catalogVariantCreateQuery: CatalogVariantCreateQuery) : PostCatalogVariantResponse {
        val localVarResponse = createCatalogVariantWithHttpInfo(revision = revision, catalogVariantCreateQuery = catalogVariantCreateQuery)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as PostCatalogVariantResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Create Catalog Variant
     * Create a new variant for a related catalog item.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogVariantCreateQuery 
     * @return ApiResponse<PostCatalogVariantResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun createCatalogVariantWithHttpInfo(revision: kotlin.String, catalogVariantCreateQuery: CatalogVariantCreateQuery) : ApiResponse<PostCatalogVariantResponse?> {
        val localVariableConfig = createCatalogVariantRequestConfig(revision = revision, catalogVariantCreateQuery = catalogVariantCreateQuery)

        return request<CatalogVariantCreateQuery, PostCatalogVariantResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation createCatalogVariant
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogVariantCreateQuery 
     * @return RequestConfig
     */
    fun createCatalogVariantRequestConfig(revision: kotlin.String, catalogVariantCreateQuery: CatalogVariantCreateQuery) : RequestConfig<CatalogVariantCreateQuery> {
        val localVariableBody = catalogVariantCreateQuery
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/api/catalog-variants/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Delete Catalog Category
     * Delete a catalog category using the given category ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id The catalog category ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return void
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun deleteCatalogCategory(id: kotlin.String, revision: kotlin.String = "2024-07-15") : Unit {
        val localVarResponse = deleteCatalogCategoryWithHttpInfo(id = id, revision = revision)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> Unit
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Delete Catalog Category
     * Delete a catalog category using the given category ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id The catalog category ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return ApiResponse<Unit?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Throws(IllegalStateException::class, IOException::class)
    fun deleteCatalogCategoryWithHttpInfo(id: kotlin.String, revision: kotlin.String) : ApiResponse<Unit?> {
        val localVariableConfig = deleteCatalogCategoryRequestConfig(id = id, revision = revision)

        return request<Unit, Unit>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation deleteCatalogCategory
     *
     * @param id The catalog category ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return RequestConfig
     */
    fun deleteCatalogCategoryRequestConfig(id: kotlin.String, revision: kotlin.String) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.DELETE,
            path = "/api/catalog-categories/{id}/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Delete Catalog Category Relationships Items
     * Delete item relationships for the given category ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryItemOp 
     * @return void
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun deleteCatalogCategoryRelationshipsItems(id: kotlin.String, revision: kotlin.String = "2024-07-15", catalogCategoryItemOp: CatalogCategoryItemOp) : Unit {
        val localVarResponse = deleteCatalogCategoryRelationshipsItemsWithHttpInfo(id = id, revision = revision, catalogCategoryItemOp = catalogCategoryItemOp)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> Unit
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Delete Catalog Category Relationships Items
     * Delete item relationships for the given category ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryItemOp 
     * @return ApiResponse<Unit?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Throws(IllegalStateException::class, IOException::class)
    fun deleteCatalogCategoryRelationshipsItemsWithHttpInfo(id: kotlin.String, revision: kotlin.String, catalogCategoryItemOp: CatalogCategoryItemOp) : ApiResponse<Unit?> {
        val localVariableConfig = deleteCatalogCategoryRelationshipsItemsRequestConfig(id = id, revision = revision, catalogCategoryItemOp = catalogCategoryItemOp)

        return request<CatalogCategoryItemOp, Unit>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation deleteCatalogCategoryRelationshipsItems
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryItemOp 
     * @return RequestConfig
     */
    fun deleteCatalogCategoryRelationshipsItemsRequestConfig(id: kotlin.String, revision: kotlin.String, catalogCategoryItemOp: CatalogCategoryItemOp) : RequestConfig<CatalogCategoryItemOp> {
        val localVariableBody = catalogCategoryItemOp
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.DELETE,
            path = "/api/catalog-categories/{id}/relationships/items/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Delete Catalog Item
     * Delete a catalog item with the given item ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return void
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun deleteCatalogItem(id: kotlin.String, revision: kotlin.String = "2024-07-15") : Unit {
        val localVarResponse = deleteCatalogItemWithHttpInfo(id = id, revision = revision)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> Unit
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Delete Catalog Item
     * Delete a catalog item with the given item ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return ApiResponse<Unit?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Throws(IllegalStateException::class, IOException::class)
    fun deleteCatalogItemWithHttpInfo(id: kotlin.String, revision: kotlin.String) : ApiResponse<Unit?> {
        val localVariableConfig = deleteCatalogItemRequestConfig(id = id, revision = revision)

        return request<Unit, Unit>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation deleteCatalogItem
     *
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return RequestConfig
     */
    fun deleteCatalogItemRequestConfig(id: kotlin.String, revision: kotlin.String) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.DELETE,
            path = "/api/catalog-items/{id}/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Delete Catalog Item Relationships Categories
     * Delete catalog category relationships for the given item ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemCategoryOp 
     * @return void
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun deleteCatalogItemRelationshipsCategories(id: kotlin.String, revision: kotlin.String = "2024-07-15", catalogItemCategoryOp: CatalogItemCategoryOp) : Unit {
        val localVarResponse = deleteCatalogItemRelationshipsCategoriesWithHttpInfo(id = id, revision = revision, catalogItemCategoryOp = catalogItemCategoryOp)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> Unit
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Delete Catalog Item Relationships Categories
     * Delete catalog category relationships for the given item ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemCategoryOp 
     * @return ApiResponse<Unit?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Throws(IllegalStateException::class, IOException::class)
    fun deleteCatalogItemRelationshipsCategoriesWithHttpInfo(id: kotlin.String, revision: kotlin.String, catalogItemCategoryOp: CatalogItemCategoryOp) : ApiResponse<Unit?> {
        val localVariableConfig = deleteCatalogItemRelationshipsCategoriesRequestConfig(id = id, revision = revision, catalogItemCategoryOp = catalogItemCategoryOp)

        return request<CatalogItemCategoryOp, Unit>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation deleteCatalogItemRelationshipsCategories
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemCategoryOp 
     * @return RequestConfig
     */
    fun deleteCatalogItemRelationshipsCategoriesRequestConfig(id: kotlin.String, revision: kotlin.String, catalogItemCategoryOp: CatalogItemCategoryOp) : RequestConfig<CatalogItemCategoryOp> {
        val localVariableBody = catalogItemCategoryOp
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.DELETE,
            path = "/api/catalog-items/{id}/relationships/categories/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Delete Catalog Variant
     * Delete a catalog item variant with the given variant ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id The catalog variant ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return void
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun deleteCatalogVariant(id: kotlin.String, revision: kotlin.String = "2024-07-15") : Unit {
        val localVarResponse = deleteCatalogVariantWithHttpInfo(id = id, revision = revision)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> Unit
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Delete Catalog Variant
     * Delete a catalog item variant with the given variant ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id The catalog variant ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return ApiResponse<Unit?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Throws(IllegalStateException::class, IOException::class)
    fun deleteCatalogVariantWithHttpInfo(id: kotlin.String, revision: kotlin.String) : ApiResponse<Unit?> {
        val localVariableConfig = deleteCatalogVariantRequestConfig(id = id, revision = revision)

        return request<Unit, Unit>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation deleteCatalogVariant
     *
     * @param id The catalog variant ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return RequestConfig
     */
    fun deleteCatalogVariantRequestConfig(id: kotlin.String, revision: kotlin.String) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.DELETE,
            path = "/api/catalog-variants/{id}/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogCategory
     */
     enum class FieldsCatalogCategoryGetCatalogCategories(val value: kotlin.String) {
         @Json(name = "external_id") external_id("external_id"),
         @Json(name = "name") name("name"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter sort
     */
     enum class SortGetCatalogCategories(val value: kotlin.String) {
         @Json(name = "created") created("created"),
         @Json(name = "-created") MinusCreated("-created");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Catalog Categories
     * Get all catalog categories in an account.  Catalog categories can be sorted by the following fields, in ascending and descending order: &#x60;created&#x60;  Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog type is &#x60;$default&#x60;.  Returns a maximum of 100 categories per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return GetCatalogCategoryResponseCollection
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getCatalogCategories(revision: kotlin.String = "2024-07-15", fieldsCatalogCategory: kotlin.collections.List<FieldsCatalogCategoryGetCatalogCategories>? = null, filter: kotlin.String? = null, pageCursor: kotlin.String? = null, sort: SortGetCatalogCategories? = null) : GetCatalogCategoryResponseCollection {
        val localVarResponse = getCatalogCategoriesWithHttpInfo(revision = revision, fieldsCatalogCategory = fieldsCatalogCategory, filter = filter, pageCursor = pageCursor, sort = sort)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogCategoryResponseCollection
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Catalog Categories
     * Get all catalog categories in an account.  Catalog categories can be sorted by the following fields, in ascending and descending order: &#x60;created&#x60;  Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog type is &#x60;$default&#x60;.  Returns a maximum of 100 categories per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return ApiResponse<GetCatalogCategoryResponseCollection?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getCatalogCategoriesWithHttpInfo(revision: kotlin.String, fieldsCatalogCategory: kotlin.collections.List<FieldsCatalogCategoryGetCatalogCategories>?, filter: kotlin.String?, pageCursor: kotlin.String?, sort: SortGetCatalogCategories?) : ApiResponse<GetCatalogCategoryResponseCollection?> {
        val localVariableConfig = getCatalogCategoriesRequestConfig(revision = revision, fieldsCatalogCategory = fieldsCatalogCategory, filter = filter, pageCursor = pageCursor, sort = sort)

        return request<Unit, GetCatalogCategoryResponseCollection>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getCatalogCategories
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return RequestConfig
     */
    fun getCatalogCategoriesRequestConfig(revision: kotlin.String, fieldsCatalogCategory: kotlin.collections.List<FieldsCatalogCategoryGetCatalogCategories>?, filter: kotlin.String?, pageCursor: kotlin.String?, sort: SortGetCatalogCategories?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogCategory != null) {
                    put("fields[catalog-category]", toMultiValue(fieldsCatalogCategory.toList(), "csv"))
                }
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
                if (sort != null) {
                    put("sort", listOf(sort.value))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-categories/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogCategory
     */
     enum class FieldsCatalogCategoryGetCatalogCategory(val value: kotlin.String) {
         @Json(name = "external_id") external_id("external_id"),
         @Json(name = "name") name("name"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Catalog Category
     * Get a catalog category with the given category ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param id The catalog category ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return GetCatalogCategoryResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getCatalogCategory(id: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsCatalogCategory: kotlin.collections.List<FieldsCatalogCategoryGetCatalogCategory>? = null) : GetCatalogCategoryResponse {
        val localVarResponse = getCatalogCategoryWithHttpInfo(id = id, revision = revision, fieldsCatalogCategory = fieldsCatalogCategory)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogCategoryResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Catalog Category
     * Get a catalog category with the given category ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param id The catalog category ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return ApiResponse<GetCatalogCategoryResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getCatalogCategoryWithHttpInfo(id: kotlin.String, revision: kotlin.String, fieldsCatalogCategory: kotlin.collections.List<FieldsCatalogCategoryGetCatalogCategory>?) : ApiResponse<GetCatalogCategoryResponse?> {
        val localVariableConfig = getCatalogCategoryRequestConfig(id = id, revision = revision, fieldsCatalogCategory = fieldsCatalogCategory)

        return request<Unit, GetCatalogCategoryResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getCatalogCategory
     *
     * @param id The catalog category ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return RequestConfig
     */
    fun getCatalogCategoryRequestConfig(id: kotlin.String, revision: kotlin.String, fieldsCatalogCategory: kotlin.collections.List<FieldsCatalogCategoryGetCatalogCategory>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogCategory != null) {
                    put("fields[catalog-category]", toMultiValue(fieldsCatalogCategory.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-categories/{id}/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogItem
     */
     enum class FieldsCatalogItemGetCatalogCategoryItems(val value: kotlin.String) {
         @Json(name = "external_id") external_id("external_id"),
         @Json(name = "title") title("title"),
         @Json(name = "description") description("description"),
         @Json(name = "price") price("price"),
         @Json(name = "url") url("url"),
         @Json(name = "image_full_url") image_full_url("image_full_url"),
         @Json(name = "image_thumbnail_url") image_thumbnail_url("image_thumbnail_url"),
         @Json(name = "images") images("images"),
         @Json(name = "custom_metadata") custom_metadata("custom_metadata"),
         @Json(name = "published") published("published"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter fieldsCatalogVariant
     */
     enum class FieldsCatalogVariantGetCatalogCategoryItems(val value: kotlin.String) {
         @Json(name = "external_id") external_id("external_id"),
         @Json(name = "title") title("title"),
         @Json(name = "description") description("description"),
         @Json(name = "sku") sku("sku"),
         @Json(name = "inventory_policy") inventory_policy("inventory_policy"),
         @Json(name = "inventory_quantity") inventory_quantity("inventory_quantity"),
         @Json(name = "price") price("price"),
         @Json(name = "url") url("url"),
         @Json(name = "image_full_url") image_full_url("image_full_url"),
         @Json(name = "image_thumbnail_url") image_thumbnail_url("image_thumbnail_url"),
         @Json(name = "images") images("images"),
         @Json(name = "custom_metadata") custom_metadata("custom_metadata"),
         @Json(name = "published") published("published"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter include
     */
     enum class IncludeGetCatalogCategoryItems(val value: kotlin.String) {
         @Json(name = "variants") variants("variants");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter sort
     */
     enum class SortGetCatalogCategoryItems(val value: kotlin.String) {
         @Json(name = "created") created("created"),
         @Json(name = "-created") MinusCreated("-created");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Catalog Category Items
     * Get all items in a category with the given category ID.  Items can be sorted by the following fields, in ascending and descending order: &#x60;created&#x60;  Returns a maximum of 100 items per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;category.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60; (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return GetCatalogItemResponseCollectionCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getCatalogCategoryItems(id: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsCatalogItem: kotlin.collections.List<FieldsCatalogItemGetCatalogCategoryItems>? = null, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCatalogCategoryItems>? = null, filter: kotlin.String? = null, include: kotlin.collections.List<IncludeGetCatalogCategoryItems>? = null, pageCursor: kotlin.String? = null, sort: SortGetCatalogCategoryItems? = null) : GetCatalogItemResponseCollectionCompoundDocument {
        val localVarResponse = getCatalogCategoryItemsWithHttpInfo(id = id, revision = revision, fieldsCatalogItem = fieldsCatalogItem, fieldsCatalogVariant = fieldsCatalogVariant, filter = filter, include = include, pageCursor = pageCursor, sort = sort)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogItemResponseCollectionCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Catalog Category Items
     * Get all items in a category with the given category ID.  Items can be sorted by the following fields, in ascending and descending order: &#x60;created&#x60;  Returns a maximum of 100 items per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;category.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60; (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return ApiResponse<GetCatalogItemResponseCollectionCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getCatalogCategoryItemsWithHttpInfo(id: kotlin.String, revision: kotlin.String, fieldsCatalogItem: kotlin.collections.List<FieldsCatalogItemGetCatalogCategoryItems>?, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCatalogCategoryItems>?, filter: kotlin.String?, include: kotlin.collections.List<IncludeGetCatalogCategoryItems>?, pageCursor: kotlin.String?, sort: SortGetCatalogCategoryItems?) : ApiResponse<GetCatalogItemResponseCollectionCompoundDocument?> {
        val localVariableConfig = getCatalogCategoryItemsRequestConfig(id = id, revision = revision, fieldsCatalogItem = fieldsCatalogItem, fieldsCatalogVariant = fieldsCatalogVariant, filter = filter, include = include, pageCursor = pageCursor, sort = sort)

        return request<Unit, GetCatalogItemResponseCollectionCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getCatalogCategoryItems
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;category.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60; (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return RequestConfig
     */
    fun getCatalogCategoryItemsRequestConfig(id: kotlin.String, revision: kotlin.String, fieldsCatalogItem: kotlin.collections.List<FieldsCatalogItemGetCatalogCategoryItems>?, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCatalogCategoryItems>?, filter: kotlin.String?, include: kotlin.collections.List<IncludeGetCatalogCategoryItems>?, pageCursor: kotlin.String?, sort: SortGetCatalogCategoryItems?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogItem != null) {
                    put("fields[catalog-item]", toMultiValue(fieldsCatalogItem.toList(), "csv"))
                }
                if (fieldsCatalogVariant != null) {
                    put("fields[catalog-variant]", toMultiValue(fieldsCatalogVariant.toList(), "csv"))
                }
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (include != null) {
                    put("include", toMultiValue(include.toList(), "csv"))
                }
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
                if (sort != null) {
                    put("sort", listOf(sort.value))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-categories/{id}/items/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Get Catalog Category Relationships Items
     * Get all items in the given category ID.  Returns a maximum of 100 items per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return GetCatalogCategoryItemListResponseCollection
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getCatalogCategoryRelationshipsItems(id: kotlin.String, revision: kotlin.String = "2024-07-15", pageCursor: kotlin.String? = null) : GetCatalogCategoryItemListResponseCollection {
        val localVarResponse = getCatalogCategoryRelationshipsItemsWithHttpInfo(id = id, revision = revision, pageCursor = pageCursor)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogCategoryItemListResponseCollection
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Catalog Category Relationships Items
     * Get all items in the given category ID.  Returns a maximum of 100 items per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return ApiResponse<GetCatalogCategoryItemListResponseCollection?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getCatalogCategoryRelationshipsItemsWithHttpInfo(id: kotlin.String, revision: kotlin.String, pageCursor: kotlin.String?) : ApiResponse<GetCatalogCategoryItemListResponseCollection?> {
        val localVariableConfig = getCatalogCategoryRelationshipsItemsRequestConfig(id = id, revision = revision, pageCursor = pageCursor)

        return request<Unit, GetCatalogCategoryItemListResponseCollection>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getCatalogCategoryRelationshipsItems
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return RequestConfig
     */
    fun getCatalogCategoryRelationshipsItemsRequestConfig(id: kotlin.String, revision: kotlin.String, pageCursor: kotlin.String?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-categories/{id}/relationships/items/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogItem
     */
     enum class FieldsCatalogItemGetCatalogItem(val value: kotlin.String) {
         @Json(name = "external_id") external_id("external_id"),
         @Json(name = "title") title("title"),
         @Json(name = "description") description("description"),
         @Json(name = "price") price("price"),
         @Json(name = "url") url("url"),
         @Json(name = "image_full_url") image_full_url("image_full_url"),
         @Json(name = "image_thumbnail_url") image_thumbnail_url("image_thumbnail_url"),
         @Json(name = "images") images("images"),
         @Json(name = "custom_metadata") custom_metadata("custom_metadata"),
         @Json(name = "published") published("published"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter fieldsCatalogVariant
     */
     enum class FieldsCatalogVariantGetCatalogItem(val value: kotlin.String) {
         @Json(name = "external_id") external_id("external_id"),
         @Json(name = "title") title("title"),
         @Json(name = "description") description("description"),
         @Json(name = "sku") sku("sku"),
         @Json(name = "inventory_policy") inventory_policy("inventory_policy"),
         @Json(name = "inventory_quantity") inventory_quantity("inventory_quantity"),
         @Json(name = "price") price("price"),
         @Json(name = "url") url("url"),
         @Json(name = "image_full_url") image_full_url("image_full_url"),
         @Json(name = "image_thumbnail_url") image_thumbnail_url("image_thumbnail_url"),
         @Json(name = "images") images("images"),
         @Json(name = "custom_metadata") custom_metadata("custom_metadata"),
         @Json(name = "published") published("published"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter include
     */
     enum class IncludeGetCatalogItem(val value: kotlin.String) {
         @Json(name = "variants") variants("variants");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Catalog Item
     * Get a specific catalog item with the given item ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return GetCatalogItemResponseCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getCatalogItem(id: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsCatalogItem: kotlin.collections.List<FieldsCatalogItemGetCatalogItem>? = null, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCatalogItem>? = null, include: kotlin.collections.List<IncludeGetCatalogItem>? = null) : GetCatalogItemResponseCompoundDocument {
        val localVarResponse = getCatalogItemWithHttpInfo(id = id, revision = revision, fieldsCatalogItem = fieldsCatalogItem, fieldsCatalogVariant = fieldsCatalogVariant, include = include)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogItemResponseCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Catalog Item
     * Get a specific catalog item with the given item ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return ApiResponse<GetCatalogItemResponseCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getCatalogItemWithHttpInfo(id: kotlin.String, revision: kotlin.String, fieldsCatalogItem: kotlin.collections.List<FieldsCatalogItemGetCatalogItem>?, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCatalogItem>?, include: kotlin.collections.List<IncludeGetCatalogItem>?) : ApiResponse<GetCatalogItemResponseCompoundDocument?> {
        val localVariableConfig = getCatalogItemRequestConfig(id = id, revision = revision, fieldsCatalogItem = fieldsCatalogItem, fieldsCatalogVariant = fieldsCatalogVariant, include = include)

        return request<Unit, GetCatalogItemResponseCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getCatalogItem
     *
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return RequestConfig
     */
    fun getCatalogItemRequestConfig(id: kotlin.String, revision: kotlin.String, fieldsCatalogItem: kotlin.collections.List<FieldsCatalogItemGetCatalogItem>?, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCatalogItem>?, include: kotlin.collections.List<IncludeGetCatalogItem>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogItem != null) {
                    put("fields[catalog-item]", toMultiValue(fieldsCatalogItem.toList(), "csv"))
                }
                if (fieldsCatalogVariant != null) {
                    put("fields[catalog-variant]", toMultiValue(fieldsCatalogVariant.toList(), "csv"))
                }
                if (include != null) {
                    put("include", toMultiValue(include.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-items/{id}/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogCategory
     */
     enum class FieldsCatalogCategoryGetCatalogItemCategories(val value: kotlin.String) {
         @Json(name = "external_id") external_id("external_id"),
         @Json(name = "name") name("name"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter sort
     */
     enum class SortGetCatalogItemCategories(val value: kotlin.String) {
         @Json(name = "created") created("created"),
         @Json(name = "-created") MinusCreated("-created");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Catalog Item Categories
     * Get all catalog categories that an item with the given item ID is in.  Catalog categories can be sorted by the following fields, in ascending and descending order: &#x60;created&#x60;  Returns a maximum of 100 categories per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return GetCatalogCategoryResponseCollection
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getCatalogItemCategories(id: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsCatalogCategory: kotlin.collections.List<FieldsCatalogCategoryGetCatalogItemCategories>? = null, filter: kotlin.String? = null, pageCursor: kotlin.String? = null, sort: SortGetCatalogItemCategories? = null) : GetCatalogCategoryResponseCollection {
        val localVarResponse = getCatalogItemCategoriesWithHttpInfo(id = id, revision = revision, fieldsCatalogCategory = fieldsCatalogCategory, filter = filter, pageCursor = pageCursor, sort = sort)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogCategoryResponseCollection
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Catalog Item Categories
     * Get all catalog categories that an item with the given item ID is in.  Catalog categories can be sorted by the following fields, in ascending and descending order: &#x60;created&#x60;  Returns a maximum of 100 categories per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return ApiResponse<GetCatalogCategoryResponseCollection?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getCatalogItemCategoriesWithHttpInfo(id: kotlin.String, revision: kotlin.String, fieldsCatalogCategory: kotlin.collections.List<FieldsCatalogCategoryGetCatalogItemCategories>?, filter: kotlin.String?, pageCursor: kotlin.String?, sort: SortGetCatalogItemCategories?) : ApiResponse<GetCatalogCategoryResponseCollection?> {
        val localVariableConfig = getCatalogItemCategoriesRequestConfig(id = id, revision = revision, fieldsCatalogCategory = fieldsCatalogCategory, filter = filter, pageCursor = pageCursor, sort = sort)

        return request<Unit, GetCatalogCategoryResponseCollection>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getCatalogItemCategories
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return RequestConfig
     */
    fun getCatalogItemCategoriesRequestConfig(id: kotlin.String, revision: kotlin.String, fieldsCatalogCategory: kotlin.collections.List<FieldsCatalogCategoryGetCatalogItemCategories>?, filter: kotlin.String?, pageCursor: kotlin.String?, sort: SortGetCatalogItemCategories?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogCategory != null) {
                    put("fields[catalog-category]", toMultiValue(fieldsCatalogCategory.toList(), "csv"))
                }
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
                if (sort != null) {
                    put("sort", listOf(sort.value))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-items/{id}/categories/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Get Catalog Item Relationships Categories
     * Get all catalog categories that a particular item is in.  Returns a maximum of 100 categories per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return GetCatalogItemCategoryListResponseCollection
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getCatalogItemRelationshipsCategories(id: kotlin.String, revision: kotlin.String = "2024-07-15", pageCursor: kotlin.String? = null) : GetCatalogItemCategoryListResponseCollection {
        val localVarResponse = getCatalogItemRelationshipsCategoriesWithHttpInfo(id = id, revision = revision, pageCursor = pageCursor)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogItemCategoryListResponseCollection
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Catalog Item Relationships Categories
     * Get all catalog categories that a particular item is in.  Returns a maximum of 100 categories per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return ApiResponse<GetCatalogItemCategoryListResponseCollection?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getCatalogItemRelationshipsCategoriesWithHttpInfo(id: kotlin.String, revision: kotlin.String, pageCursor: kotlin.String?) : ApiResponse<GetCatalogItemCategoryListResponseCollection?> {
        val localVariableConfig = getCatalogItemRelationshipsCategoriesRequestConfig(id = id, revision = revision, pageCursor = pageCursor)

        return request<Unit, GetCatalogItemCategoryListResponseCollection>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getCatalogItemRelationshipsCategories
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return RequestConfig
     */
    fun getCatalogItemRelationshipsCategoriesRequestConfig(id: kotlin.String, revision: kotlin.String, pageCursor: kotlin.String?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-items/{id}/relationships/categories/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogVariant
     */
     enum class FieldsCatalogVariantGetCatalogItemVariants(val value: kotlin.String) {
         @Json(name = "external_id") external_id("external_id"),
         @Json(name = "title") title("title"),
         @Json(name = "description") description("description"),
         @Json(name = "sku") sku("sku"),
         @Json(name = "inventory_policy") inventory_policy("inventory_policy"),
         @Json(name = "inventory_quantity") inventory_quantity("inventory_quantity"),
         @Json(name = "price") price("price"),
         @Json(name = "url") url("url"),
         @Json(name = "image_full_url") image_full_url("image_full_url"),
         @Json(name = "image_thumbnail_url") image_thumbnail_url("image_thumbnail_url"),
         @Json(name = "images") images("images"),
         @Json(name = "custom_metadata") custom_metadata("custom_metadata"),
         @Json(name = "published") published("published"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter sort
     */
     enum class SortGetCatalogItemVariants(val value: kotlin.String) {
         @Json(name = "created") created("created"),
         @Json(name = "-created") MinusCreated("-created");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Catalog Item Variants
     * Get all variants related to the given item ID.  Variants can be sorted by the following fields, in ascending and descending order: &#x60;created&#x60;  Returns a maximum of 100 variants per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;sku&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return GetCatalogVariantResponseCollection
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getCatalogItemVariants(id: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCatalogItemVariants>? = null, filter: kotlin.String? = null, pageCursor: kotlin.String? = null, sort: SortGetCatalogItemVariants? = null) : GetCatalogVariantResponseCollection {
        val localVarResponse = getCatalogItemVariantsWithHttpInfo(id = id, revision = revision, fieldsCatalogVariant = fieldsCatalogVariant, filter = filter, pageCursor = pageCursor, sort = sort)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogVariantResponseCollection
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Catalog Item Variants
     * Get all variants related to the given item ID.  Variants can be sorted by the following fields, in ascending and descending order: &#x60;created&#x60;  Returns a maximum of 100 variants per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;sku&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return ApiResponse<GetCatalogVariantResponseCollection?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getCatalogItemVariantsWithHttpInfo(id: kotlin.String, revision: kotlin.String, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCatalogItemVariants>?, filter: kotlin.String?, pageCursor: kotlin.String?, sort: SortGetCatalogItemVariants?) : ApiResponse<GetCatalogVariantResponseCollection?> {
        val localVariableConfig = getCatalogItemVariantsRequestConfig(id = id, revision = revision, fieldsCatalogVariant = fieldsCatalogVariant, filter = filter, pageCursor = pageCursor, sort = sort)

        return request<Unit, GetCatalogVariantResponseCollection>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getCatalogItemVariants
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;sku&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return RequestConfig
     */
    fun getCatalogItemVariantsRequestConfig(id: kotlin.String, revision: kotlin.String, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCatalogItemVariants>?, filter: kotlin.String?, pageCursor: kotlin.String?, sort: SortGetCatalogItemVariants?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogVariant != null) {
                    put("fields[catalog-variant]", toMultiValue(fieldsCatalogVariant.toList(), "csv"))
                }
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
                if (sort != null) {
                    put("sort", listOf(sort.value))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-items/{id}/variants/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogItem
     */
     enum class FieldsCatalogItemGetCatalogItems(val value: kotlin.String) {
         @Json(name = "external_id") external_id("external_id"),
         @Json(name = "title") title("title"),
         @Json(name = "description") description("description"),
         @Json(name = "price") price("price"),
         @Json(name = "url") url("url"),
         @Json(name = "image_full_url") image_full_url("image_full_url"),
         @Json(name = "image_thumbnail_url") image_thumbnail_url("image_thumbnail_url"),
         @Json(name = "images") images("images"),
         @Json(name = "custom_metadata") custom_metadata("custom_metadata"),
         @Json(name = "published") published("published"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter fieldsCatalogVariant
     */
     enum class FieldsCatalogVariantGetCatalogItems(val value: kotlin.String) {
         @Json(name = "external_id") external_id("external_id"),
         @Json(name = "title") title("title"),
         @Json(name = "description") description("description"),
         @Json(name = "sku") sku("sku"),
         @Json(name = "inventory_policy") inventory_policy("inventory_policy"),
         @Json(name = "inventory_quantity") inventory_quantity("inventory_quantity"),
         @Json(name = "price") price("price"),
         @Json(name = "url") url("url"),
         @Json(name = "image_full_url") image_full_url("image_full_url"),
         @Json(name = "image_thumbnail_url") image_thumbnail_url("image_thumbnail_url"),
         @Json(name = "images") images("images"),
         @Json(name = "custom_metadata") custom_metadata("custom_metadata"),
         @Json(name = "published") published("published"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter include
     */
     enum class IncludeGetCatalogItems(val value: kotlin.String) {
         @Json(name = "variants") variants("variants");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter sort
     */
     enum class SortGetCatalogItems(val value: kotlin.String) {
         @Json(name = "created") created("created"),
         @Json(name = "-created") MinusCreated("-created");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Catalog Items
     * Get all catalog items in an account.  Catalog items can be sorted by the following fields, in ascending and descending order: &#x60;created&#x60;  Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog type is &#x60;$default&#x60;.  Returns a maximum of 100 items per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;category.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60; (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return GetCatalogItemResponseCollectionCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getCatalogItems(revision: kotlin.String = "2024-07-15", fieldsCatalogItem: kotlin.collections.List<FieldsCatalogItemGetCatalogItems>? = null, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCatalogItems>? = null, filter: kotlin.String? = null, include: kotlin.collections.List<IncludeGetCatalogItems>? = null, pageCursor: kotlin.String? = null, sort: SortGetCatalogItems? = null) : GetCatalogItemResponseCollectionCompoundDocument {
        val localVarResponse = getCatalogItemsWithHttpInfo(revision = revision, fieldsCatalogItem = fieldsCatalogItem, fieldsCatalogVariant = fieldsCatalogVariant, filter = filter, include = include, pageCursor = pageCursor, sort = sort)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogItemResponseCollectionCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Catalog Items
     * Get all catalog items in an account.  Catalog items can be sorted by the following fields, in ascending and descending order: &#x60;created&#x60;  Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog type is &#x60;$default&#x60;.  Returns a maximum of 100 items per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;category.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60; (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return ApiResponse<GetCatalogItemResponseCollectionCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getCatalogItemsWithHttpInfo(revision: kotlin.String, fieldsCatalogItem: kotlin.collections.List<FieldsCatalogItemGetCatalogItems>?, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCatalogItems>?, filter: kotlin.String?, include: kotlin.collections.List<IncludeGetCatalogItems>?, pageCursor: kotlin.String?, sort: SortGetCatalogItems?) : ApiResponse<GetCatalogItemResponseCollectionCompoundDocument?> {
        val localVariableConfig = getCatalogItemsRequestConfig(revision = revision, fieldsCatalogItem = fieldsCatalogItem, fieldsCatalogVariant = fieldsCatalogVariant, filter = filter, include = include, pageCursor = pageCursor, sort = sort)

        return request<Unit, GetCatalogItemResponseCollectionCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getCatalogItems
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;category.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60; (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return RequestConfig
     */
    fun getCatalogItemsRequestConfig(revision: kotlin.String, fieldsCatalogItem: kotlin.collections.List<FieldsCatalogItemGetCatalogItems>?, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCatalogItems>?, filter: kotlin.String?, include: kotlin.collections.List<IncludeGetCatalogItems>?, pageCursor: kotlin.String?, sort: SortGetCatalogItems?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogItem != null) {
                    put("fields[catalog-item]", toMultiValue(fieldsCatalogItem.toList(), "csv"))
                }
                if (fieldsCatalogVariant != null) {
                    put("fields[catalog-variant]", toMultiValue(fieldsCatalogVariant.toList(), "csv"))
                }
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (include != null) {
                    put("include", toMultiValue(include.toList(), "csv"))
                }
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
                if (sort != null) {
                    put("sort", listOf(sort.value))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-items/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogVariant
     */
     enum class FieldsCatalogVariantGetCatalogVariant(val value: kotlin.String) {
         @Json(name = "external_id") external_id("external_id"),
         @Json(name = "title") title("title"),
         @Json(name = "description") description("description"),
         @Json(name = "sku") sku("sku"),
         @Json(name = "inventory_policy") inventory_policy("inventory_policy"),
         @Json(name = "inventory_quantity") inventory_quantity("inventory_quantity"),
         @Json(name = "price") price("price"),
         @Json(name = "url") url("url"),
         @Json(name = "image_full_url") image_full_url("image_full_url"),
         @Json(name = "image_thumbnail_url") image_thumbnail_url("image_thumbnail_url"),
         @Json(name = "images") images("images"),
         @Json(name = "custom_metadata") custom_metadata("custom_metadata"),
         @Json(name = "published") published("published"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Catalog Variant
     * Get a catalog item variant with the given variant ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param id The catalog variant ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return GetCatalogVariantResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getCatalogVariant(id: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCatalogVariant>? = null) : GetCatalogVariantResponse {
        val localVarResponse = getCatalogVariantWithHttpInfo(id = id, revision = revision, fieldsCatalogVariant = fieldsCatalogVariant)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogVariantResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Catalog Variant
     * Get a catalog item variant with the given variant ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param id The catalog variant ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return ApiResponse<GetCatalogVariantResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getCatalogVariantWithHttpInfo(id: kotlin.String, revision: kotlin.String, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCatalogVariant>?) : ApiResponse<GetCatalogVariantResponse?> {
        val localVariableConfig = getCatalogVariantRequestConfig(id = id, revision = revision, fieldsCatalogVariant = fieldsCatalogVariant)

        return request<Unit, GetCatalogVariantResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getCatalogVariant
     *
     * @param id The catalog variant ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return RequestConfig
     */
    fun getCatalogVariantRequestConfig(id: kotlin.String, revision: kotlin.String, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCatalogVariant>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogVariant != null) {
                    put("fields[catalog-variant]", toMultiValue(fieldsCatalogVariant.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-variants/{id}/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogVariant
     */
     enum class FieldsCatalogVariantGetCatalogVariants(val value: kotlin.String) {
         @Json(name = "external_id") external_id("external_id"),
         @Json(name = "title") title("title"),
         @Json(name = "description") description("description"),
         @Json(name = "sku") sku("sku"),
         @Json(name = "inventory_policy") inventory_policy("inventory_policy"),
         @Json(name = "inventory_quantity") inventory_quantity("inventory_quantity"),
         @Json(name = "price") price("price"),
         @Json(name = "url") url("url"),
         @Json(name = "image_full_url") image_full_url("image_full_url"),
         @Json(name = "image_thumbnail_url") image_thumbnail_url("image_thumbnail_url"),
         @Json(name = "images") images("images"),
         @Json(name = "custom_metadata") custom_metadata("custom_metadata"),
         @Json(name = "published") published("published"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter sort
     */
     enum class SortGetCatalogVariants(val value: kotlin.String) {
         @Json(name = "created") created("created"),
         @Json(name = "-created") MinusCreated("-created");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Catalog Variants
     * Get all variants in an account.  Variants can be sorted by the following fields, in ascending and descending order: &#x60;created&#x60;  Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog type is &#x60;$default&#x60;.  Returns a maximum of 100 variants per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;sku&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return GetCatalogVariantResponseCollection
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getCatalogVariants(revision: kotlin.String = "2024-07-15", fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCatalogVariants>? = null, filter: kotlin.String? = null, pageCursor: kotlin.String? = null, sort: SortGetCatalogVariants? = null) : GetCatalogVariantResponseCollection {
        val localVarResponse = getCatalogVariantsWithHttpInfo(revision = revision, fieldsCatalogVariant = fieldsCatalogVariant, filter = filter, pageCursor = pageCursor, sort = sort)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogVariantResponseCollection
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Catalog Variants
     * Get all variants in an account.  Variants can be sorted by the following fields, in ascending and descending order: &#x60;created&#x60;  Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog type is &#x60;$default&#x60;.  Returns a maximum of 100 variants per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;sku&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return ApiResponse<GetCatalogVariantResponseCollection?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getCatalogVariantsWithHttpInfo(revision: kotlin.String, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCatalogVariants>?, filter: kotlin.String?, pageCursor: kotlin.String?, sort: SortGetCatalogVariants?) : ApiResponse<GetCatalogVariantResponseCollection?> {
        val localVariableConfig = getCatalogVariantsRequestConfig(revision = revision, fieldsCatalogVariant = fieldsCatalogVariant, filter = filter, pageCursor = pageCursor, sort = sort)

        return request<Unit, GetCatalogVariantResponseCollection>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getCatalogVariants
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;ids&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;item.id&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;sku&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;title&#x60;: &#x60;contains&#x60;&lt;br&gt;&#x60;published&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return RequestConfig
     */
    fun getCatalogVariantsRequestConfig(revision: kotlin.String, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCatalogVariants>?, filter: kotlin.String?, pageCursor: kotlin.String?, sort: SortGetCatalogVariants?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogVariant != null) {
                    put("fields[catalog-variant]", toMultiValue(fieldsCatalogVariant.toList(), "csv"))
                }
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
                if (sort != null) {
                    put("sort", listOf(sort.value))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-variants/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogCategoryBulkCreateJob
     */
     enum class FieldsCatalogCategoryBulkCreateJobGetCreateCategoriesJob(val value: kotlin.String) {
         @Json(name = "status") status("status"),
         @Json(name = "created_at") created_at("created_at"),
         @Json(name = "total_count") total_count("total_count"),
         @Json(name = "completed_count") completed_count("completed_count"),
         @Json(name = "failed_count") failed_count("failed_count"),
         @Json(name = "completed_at") completed_at("completed_at"),
         @Json(name = "errors") errors("errors"),
         @Json(name = "expires_at") expires_at("expires_at");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter fieldsCatalogCategory
     */
     enum class FieldsCatalogCategoryGetCreateCategoriesJob(val value: kotlin.String) {
         @Json(name = "external_id") external_id("external_id"),
         @Json(name = "name") name("name"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter include
     */
     enum class IncludeGetCreateCategoriesJob(val value: kotlin.String) {
         @Json(name = "categories") categories("categories");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Create Categories Job
     * Get a catalog category bulk create job with the given job ID.  An &#x60;include&#x60; parameter can be provided to get the following related resource data: &#x60;categories&#x60;.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategoryBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return GetCatalogCategoryCreateJobResponseCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getCreateCategoriesJob(jobId: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsCatalogCategoryBulkCreateJob: kotlin.collections.List<FieldsCatalogCategoryBulkCreateJobGetCreateCategoriesJob>? = null, fieldsCatalogCategory: kotlin.collections.List<FieldsCatalogCategoryGetCreateCategoriesJob>? = null, include: kotlin.collections.List<IncludeGetCreateCategoriesJob>? = null) : GetCatalogCategoryCreateJobResponseCompoundDocument {
        val localVarResponse = getCreateCategoriesJobWithHttpInfo(jobId = jobId, revision = revision, fieldsCatalogCategoryBulkCreateJob = fieldsCatalogCategoryBulkCreateJob, fieldsCatalogCategory = fieldsCatalogCategory, include = include)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogCategoryCreateJobResponseCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Create Categories Job
     * Get a catalog category bulk create job with the given job ID.  An &#x60;include&#x60; parameter can be provided to get the following related resource data: &#x60;categories&#x60;.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategoryBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return ApiResponse<GetCatalogCategoryCreateJobResponseCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getCreateCategoriesJobWithHttpInfo(jobId: kotlin.String, revision: kotlin.String, fieldsCatalogCategoryBulkCreateJob: kotlin.collections.List<FieldsCatalogCategoryBulkCreateJobGetCreateCategoriesJob>?, fieldsCatalogCategory: kotlin.collections.List<FieldsCatalogCategoryGetCreateCategoriesJob>?, include: kotlin.collections.List<IncludeGetCreateCategoriesJob>?) : ApiResponse<GetCatalogCategoryCreateJobResponseCompoundDocument?> {
        val localVariableConfig = getCreateCategoriesJobRequestConfig(jobId = jobId, revision = revision, fieldsCatalogCategoryBulkCreateJob = fieldsCatalogCategoryBulkCreateJob, fieldsCatalogCategory = fieldsCatalogCategory, include = include)

        return request<Unit, GetCatalogCategoryCreateJobResponseCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getCreateCategoriesJob
     *
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategoryBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return RequestConfig
     */
    fun getCreateCategoriesJobRequestConfig(jobId: kotlin.String, revision: kotlin.String, fieldsCatalogCategoryBulkCreateJob: kotlin.collections.List<FieldsCatalogCategoryBulkCreateJobGetCreateCategoriesJob>?, fieldsCatalogCategory: kotlin.collections.List<FieldsCatalogCategoryGetCreateCategoriesJob>?, include: kotlin.collections.List<IncludeGetCreateCategoriesJob>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogCategoryBulkCreateJob != null) {
                    put("fields[catalog-category-bulk-create-job]", toMultiValue(fieldsCatalogCategoryBulkCreateJob.toList(), "csv"))
                }
                if (fieldsCatalogCategory != null) {
                    put("fields[catalog-category]", toMultiValue(fieldsCatalogCategory.toList(), "csv"))
                }
                if (include != null) {
                    put("include", toMultiValue(include.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-category-bulk-create-jobs/{job_id}/".replace("{"+"job_id"+"}", encodeURIComponent(jobId.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogCategoryBulkCreateJob
     */
     enum class FieldsCatalogCategoryBulkCreateJobGetCreateCategoriesJobs(val value: kotlin.String) {
         @Json(name = "status") status("status"),
         @Json(name = "created_at") created_at("created_at"),
         @Json(name = "total_count") total_count("total_count"),
         @Json(name = "completed_count") completed_count("completed_count"),
         @Json(name = "failed_count") failed_count("failed_count"),
         @Json(name = "completed_at") completed_at("completed_at"),
         @Json(name = "errors") errors("errors"),
         @Json(name = "expires_at") expires_at("expires_at");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Create Categories Jobs
     * Get all catalog category bulk create jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategoryBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return GetCatalogCategoryCreateJobResponseCollectionCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getCreateCategoriesJobs(revision: kotlin.String = "2024-07-15", fieldsCatalogCategoryBulkCreateJob: kotlin.collections.List<FieldsCatalogCategoryBulkCreateJobGetCreateCategoriesJobs>? = null, filter: kotlin.String? = null, pageCursor: kotlin.String? = null) : GetCatalogCategoryCreateJobResponseCollectionCompoundDocument {
        val localVarResponse = getCreateCategoriesJobsWithHttpInfo(revision = revision, fieldsCatalogCategoryBulkCreateJob = fieldsCatalogCategoryBulkCreateJob, filter = filter, pageCursor = pageCursor)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogCategoryCreateJobResponseCollectionCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Create Categories Jobs
     * Get all catalog category bulk create jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategoryBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return ApiResponse<GetCatalogCategoryCreateJobResponseCollectionCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getCreateCategoriesJobsWithHttpInfo(revision: kotlin.String, fieldsCatalogCategoryBulkCreateJob: kotlin.collections.List<FieldsCatalogCategoryBulkCreateJobGetCreateCategoriesJobs>?, filter: kotlin.String?, pageCursor: kotlin.String?) : ApiResponse<GetCatalogCategoryCreateJobResponseCollectionCompoundDocument?> {
        val localVariableConfig = getCreateCategoriesJobsRequestConfig(revision = revision, fieldsCatalogCategoryBulkCreateJob = fieldsCatalogCategoryBulkCreateJob, filter = filter, pageCursor = pageCursor)

        return request<Unit, GetCatalogCategoryCreateJobResponseCollectionCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getCreateCategoriesJobs
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategoryBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return RequestConfig
     */
    fun getCreateCategoriesJobsRequestConfig(revision: kotlin.String, fieldsCatalogCategoryBulkCreateJob: kotlin.collections.List<FieldsCatalogCategoryBulkCreateJobGetCreateCategoriesJobs>?, filter: kotlin.String?, pageCursor: kotlin.String?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogCategoryBulkCreateJob != null) {
                    put("fields[catalog-category-bulk-create-job]", toMultiValue(fieldsCatalogCategoryBulkCreateJob.toList(), "csv"))
                }
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-category-bulk-create-jobs/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogItemBulkCreateJob
     */
     enum class FieldsCatalogItemBulkCreateJobGetCreateItemsJob(val value: kotlin.String) {
         @Json(name = "status") status("status"),
         @Json(name = "created_at") created_at("created_at"),
         @Json(name = "total_count") total_count("total_count"),
         @Json(name = "completed_count") completed_count("completed_count"),
         @Json(name = "failed_count") failed_count("failed_count"),
         @Json(name = "completed_at") completed_at("completed_at"),
         @Json(name = "errors") errors("errors"),
         @Json(name = "expires_at") expires_at("expires_at");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter fieldsCatalogItem
     */
     enum class FieldsCatalogItemGetCreateItemsJob(val value: kotlin.String) {
         @Json(name = "external_id") external_id("external_id"),
         @Json(name = "title") title("title"),
         @Json(name = "description") description("description"),
         @Json(name = "price") price("price"),
         @Json(name = "url") url("url"),
         @Json(name = "image_full_url") image_full_url("image_full_url"),
         @Json(name = "image_thumbnail_url") image_thumbnail_url("image_thumbnail_url"),
         @Json(name = "images") images("images"),
         @Json(name = "custom_metadata") custom_metadata("custom_metadata"),
         @Json(name = "published") published("published"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter include
     */
     enum class IncludeGetCreateItemsJob(val value: kotlin.String) {
         @Json(name = "items") items("items");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Create Items Job
     * Get a catalog item bulk create job with the given job ID.  An &#x60;include&#x60; parameter can be provided to get the following related resource data: &#x60;items&#x60;.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItemBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return GetCatalogItemCreateJobResponseCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getCreateItemsJob(jobId: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsCatalogItemBulkCreateJob: kotlin.collections.List<FieldsCatalogItemBulkCreateJobGetCreateItemsJob>? = null, fieldsCatalogItem: kotlin.collections.List<FieldsCatalogItemGetCreateItemsJob>? = null, include: kotlin.collections.List<IncludeGetCreateItemsJob>? = null) : GetCatalogItemCreateJobResponseCompoundDocument {
        val localVarResponse = getCreateItemsJobWithHttpInfo(jobId = jobId, revision = revision, fieldsCatalogItemBulkCreateJob = fieldsCatalogItemBulkCreateJob, fieldsCatalogItem = fieldsCatalogItem, include = include)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogItemCreateJobResponseCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Create Items Job
     * Get a catalog item bulk create job with the given job ID.  An &#x60;include&#x60; parameter can be provided to get the following related resource data: &#x60;items&#x60;.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItemBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return ApiResponse<GetCatalogItemCreateJobResponseCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getCreateItemsJobWithHttpInfo(jobId: kotlin.String, revision: kotlin.String, fieldsCatalogItemBulkCreateJob: kotlin.collections.List<FieldsCatalogItemBulkCreateJobGetCreateItemsJob>?, fieldsCatalogItem: kotlin.collections.List<FieldsCatalogItemGetCreateItemsJob>?, include: kotlin.collections.List<IncludeGetCreateItemsJob>?) : ApiResponse<GetCatalogItemCreateJobResponseCompoundDocument?> {
        val localVariableConfig = getCreateItemsJobRequestConfig(jobId = jobId, revision = revision, fieldsCatalogItemBulkCreateJob = fieldsCatalogItemBulkCreateJob, fieldsCatalogItem = fieldsCatalogItem, include = include)

        return request<Unit, GetCatalogItemCreateJobResponseCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getCreateItemsJob
     *
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItemBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return RequestConfig
     */
    fun getCreateItemsJobRequestConfig(jobId: kotlin.String, revision: kotlin.String, fieldsCatalogItemBulkCreateJob: kotlin.collections.List<FieldsCatalogItemBulkCreateJobGetCreateItemsJob>?, fieldsCatalogItem: kotlin.collections.List<FieldsCatalogItemGetCreateItemsJob>?, include: kotlin.collections.List<IncludeGetCreateItemsJob>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogItemBulkCreateJob != null) {
                    put("fields[catalog-item-bulk-create-job]", toMultiValue(fieldsCatalogItemBulkCreateJob.toList(), "csv"))
                }
                if (fieldsCatalogItem != null) {
                    put("fields[catalog-item]", toMultiValue(fieldsCatalogItem.toList(), "csv"))
                }
                if (include != null) {
                    put("include", toMultiValue(include.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-item-bulk-create-jobs/{job_id}/".replace("{"+"job_id"+"}", encodeURIComponent(jobId.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogItemBulkCreateJob
     */
     enum class FieldsCatalogItemBulkCreateJobGetCreateItemsJobs(val value: kotlin.String) {
         @Json(name = "status") status("status"),
         @Json(name = "created_at") created_at("created_at"),
         @Json(name = "total_count") total_count("total_count"),
         @Json(name = "completed_count") completed_count("completed_count"),
         @Json(name = "failed_count") failed_count("failed_count"),
         @Json(name = "completed_at") completed_at("completed_at"),
         @Json(name = "errors") errors("errors"),
         @Json(name = "expires_at") expires_at("expires_at");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Create Items Jobs
     * Get all catalog item bulk create jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItemBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return GetCatalogItemCreateJobResponseCollectionCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getCreateItemsJobs(revision: kotlin.String = "2024-07-15", fieldsCatalogItemBulkCreateJob: kotlin.collections.List<FieldsCatalogItemBulkCreateJobGetCreateItemsJobs>? = null, filter: kotlin.String? = null, pageCursor: kotlin.String? = null) : GetCatalogItemCreateJobResponseCollectionCompoundDocument {
        val localVarResponse = getCreateItemsJobsWithHttpInfo(revision = revision, fieldsCatalogItemBulkCreateJob = fieldsCatalogItemBulkCreateJob, filter = filter, pageCursor = pageCursor)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogItemCreateJobResponseCollectionCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Create Items Jobs
     * Get all catalog item bulk create jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItemBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return ApiResponse<GetCatalogItemCreateJobResponseCollectionCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getCreateItemsJobsWithHttpInfo(revision: kotlin.String, fieldsCatalogItemBulkCreateJob: kotlin.collections.List<FieldsCatalogItemBulkCreateJobGetCreateItemsJobs>?, filter: kotlin.String?, pageCursor: kotlin.String?) : ApiResponse<GetCatalogItemCreateJobResponseCollectionCompoundDocument?> {
        val localVariableConfig = getCreateItemsJobsRequestConfig(revision = revision, fieldsCatalogItemBulkCreateJob = fieldsCatalogItemBulkCreateJob, filter = filter, pageCursor = pageCursor)

        return request<Unit, GetCatalogItemCreateJobResponseCollectionCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getCreateItemsJobs
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItemBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return RequestConfig
     */
    fun getCreateItemsJobsRequestConfig(revision: kotlin.String, fieldsCatalogItemBulkCreateJob: kotlin.collections.List<FieldsCatalogItemBulkCreateJobGetCreateItemsJobs>?, filter: kotlin.String?, pageCursor: kotlin.String?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogItemBulkCreateJob != null) {
                    put("fields[catalog-item-bulk-create-job]", toMultiValue(fieldsCatalogItemBulkCreateJob.toList(), "csv"))
                }
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-item-bulk-create-jobs/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogVariantBulkCreateJob
     */
     enum class FieldsCatalogVariantBulkCreateJobGetCreateVariantsJob(val value: kotlin.String) {
         @Json(name = "status") status("status"),
         @Json(name = "created_at") created_at("created_at"),
         @Json(name = "total_count") total_count("total_count"),
         @Json(name = "completed_count") completed_count("completed_count"),
         @Json(name = "failed_count") failed_count("failed_count"),
         @Json(name = "completed_at") completed_at("completed_at"),
         @Json(name = "errors") errors("errors"),
         @Json(name = "expires_at") expires_at("expires_at");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter fieldsCatalogVariant
     */
     enum class FieldsCatalogVariantGetCreateVariantsJob(val value: kotlin.String) {
         @Json(name = "external_id") external_id("external_id"),
         @Json(name = "title") title("title"),
         @Json(name = "description") description("description"),
         @Json(name = "sku") sku("sku"),
         @Json(name = "inventory_policy") inventory_policy("inventory_policy"),
         @Json(name = "inventory_quantity") inventory_quantity("inventory_quantity"),
         @Json(name = "price") price("price"),
         @Json(name = "url") url("url"),
         @Json(name = "image_full_url") image_full_url("image_full_url"),
         @Json(name = "image_thumbnail_url") image_thumbnail_url("image_thumbnail_url"),
         @Json(name = "images") images("images"),
         @Json(name = "custom_metadata") custom_metadata("custom_metadata"),
         @Json(name = "published") published("published"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter include
     */
     enum class IncludeGetCreateVariantsJob(val value: kotlin.String) {
         @Json(name = "variants") variants("variants");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Create Variants Job
     * Get a catalog variant bulk create job with the given job ID.  An &#x60;include&#x60; parameter can be provided to get the following related resource data: &#x60;variants&#x60;.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariantBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return GetCatalogVariantCreateJobResponseCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getCreateVariantsJob(jobId: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsCatalogVariantBulkCreateJob: kotlin.collections.List<FieldsCatalogVariantBulkCreateJobGetCreateVariantsJob>? = null, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCreateVariantsJob>? = null, include: kotlin.collections.List<IncludeGetCreateVariantsJob>? = null) : GetCatalogVariantCreateJobResponseCompoundDocument {
        val localVarResponse = getCreateVariantsJobWithHttpInfo(jobId = jobId, revision = revision, fieldsCatalogVariantBulkCreateJob = fieldsCatalogVariantBulkCreateJob, fieldsCatalogVariant = fieldsCatalogVariant, include = include)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogVariantCreateJobResponseCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Create Variants Job
     * Get a catalog variant bulk create job with the given job ID.  An &#x60;include&#x60; parameter can be provided to get the following related resource data: &#x60;variants&#x60;.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariantBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return ApiResponse<GetCatalogVariantCreateJobResponseCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getCreateVariantsJobWithHttpInfo(jobId: kotlin.String, revision: kotlin.String, fieldsCatalogVariantBulkCreateJob: kotlin.collections.List<FieldsCatalogVariantBulkCreateJobGetCreateVariantsJob>?, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCreateVariantsJob>?, include: kotlin.collections.List<IncludeGetCreateVariantsJob>?) : ApiResponse<GetCatalogVariantCreateJobResponseCompoundDocument?> {
        val localVariableConfig = getCreateVariantsJobRequestConfig(jobId = jobId, revision = revision, fieldsCatalogVariantBulkCreateJob = fieldsCatalogVariantBulkCreateJob, fieldsCatalogVariant = fieldsCatalogVariant, include = include)

        return request<Unit, GetCatalogVariantCreateJobResponseCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getCreateVariantsJob
     *
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariantBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return RequestConfig
     */
    fun getCreateVariantsJobRequestConfig(jobId: kotlin.String, revision: kotlin.String, fieldsCatalogVariantBulkCreateJob: kotlin.collections.List<FieldsCatalogVariantBulkCreateJobGetCreateVariantsJob>?, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetCreateVariantsJob>?, include: kotlin.collections.List<IncludeGetCreateVariantsJob>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogVariantBulkCreateJob != null) {
                    put("fields[catalog-variant-bulk-create-job]", toMultiValue(fieldsCatalogVariantBulkCreateJob.toList(), "csv"))
                }
                if (fieldsCatalogVariant != null) {
                    put("fields[catalog-variant]", toMultiValue(fieldsCatalogVariant.toList(), "csv"))
                }
                if (include != null) {
                    put("include", toMultiValue(include.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-variant-bulk-create-jobs/{job_id}/".replace("{"+"job_id"+"}", encodeURIComponent(jobId.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogVariantBulkCreateJob
     */
     enum class FieldsCatalogVariantBulkCreateJobGetCreateVariantsJobs(val value: kotlin.String) {
         @Json(name = "status") status("status"),
         @Json(name = "created_at") created_at("created_at"),
         @Json(name = "total_count") total_count("total_count"),
         @Json(name = "completed_count") completed_count("completed_count"),
         @Json(name = "failed_count") failed_count("failed_count"),
         @Json(name = "completed_at") completed_at("completed_at"),
         @Json(name = "errors") errors("errors"),
         @Json(name = "expires_at") expires_at("expires_at");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Create Variants Jobs
     * Get all catalog variant bulk create jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariantBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return GetCatalogVariantCreateJobResponseCollectionCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getCreateVariantsJobs(revision: kotlin.String = "2024-07-15", fieldsCatalogVariantBulkCreateJob: kotlin.collections.List<FieldsCatalogVariantBulkCreateJobGetCreateVariantsJobs>? = null, filter: kotlin.String? = null, pageCursor: kotlin.String? = null) : GetCatalogVariantCreateJobResponseCollectionCompoundDocument {
        val localVarResponse = getCreateVariantsJobsWithHttpInfo(revision = revision, fieldsCatalogVariantBulkCreateJob = fieldsCatalogVariantBulkCreateJob, filter = filter, pageCursor = pageCursor)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogVariantCreateJobResponseCollectionCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Create Variants Jobs
     * Get all catalog variant bulk create jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariantBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return ApiResponse<GetCatalogVariantCreateJobResponseCollectionCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getCreateVariantsJobsWithHttpInfo(revision: kotlin.String, fieldsCatalogVariantBulkCreateJob: kotlin.collections.List<FieldsCatalogVariantBulkCreateJobGetCreateVariantsJobs>?, filter: kotlin.String?, pageCursor: kotlin.String?) : ApiResponse<GetCatalogVariantCreateJobResponseCollectionCompoundDocument?> {
        val localVariableConfig = getCreateVariantsJobsRequestConfig(revision = revision, fieldsCatalogVariantBulkCreateJob = fieldsCatalogVariantBulkCreateJob, filter = filter, pageCursor = pageCursor)

        return request<Unit, GetCatalogVariantCreateJobResponseCollectionCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getCreateVariantsJobs
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariantBulkCreateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return RequestConfig
     */
    fun getCreateVariantsJobsRequestConfig(revision: kotlin.String, fieldsCatalogVariantBulkCreateJob: kotlin.collections.List<FieldsCatalogVariantBulkCreateJobGetCreateVariantsJobs>?, filter: kotlin.String?, pageCursor: kotlin.String?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogVariantBulkCreateJob != null) {
                    put("fields[catalog-variant-bulk-create-job]", toMultiValue(fieldsCatalogVariantBulkCreateJob.toList(), "csv"))
                }
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-variant-bulk-create-jobs/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogCategoryBulkDeleteJob
     */
     enum class FieldsCatalogCategoryBulkDeleteJobGetDeleteCategoriesJob(val value: kotlin.String) {
         @Json(name = "status") status("status"),
         @Json(name = "created_at") created_at("created_at"),
         @Json(name = "total_count") total_count("total_count"),
         @Json(name = "completed_count") completed_count("completed_count"),
         @Json(name = "failed_count") failed_count("failed_count"),
         @Json(name = "completed_at") completed_at("completed_at"),
         @Json(name = "errors") errors("errors"),
         @Json(name = "expires_at") expires_at("expires_at");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Delete Categories Job
     * Get a catalog category bulk delete job with the given job ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategoryBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return GetCatalogCategoryDeleteJobResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getDeleteCategoriesJob(jobId: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsCatalogCategoryBulkDeleteJob: kotlin.collections.List<FieldsCatalogCategoryBulkDeleteJobGetDeleteCategoriesJob>? = null) : GetCatalogCategoryDeleteJobResponse {
        val localVarResponse = getDeleteCategoriesJobWithHttpInfo(jobId = jobId, revision = revision, fieldsCatalogCategoryBulkDeleteJob = fieldsCatalogCategoryBulkDeleteJob)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogCategoryDeleteJobResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Delete Categories Job
     * Get a catalog category bulk delete job with the given job ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategoryBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return ApiResponse<GetCatalogCategoryDeleteJobResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getDeleteCategoriesJobWithHttpInfo(jobId: kotlin.String, revision: kotlin.String, fieldsCatalogCategoryBulkDeleteJob: kotlin.collections.List<FieldsCatalogCategoryBulkDeleteJobGetDeleteCategoriesJob>?) : ApiResponse<GetCatalogCategoryDeleteJobResponse?> {
        val localVariableConfig = getDeleteCategoriesJobRequestConfig(jobId = jobId, revision = revision, fieldsCatalogCategoryBulkDeleteJob = fieldsCatalogCategoryBulkDeleteJob)

        return request<Unit, GetCatalogCategoryDeleteJobResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getDeleteCategoriesJob
     *
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategoryBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return RequestConfig
     */
    fun getDeleteCategoriesJobRequestConfig(jobId: kotlin.String, revision: kotlin.String, fieldsCatalogCategoryBulkDeleteJob: kotlin.collections.List<FieldsCatalogCategoryBulkDeleteJobGetDeleteCategoriesJob>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogCategoryBulkDeleteJob != null) {
                    put("fields[catalog-category-bulk-delete-job]", toMultiValue(fieldsCatalogCategoryBulkDeleteJob.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-category-bulk-delete-jobs/{job_id}/".replace("{"+"job_id"+"}", encodeURIComponent(jobId.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogCategoryBulkDeleteJob
     */
     enum class FieldsCatalogCategoryBulkDeleteJobGetDeleteCategoriesJobs(val value: kotlin.String) {
         @Json(name = "status") status("status"),
         @Json(name = "created_at") created_at("created_at"),
         @Json(name = "total_count") total_count("total_count"),
         @Json(name = "completed_count") completed_count("completed_count"),
         @Json(name = "failed_count") failed_count("failed_count"),
         @Json(name = "completed_at") completed_at("completed_at"),
         @Json(name = "errors") errors("errors"),
         @Json(name = "expires_at") expires_at("expires_at");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Delete Categories Jobs
     * Get all catalog category bulk delete jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategoryBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return GetCatalogCategoryDeleteJobResponseCollection
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getDeleteCategoriesJobs(revision: kotlin.String = "2024-07-15", fieldsCatalogCategoryBulkDeleteJob: kotlin.collections.List<FieldsCatalogCategoryBulkDeleteJobGetDeleteCategoriesJobs>? = null, filter: kotlin.String? = null, pageCursor: kotlin.String? = null) : GetCatalogCategoryDeleteJobResponseCollection {
        val localVarResponse = getDeleteCategoriesJobsWithHttpInfo(revision = revision, fieldsCatalogCategoryBulkDeleteJob = fieldsCatalogCategoryBulkDeleteJob, filter = filter, pageCursor = pageCursor)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogCategoryDeleteJobResponseCollection
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Delete Categories Jobs
     * Get all catalog category bulk delete jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategoryBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return ApiResponse<GetCatalogCategoryDeleteJobResponseCollection?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getDeleteCategoriesJobsWithHttpInfo(revision: kotlin.String, fieldsCatalogCategoryBulkDeleteJob: kotlin.collections.List<FieldsCatalogCategoryBulkDeleteJobGetDeleteCategoriesJobs>?, filter: kotlin.String?, pageCursor: kotlin.String?) : ApiResponse<GetCatalogCategoryDeleteJobResponseCollection?> {
        val localVariableConfig = getDeleteCategoriesJobsRequestConfig(revision = revision, fieldsCatalogCategoryBulkDeleteJob = fieldsCatalogCategoryBulkDeleteJob, filter = filter, pageCursor = pageCursor)

        return request<Unit, GetCatalogCategoryDeleteJobResponseCollection>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getDeleteCategoriesJobs
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategoryBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return RequestConfig
     */
    fun getDeleteCategoriesJobsRequestConfig(revision: kotlin.String, fieldsCatalogCategoryBulkDeleteJob: kotlin.collections.List<FieldsCatalogCategoryBulkDeleteJobGetDeleteCategoriesJobs>?, filter: kotlin.String?, pageCursor: kotlin.String?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogCategoryBulkDeleteJob != null) {
                    put("fields[catalog-category-bulk-delete-job]", toMultiValue(fieldsCatalogCategoryBulkDeleteJob.toList(), "csv"))
                }
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-category-bulk-delete-jobs/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogItemBulkDeleteJob
     */
     enum class FieldsCatalogItemBulkDeleteJobGetDeleteItemsJob(val value: kotlin.String) {
         @Json(name = "status") status("status"),
         @Json(name = "created_at") created_at("created_at"),
         @Json(name = "total_count") total_count("total_count"),
         @Json(name = "completed_count") completed_count("completed_count"),
         @Json(name = "failed_count") failed_count("failed_count"),
         @Json(name = "completed_at") completed_at("completed_at"),
         @Json(name = "errors") errors("errors"),
         @Json(name = "expires_at") expires_at("expires_at");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Delete Items Job
     * Get a catalog item bulk delete job with the given job ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItemBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return GetCatalogItemDeleteJobResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getDeleteItemsJob(jobId: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsCatalogItemBulkDeleteJob: kotlin.collections.List<FieldsCatalogItemBulkDeleteJobGetDeleteItemsJob>? = null) : GetCatalogItemDeleteJobResponse {
        val localVarResponse = getDeleteItemsJobWithHttpInfo(jobId = jobId, revision = revision, fieldsCatalogItemBulkDeleteJob = fieldsCatalogItemBulkDeleteJob)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogItemDeleteJobResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Delete Items Job
     * Get a catalog item bulk delete job with the given job ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItemBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return ApiResponse<GetCatalogItemDeleteJobResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getDeleteItemsJobWithHttpInfo(jobId: kotlin.String, revision: kotlin.String, fieldsCatalogItemBulkDeleteJob: kotlin.collections.List<FieldsCatalogItemBulkDeleteJobGetDeleteItemsJob>?) : ApiResponse<GetCatalogItemDeleteJobResponse?> {
        val localVariableConfig = getDeleteItemsJobRequestConfig(jobId = jobId, revision = revision, fieldsCatalogItemBulkDeleteJob = fieldsCatalogItemBulkDeleteJob)

        return request<Unit, GetCatalogItemDeleteJobResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getDeleteItemsJob
     *
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItemBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return RequestConfig
     */
    fun getDeleteItemsJobRequestConfig(jobId: kotlin.String, revision: kotlin.String, fieldsCatalogItemBulkDeleteJob: kotlin.collections.List<FieldsCatalogItemBulkDeleteJobGetDeleteItemsJob>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogItemBulkDeleteJob != null) {
                    put("fields[catalog-item-bulk-delete-job]", toMultiValue(fieldsCatalogItemBulkDeleteJob.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-item-bulk-delete-jobs/{job_id}/".replace("{"+"job_id"+"}", encodeURIComponent(jobId.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogItemBulkDeleteJob
     */
     enum class FieldsCatalogItemBulkDeleteJobGetDeleteItemsJobs(val value: kotlin.String) {
         @Json(name = "status") status("status"),
         @Json(name = "created_at") created_at("created_at"),
         @Json(name = "total_count") total_count("total_count"),
         @Json(name = "completed_count") completed_count("completed_count"),
         @Json(name = "failed_count") failed_count("failed_count"),
         @Json(name = "completed_at") completed_at("completed_at"),
         @Json(name = "errors") errors("errors"),
         @Json(name = "expires_at") expires_at("expires_at");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Delete Items Jobs
     * Get all catalog item bulk delete jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItemBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return GetCatalogItemDeleteJobResponseCollection
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getDeleteItemsJobs(revision: kotlin.String = "2024-07-15", fieldsCatalogItemBulkDeleteJob: kotlin.collections.List<FieldsCatalogItemBulkDeleteJobGetDeleteItemsJobs>? = null, filter: kotlin.String? = null, pageCursor: kotlin.String? = null) : GetCatalogItemDeleteJobResponseCollection {
        val localVarResponse = getDeleteItemsJobsWithHttpInfo(revision = revision, fieldsCatalogItemBulkDeleteJob = fieldsCatalogItemBulkDeleteJob, filter = filter, pageCursor = pageCursor)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogItemDeleteJobResponseCollection
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Delete Items Jobs
     * Get all catalog item bulk delete jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItemBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return ApiResponse<GetCatalogItemDeleteJobResponseCollection?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getDeleteItemsJobsWithHttpInfo(revision: kotlin.String, fieldsCatalogItemBulkDeleteJob: kotlin.collections.List<FieldsCatalogItemBulkDeleteJobGetDeleteItemsJobs>?, filter: kotlin.String?, pageCursor: kotlin.String?) : ApiResponse<GetCatalogItemDeleteJobResponseCollection?> {
        val localVariableConfig = getDeleteItemsJobsRequestConfig(revision = revision, fieldsCatalogItemBulkDeleteJob = fieldsCatalogItemBulkDeleteJob, filter = filter, pageCursor = pageCursor)

        return request<Unit, GetCatalogItemDeleteJobResponseCollection>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getDeleteItemsJobs
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItemBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return RequestConfig
     */
    fun getDeleteItemsJobsRequestConfig(revision: kotlin.String, fieldsCatalogItemBulkDeleteJob: kotlin.collections.List<FieldsCatalogItemBulkDeleteJobGetDeleteItemsJobs>?, filter: kotlin.String?, pageCursor: kotlin.String?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogItemBulkDeleteJob != null) {
                    put("fields[catalog-item-bulk-delete-job]", toMultiValue(fieldsCatalogItemBulkDeleteJob.toList(), "csv"))
                }
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-item-bulk-delete-jobs/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogVariantBulkDeleteJob
     */
     enum class FieldsCatalogVariantBulkDeleteJobGetDeleteVariantsJob(val value: kotlin.String) {
         @Json(name = "status") status("status"),
         @Json(name = "created_at") created_at("created_at"),
         @Json(name = "total_count") total_count("total_count"),
         @Json(name = "completed_count") completed_count("completed_count"),
         @Json(name = "failed_count") failed_count("failed_count"),
         @Json(name = "completed_at") completed_at("completed_at"),
         @Json(name = "errors") errors("errors"),
         @Json(name = "expires_at") expires_at("expires_at");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Delete Variants Job
     * Get a catalog variant bulk delete job with the given job ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariantBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return GetCatalogVariantDeleteJobResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getDeleteVariantsJob(jobId: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsCatalogVariantBulkDeleteJob: kotlin.collections.List<FieldsCatalogVariantBulkDeleteJobGetDeleteVariantsJob>? = null) : GetCatalogVariantDeleteJobResponse {
        val localVarResponse = getDeleteVariantsJobWithHttpInfo(jobId = jobId, revision = revision, fieldsCatalogVariantBulkDeleteJob = fieldsCatalogVariantBulkDeleteJob)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogVariantDeleteJobResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Delete Variants Job
     * Get a catalog variant bulk delete job with the given job ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariantBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return ApiResponse<GetCatalogVariantDeleteJobResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getDeleteVariantsJobWithHttpInfo(jobId: kotlin.String, revision: kotlin.String, fieldsCatalogVariantBulkDeleteJob: kotlin.collections.List<FieldsCatalogVariantBulkDeleteJobGetDeleteVariantsJob>?) : ApiResponse<GetCatalogVariantDeleteJobResponse?> {
        val localVariableConfig = getDeleteVariantsJobRequestConfig(jobId = jobId, revision = revision, fieldsCatalogVariantBulkDeleteJob = fieldsCatalogVariantBulkDeleteJob)

        return request<Unit, GetCatalogVariantDeleteJobResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getDeleteVariantsJob
     *
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariantBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return RequestConfig
     */
    fun getDeleteVariantsJobRequestConfig(jobId: kotlin.String, revision: kotlin.String, fieldsCatalogVariantBulkDeleteJob: kotlin.collections.List<FieldsCatalogVariantBulkDeleteJobGetDeleteVariantsJob>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogVariantBulkDeleteJob != null) {
                    put("fields[catalog-variant-bulk-delete-job]", toMultiValue(fieldsCatalogVariantBulkDeleteJob.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-variant-bulk-delete-jobs/{job_id}/".replace("{"+"job_id"+"}", encodeURIComponent(jobId.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogVariantBulkDeleteJob
     */
     enum class FieldsCatalogVariantBulkDeleteJobGetDeleteVariantsJobs(val value: kotlin.String) {
         @Json(name = "status") status("status"),
         @Json(name = "created_at") created_at("created_at"),
         @Json(name = "total_count") total_count("total_count"),
         @Json(name = "completed_count") completed_count("completed_count"),
         @Json(name = "failed_count") failed_count("failed_count"),
         @Json(name = "completed_at") completed_at("completed_at"),
         @Json(name = "errors") errors("errors"),
         @Json(name = "expires_at") expires_at("expires_at");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Delete Variants Jobs
     * Get all catalog variant bulk delete jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariantBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return GetCatalogVariantDeleteJobResponseCollection
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getDeleteVariantsJobs(revision: kotlin.String = "2024-07-15", fieldsCatalogVariantBulkDeleteJob: kotlin.collections.List<FieldsCatalogVariantBulkDeleteJobGetDeleteVariantsJobs>? = null, filter: kotlin.String? = null, pageCursor: kotlin.String? = null) : GetCatalogVariantDeleteJobResponseCollection {
        val localVarResponse = getDeleteVariantsJobsWithHttpInfo(revision = revision, fieldsCatalogVariantBulkDeleteJob = fieldsCatalogVariantBulkDeleteJob, filter = filter, pageCursor = pageCursor)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogVariantDeleteJobResponseCollection
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Delete Variants Jobs
     * Get all catalog variant bulk delete jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariantBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return ApiResponse<GetCatalogVariantDeleteJobResponseCollection?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getDeleteVariantsJobsWithHttpInfo(revision: kotlin.String, fieldsCatalogVariantBulkDeleteJob: kotlin.collections.List<FieldsCatalogVariantBulkDeleteJobGetDeleteVariantsJobs>?, filter: kotlin.String?, pageCursor: kotlin.String?) : ApiResponse<GetCatalogVariantDeleteJobResponseCollection?> {
        val localVariableConfig = getDeleteVariantsJobsRequestConfig(revision = revision, fieldsCatalogVariantBulkDeleteJob = fieldsCatalogVariantBulkDeleteJob, filter = filter, pageCursor = pageCursor)

        return request<Unit, GetCatalogVariantDeleteJobResponseCollection>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getDeleteVariantsJobs
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariantBulkDeleteJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return RequestConfig
     */
    fun getDeleteVariantsJobsRequestConfig(revision: kotlin.String, fieldsCatalogVariantBulkDeleteJob: kotlin.collections.List<FieldsCatalogVariantBulkDeleteJobGetDeleteVariantsJobs>?, filter: kotlin.String?, pageCursor: kotlin.String?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogVariantBulkDeleteJob != null) {
                    put("fields[catalog-variant-bulk-delete-job]", toMultiValue(fieldsCatalogVariantBulkDeleteJob.toList(), "csv"))
                }
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-variant-bulk-delete-jobs/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogCategoryBulkUpdateJob
     */
     enum class FieldsCatalogCategoryBulkUpdateJobGetUpdateCategoriesJob(val value: kotlin.String) {
         @Json(name = "status") status("status"),
         @Json(name = "created_at") created_at("created_at"),
         @Json(name = "total_count") total_count("total_count"),
         @Json(name = "completed_count") completed_count("completed_count"),
         @Json(name = "failed_count") failed_count("failed_count"),
         @Json(name = "completed_at") completed_at("completed_at"),
         @Json(name = "errors") errors("errors"),
         @Json(name = "expires_at") expires_at("expires_at");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter fieldsCatalogCategory
     */
     enum class FieldsCatalogCategoryGetUpdateCategoriesJob(val value: kotlin.String) {
         @Json(name = "external_id") external_id("external_id"),
         @Json(name = "name") name("name"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter include
     */
     enum class IncludeGetUpdateCategoriesJob(val value: kotlin.String) {
         @Json(name = "categories") categories("categories");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Update Categories Job
     * Get a catalog category bulk update job with the given job ID.  An &#x60;include&#x60; parameter can be provided to get the following related resource data: &#x60;categories&#x60;.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategoryBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return GetCatalogCategoryUpdateJobResponseCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getUpdateCategoriesJob(jobId: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsCatalogCategoryBulkUpdateJob: kotlin.collections.List<FieldsCatalogCategoryBulkUpdateJobGetUpdateCategoriesJob>? = null, fieldsCatalogCategory: kotlin.collections.List<FieldsCatalogCategoryGetUpdateCategoriesJob>? = null, include: kotlin.collections.List<IncludeGetUpdateCategoriesJob>? = null) : GetCatalogCategoryUpdateJobResponseCompoundDocument {
        val localVarResponse = getUpdateCategoriesJobWithHttpInfo(jobId = jobId, revision = revision, fieldsCatalogCategoryBulkUpdateJob = fieldsCatalogCategoryBulkUpdateJob, fieldsCatalogCategory = fieldsCatalogCategory, include = include)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogCategoryUpdateJobResponseCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Update Categories Job
     * Get a catalog category bulk update job with the given job ID.  An &#x60;include&#x60; parameter can be provided to get the following related resource data: &#x60;categories&#x60;.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategoryBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return ApiResponse<GetCatalogCategoryUpdateJobResponseCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getUpdateCategoriesJobWithHttpInfo(jobId: kotlin.String, revision: kotlin.String, fieldsCatalogCategoryBulkUpdateJob: kotlin.collections.List<FieldsCatalogCategoryBulkUpdateJobGetUpdateCategoriesJob>?, fieldsCatalogCategory: kotlin.collections.List<FieldsCatalogCategoryGetUpdateCategoriesJob>?, include: kotlin.collections.List<IncludeGetUpdateCategoriesJob>?) : ApiResponse<GetCatalogCategoryUpdateJobResponseCompoundDocument?> {
        val localVariableConfig = getUpdateCategoriesJobRequestConfig(jobId = jobId, revision = revision, fieldsCatalogCategoryBulkUpdateJob = fieldsCatalogCategoryBulkUpdateJob, fieldsCatalogCategory = fieldsCatalogCategory, include = include)

        return request<Unit, GetCatalogCategoryUpdateJobResponseCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getUpdateCategoriesJob
     *
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategoryBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogCategory For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return RequestConfig
     */
    fun getUpdateCategoriesJobRequestConfig(jobId: kotlin.String, revision: kotlin.String, fieldsCatalogCategoryBulkUpdateJob: kotlin.collections.List<FieldsCatalogCategoryBulkUpdateJobGetUpdateCategoriesJob>?, fieldsCatalogCategory: kotlin.collections.List<FieldsCatalogCategoryGetUpdateCategoriesJob>?, include: kotlin.collections.List<IncludeGetUpdateCategoriesJob>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogCategoryBulkUpdateJob != null) {
                    put("fields[catalog-category-bulk-update-job]", toMultiValue(fieldsCatalogCategoryBulkUpdateJob.toList(), "csv"))
                }
                if (fieldsCatalogCategory != null) {
                    put("fields[catalog-category]", toMultiValue(fieldsCatalogCategory.toList(), "csv"))
                }
                if (include != null) {
                    put("include", toMultiValue(include.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-category-bulk-update-jobs/{job_id}/".replace("{"+"job_id"+"}", encodeURIComponent(jobId.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogCategoryBulkUpdateJob
     */
     enum class FieldsCatalogCategoryBulkUpdateJobGetUpdateCategoriesJobs(val value: kotlin.String) {
         @Json(name = "status") status("status"),
         @Json(name = "created_at") created_at("created_at"),
         @Json(name = "total_count") total_count("total_count"),
         @Json(name = "completed_count") completed_count("completed_count"),
         @Json(name = "failed_count") failed_count("failed_count"),
         @Json(name = "completed_at") completed_at("completed_at"),
         @Json(name = "errors") errors("errors"),
         @Json(name = "expires_at") expires_at("expires_at");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Update Categories Jobs
     * Get all catalog category bulk update jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategoryBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return GetCatalogCategoryUpdateJobResponseCollectionCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getUpdateCategoriesJobs(revision: kotlin.String = "2024-07-15", fieldsCatalogCategoryBulkUpdateJob: kotlin.collections.List<FieldsCatalogCategoryBulkUpdateJobGetUpdateCategoriesJobs>? = null, filter: kotlin.String? = null, pageCursor: kotlin.String? = null) : GetCatalogCategoryUpdateJobResponseCollectionCompoundDocument {
        val localVarResponse = getUpdateCategoriesJobsWithHttpInfo(revision = revision, fieldsCatalogCategoryBulkUpdateJob = fieldsCatalogCategoryBulkUpdateJob, filter = filter, pageCursor = pageCursor)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogCategoryUpdateJobResponseCollectionCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Update Categories Jobs
     * Get all catalog category bulk update jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategoryBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return ApiResponse<GetCatalogCategoryUpdateJobResponseCollectionCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getUpdateCategoriesJobsWithHttpInfo(revision: kotlin.String, fieldsCatalogCategoryBulkUpdateJob: kotlin.collections.List<FieldsCatalogCategoryBulkUpdateJobGetUpdateCategoriesJobs>?, filter: kotlin.String?, pageCursor: kotlin.String?) : ApiResponse<GetCatalogCategoryUpdateJobResponseCollectionCompoundDocument?> {
        val localVariableConfig = getUpdateCategoriesJobsRequestConfig(revision = revision, fieldsCatalogCategoryBulkUpdateJob = fieldsCatalogCategoryBulkUpdateJob, filter = filter, pageCursor = pageCursor)

        return request<Unit, GetCatalogCategoryUpdateJobResponseCollectionCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getUpdateCategoriesJobs
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogCategoryBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return RequestConfig
     */
    fun getUpdateCategoriesJobsRequestConfig(revision: kotlin.String, fieldsCatalogCategoryBulkUpdateJob: kotlin.collections.List<FieldsCatalogCategoryBulkUpdateJobGetUpdateCategoriesJobs>?, filter: kotlin.String?, pageCursor: kotlin.String?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogCategoryBulkUpdateJob != null) {
                    put("fields[catalog-category-bulk-update-job]", toMultiValue(fieldsCatalogCategoryBulkUpdateJob.toList(), "csv"))
                }
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-category-bulk-update-jobs/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogItemBulkUpdateJob
     */
     enum class FieldsCatalogItemBulkUpdateJobGetUpdateItemsJob(val value: kotlin.String) {
         @Json(name = "status") status("status"),
         @Json(name = "created_at") created_at("created_at"),
         @Json(name = "total_count") total_count("total_count"),
         @Json(name = "completed_count") completed_count("completed_count"),
         @Json(name = "failed_count") failed_count("failed_count"),
         @Json(name = "completed_at") completed_at("completed_at"),
         @Json(name = "errors") errors("errors"),
         @Json(name = "expires_at") expires_at("expires_at");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter fieldsCatalogItem
     */
     enum class FieldsCatalogItemGetUpdateItemsJob(val value: kotlin.String) {
         @Json(name = "external_id") external_id("external_id"),
         @Json(name = "title") title("title"),
         @Json(name = "description") description("description"),
         @Json(name = "price") price("price"),
         @Json(name = "url") url("url"),
         @Json(name = "image_full_url") image_full_url("image_full_url"),
         @Json(name = "image_thumbnail_url") image_thumbnail_url("image_thumbnail_url"),
         @Json(name = "images") images("images"),
         @Json(name = "custom_metadata") custom_metadata("custom_metadata"),
         @Json(name = "published") published("published"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter include
     */
     enum class IncludeGetUpdateItemsJob(val value: kotlin.String) {
         @Json(name = "items") items("items");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Update Items Job
     * Get a catalog item bulk update job with the given job ID.  An &#x60;include&#x60; parameter can be provided to get the following related resource data: &#x60;items&#x60;.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItemBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return GetCatalogItemUpdateJobResponseCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getUpdateItemsJob(jobId: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsCatalogItemBulkUpdateJob: kotlin.collections.List<FieldsCatalogItemBulkUpdateJobGetUpdateItemsJob>? = null, fieldsCatalogItem: kotlin.collections.List<FieldsCatalogItemGetUpdateItemsJob>? = null, include: kotlin.collections.List<IncludeGetUpdateItemsJob>? = null) : GetCatalogItemUpdateJobResponseCompoundDocument {
        val localVarResponse = getUpdateItemsJobWithHttpInfo(jobId = jobId, revision = revision, fieldsCatalogItemBulkUpdateJob = fieldsCatalogItemBulkUpdateJob, fieldsCatalogItem = fieldsCatalogItem, include = include)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogItemUpdateJobResponseCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Update Items Job
     * Get a catalog item bulk update job with the given job ID.  An &#x60;include&#x60; parameter can be provided to get the following related resource data: &#x60;items&#x60;.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItemBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return ApiResponse<GetCatalogItemUpdateJobResponseCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getUpdateItemsJobWithHttpInfo(jobId: kotlin.String, revision: kotlin.String, fieldsCatalogItemBulkUpdateJob: kotlin.collections.List<FieldsCatalogItemBulkUpdateJobGetUpdateItemsJob>?, fieldsCatalogItem: kotlin.collections.List<FieldsCatalogItemGetUpdateItemsJob>?, include: kotlin.collections.List<IncludeGetUpdateItemsJob>?) : ApiResponse<GetCatalogItemUpdateJobResponseCompoundDocument?> {
        val localVariableConfig = getUpdateItemsJobRequestConfig(jobId = jobId, revision = revision, fieldsCatalogItemBulkUpdateJob = fieldsCatalogItemBulkUpdateJob, fieldsCatalogItem = fieldsCatalogItem, include = include)

        return request<Unit, GetCatalogItemUpdateJobResponseCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getUpdateItemsJob
     *
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItemBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogItem For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return RequestConfig
     */
    fun getUpdateItemsJobRequestConfig(jobId: kotlin.String, revision: kotlin.String, fieldsCatalogItemBulkUpdateJob: kotlin.collections.List<FieldsCatalogItemBulkUpdateJobGetUpdateItemsJob>?, fieldsCatalogItem: kotlin.collections.List<FieldsCatalogItemGetUpdateItemsJob>?, include: kotlin.collections.List<IncludeGetUpdateItemsJob>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogItemBulkUpdateJob != null) {
                    put("fields[catalog-item-bulk-update-job]", toMultiValue(fieldsCatalogItemBulkUpdateJob.toList(), "csv"))
                }
                if (fieldsCatalogItem != null) {
                    put("fields[catalog-item]", toMultiValue(fieldsCatalogItem.toList(), "csv"))
                }
                if (include != null) {
                    put("include", toMultiValue(include.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-item-bulk-update-jobs/{job_id}/".replace("{"+"job_id"+"}", encodeURIComponent(jobId.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogItemBulkUpdateJob
     */
     enum class FieldsCatalogItemBulkUpdateJobGetUpdateItemsJobs(val value: kotlin.String) {
         @Json(name = "status") status("status"),
         @Json(name = "created_at") created_at("created_at"),
         @Json(name = "total_count") total_count("total_count"),
         @Json(name = "completed_count") completed_count("completed_count"),
         @Json(name = "failed_count") failed_count("failed_count"),
         @Json(name = "completed_at") completed_at("completed_at"),
         @Json(name = "errors") errors("errors"),
         @Json(name = "expires_at") expires_at("expires_at");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Update Items Jobs
     * Get all catalog item bulk update jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItemBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return GetCatalogItemUpdateJobResponseCollectionCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getUpdateItemsJobs(revision: kotlin.String = "2024-07-15", fieldsCatalogItemBulkUpdateJob: kotlin.collections.List<FieldsCatalogItemBulkUpdateJobGetUpdateItemsJobs>? = null, filter: kotlin.String? = null, pageCursor: kotlin.String? = null) : GetCatalogItemUpdateJobResponseCollectionCompoundDocument {
        val localVarResponse = getUpdateItemsJobsWithHttpInfo(revision = revision, fieldsCatalogItemBulkUpdateJob = fieldsCatalogItemBulkUpdateJob, filter = filter, pageCursor = pageCursor)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogItemUpdateJobResponseCollectionCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Update Items Jobs
     * Get all catalog item bulk update jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItemBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return ApiResponse<GetCatalogItemUpdateJobResponseCollectionCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getUpdateItemsJobsWithHttpInfo(revision: kotlin.String, fieldsCatalogItemBulkUpdateJob: kotlin.collections.List<FieldsCatalogItemBulkUpdateJobGetUpdateItemsJobs>?, filter: kotlin.String?, pageCursor: kotlin.String?) : ApiResponse<GetCatalogItemUpdateJobResponseCollectionCompoundDocument?> {
        val localVariableConfig = getUpdateItemsJobsRequestConfig(revision = revision, fieldsCatalogItemBulkUpdateJob = fieldsCatalogItemBulkUpdateJob, filter = filter, pageCursor = pageCursor)

        return request<Unit, GetCatalogItemUpdateJobResponseCollectionCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getUpdateItemsJobs
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogItemBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return RequestConfig
     */
    fun getUpdateItemsJobsRequestConfig(revision: kotlin.String, fieldsCatalogItemBulkUpdateJob: kotlin.collections.List<FieldsCatalogItemBulkUpdateJobGetUpdateItemsJobs>?, filter: kotlin.String?, pageCursor: kotlin.String?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogItemBulkUpdateJob != null) {
                    put("fields[catalog-item-bulk-update-job]", toMultiValue(fieldsCatalogItemBulkUpdateJob.toList(), "csv"))
                }
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-item-bulk-update-jobs/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogVariantBulkUpdateJob
     */
     enum class FieldsCatalogVariantBulkUpdateJobGetUpdateVariantsJob(val value: kotlin.String) {
         @Json(name = "status") status("status"),
         @Json(name = "created_at") created_at("created_at"),
         @Json(name = "total_count") total_count("total_count"),
         @Json(name = "completed_count") completed_count("completed_count"),
         @Json(name = "failed_count") failed_count("failed_count"),
         @Json(name = "completed_at") completed_at("completed_at"),
         @Json(name = "errors") errors("errors"),
         @Json(name = "expires_at") expires_at("expires_at");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter fieldsCatalogVariant
     */
     enum class FieldsCatalogVariantGetUpdateVariantsJob(val value: kotlin.String) {
         @Json(name = "external_id") external_id("external_id"),
         @Json(name = "title") title("title"),
         @Json(name = "description") description("description"),
         @Json(name = "sku") sku("sku"),
         @Json(name = "inventory_policy") inventory_policy("inventory_policy"),
         @Json(name = "inventory_quantity") inventory_quantity("inventory_quantity"),
         @Json(name = "price") price("price"),
         @Json(name = "url") url("url"),
         @Json(name = "image_full_url") image_full_url("image_full_url"),
         @Json(name = "image_thumbnail_url") image_thumbnail_url("image_thumbnail_url"),
         @Json(name = "images") images("images"),
         @Json(name = "custom_metadata") custom_metadata("custom_metadata"),
         @Json(name = "published") published("published"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter include
     */
     enum class IncludeGetUpdateVariantsJob(val value: kotlin.String) {
         @Json(name = "variants") variants("variants");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Update Variants Job
     * Get a catalog variate bulk update job with the given job ID.  An &#x60;include&#x60; parameter can be provided to get the following related resource data: &#x60;variants&#x60;.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariantBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return GetCatalogVariantUpdateJobResponseCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getUpdateVariantsJob(jobId: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsCatalogVariantBulkUpdateJob: kotlin.collections.List<FieldsCatalogVariantBulkUpdateJobGetUpdateVariantsJob>? = null, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetUpdateVariantsJob>? = null, include: kotlin.collections.List<IncludeGetUpdateVariantsJob>? = null) : GetCatalogVariantUpdateJobResponseCompoundDocument {
        val localVarResponse = getUpdateVariantsJobWithHttpInfo(jobId = jobId, revision = revision, fieldsCatalogVariantBulkUpdateJob = fieldsCatalogVariantBulkUpdateJob, fieldsCatalogVariant = fieldsCatalogVariant, include = include)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogVariantUpdateJobResponseCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Update Variants Job
     * Get a catalog variate bulk update job with the given job ID.  An &#x60;include&#x60; parameter can be provided to get the following related resource data: &#x60;variants&#x60;.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariantBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return ApiResponse<GetCatalogVariantUpdateJobResponseCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getUpdateVariantsJobWithHttpInfo(jobId: kotlin.String, revision: kotlin.String, fieldsCatalogVariantBulkUpdateJob: kotlin.collections.List<FieldsCatalogVariantBulkUpdateJobGetUpdateVariantsJob>?, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetUpdateVariantsJob>?, include: kotlin.collections.List<IncludeGetUpdateVariantsJob>?) : ApiResponse<GetCatalogVariantUpdateJobResponseCompoundDocument?> {
        val localVariableConfig = getUpdateVariantsJobRequestConfig(jobId = jobId, revision = revision, fieldsCatalogVariantBulkUpdateJob = fieldsCatalogVariantBulkUpdateJob, fieldsCatalogVariant = fieldsCatalogVariant, include = include)

        return request<Unit, GetCatalogVariantUpdateJobResponseCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getUpdateVariantsJob
     *
     * @param jobId ID of the job to retrieve.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariantBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsCatalogVariant For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return RequestConfig
     */
    fun getUpdateVariantsJobRequestConfig(jobId: kotlin.String, revision: kotlin.String, fieldsCatalogVariantBulkUpdateJob: kotlin.collections.List<FieldsCatalogVariantBulkUpdateJobGetUpdateVariantsJob>?, fieldsCatalogVariant: kotlin.collections.List<FieldsCatalogVariantGetUpdateVariantsJob>?, include: kotlin.collections.List<IncludeGetUpdateVariantsJob>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogVariantBulkUpdateJob != null) {
                    put("fields[catalog-variant-bulk-update-job]", toMultiValue(fieldsCatalogVariantBulkUpdateJob.toList(), "csv"))
                }
                if (fieldsCatalogVariant != null) {
                    put("fields[catalog-variant]", toMultiValue(fieldsCatalogVariant.toList(), "csv"))
                }
                if (include != null) {
                    put("include", toMultiValue(include.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-variant-bulk-update-jobs/{job_id}/".replace("{"+"job_id"+"}", encodeURIComponent(jobId.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsCatalogVariantBulkUpdateJob
     */
     enum class FieldsCatalogVariantBulkUpdateJobGetUpdateVariantsJobs(val value: kotlin.String) {
         @Json(name = "status") status("status"),
         @Json(name = "created_at") created_at("created_at"),
         @Json(name = "total_count") total_count("total_count"),
         @Json(name = "completed_count") completed_count("completed_count"),
         @Json(name = "failed_count") failed_count("failed_count"),
         @Json(name = "completed_at") completed_at("completed_at"),
         @Json(name = "errors") errors("errors"),
         @Json(name = "expires_at") expires_at("expires_at");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Update Variants Jobs
     * Get all catalog variant bulk update jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariantBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return GetCatalogVariantUpdateJobResponseCollectionCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getUpdateVariantsJobs(revision: kotlin.String = "2024-07-15", fieldsCatalogVariantBulkUpdateJob: kotlin.collections.List<FieldsCatalogVariantBulkUpdateJobGetUpdateVariantsJobs>? = null, filter: kotlin.String? = null, pageCursor: kotlin.String? = null) : GetCatalogVariantUpdateJobResponseCollectionCompoundDocument {
        val localVarResponse = getUpdateVariantsJobsWithHttpInfo(revision = revision, fieldsCatalogVariantBulkUpdateJob = fieldsCatalogVariantBulkUpdateJob, filter = filter, pageCursor = pageCursor)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetCatalogVariantUpdateJobResponseCollectionCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Update Variants Jobs
     * Get all catalog variant bulk update jobs.  Returns a maximum of 100 jobs per request.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;350/s&#x60;&lt;br&gt;Steady: &#x60;3500/m&#x60;  **Scopes:** &#x60;catalogs:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariantBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return ApiResponse<GetCatalogVariantUpdateJobResponseCollectionCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getUpdateVariantsJobsWithHttpInfo(revision: kotlin.String, fieldsCatalogVariantBulkUpdateJob: kotlin.collections.List<FieldsCatalogVariantBulkUpdateJobGetUpdateVariantsJobs>?, filter: kotlin.String?, pageCursor: kotlin.String?) : ApiResponse<GetCatalogVariantUpdateJobResponseCollectionCompoundDocument?> {
        val localVariableConfig = getUpdateVariantsJobsRequestConfig(revision = revision, fieldsCatalogVariantBulkUpdateJob = fieldsCatalogVariantBulkUpdateJob, filter = filter, pageCursor = pageCursor)

        return request<Unit, GetCatalogVariantUpdateJobResponseCollectionCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getUpdateVariantsJobs
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsCatalogVariantBulkUpdateJob For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @return RequestConfig
     */
    fun getUpdateVariantsJobsRequestConfig(revision: kotlin.String, fieldsCatalogVariantBulkUpdateJob: kotlin.collections.List<FieldsCatalogVariantBulkUpdateJobGetUpdateVariantsJobs>?, filter: kotlin.String?, pageCursor: kotlin.String?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsCatalogVariantBulkUpdateJob != null) {
                    put("fields[catalog-variant-bulk-update-job]", toMultiValue(fieldsCatalogVariantBulkUpdateJob.toList(), "csv"))
                }
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/catalog-variant-bulk-update-jobs/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Spawn Create Categories Job
     * Create a catalog category bulk create job to create a batch of catalog categories.  Accepts up to 100 catalog categories per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryCreateJobCreateQuery 
     * @return PostCatalogCategoryCreateJobResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun spawnCreateCategoriesJob(revision: kotlin.String = "2024-07-15", catalogCategoryCreateJobCreateQuery: CatalogCategoryCreateJobCreateQuery) : PostCatalogCategoryCreateJobResponse {
        val localVarResponse = spawnCreateCategoriesJobWithHttpInfo(revision = revision, catalogCategoryCreateJobCreateQuery = catalogCategoryCreateJobCreateQuery)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as PostCatalogCategoryCreateJobResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Spawn Create Categories Job
     * Create a catalog category bulk create job to create a batch of catalog categories.  Accepts up to 100 catalog categories per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryCreateJobCreateQuery 
     * @return ApiResponse<PostCatalogCategoryCreateJobResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun spawnCreateCategoriesJobWithHttpInfo(revision: kotlin.String, catalogCategoryCreateJobCreateQuery: CatalogCategoryCreateJobCreateQuery) : ApiResponse<PostCatalogCategoryCreateJobResponse?> {
        val localVariableConfig = spawnCreateCategoriesJobRequestConfig(revision = revision, catalogCategoryCreateJobCreateQuery = catalogCategoryCreateJobCreateQuery)

        return request<CatalogCategoryCreateJobCreateQuery, PostCatalogCategoryCreateJobResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation spawnCreateCategoriesJob
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryCreateJobCreateQuery 
     * @return RequestConfig
     */
    fun spawnCreateCategoriesJobRequestConfig(revision: kotlin.String, catalogCategoryCreateJobCreateQuery: CatalogCategoryCreateJobCreateQuery) : RequestConfig<CatalogCategoryCreateJobCreateQuery> {
        val localVariableBody = catalogCategoryCreateJobCreateQuery
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/api/catalog-category-bulk-create-jobs/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Spawn Create Items Job
     * Create a catalog item bulk create job to create a batch of catalog items.  Accepts up to 100 catalog items per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemCreateJobCreateQuery 
     * @return PostCatalogItemCreateJobResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun spawnCreateItemsJob(revision: kotlin.String = "2024-07-15", catalogItemCreateJobCreateQuery: CatalogItemCreateJobCreateQuery) : PostCatalogItemCreateJobResponse {
        val localVarResponse = spawnCreateItemsJobWithHttpInfo(revision = revision, catalogItemCreateJobCreateQuery = catalogItemCreateJobCreateQuery)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as PostCatalogItemCreateJobResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Spawn Create Items Job
     * Create a catalog item bulk create job to create a batch of catalog items.  Accepts up to 100 catalog items per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemCreateJobCreateQuery 
     * @return ApiResponse<PostCatalogItemCreateJobResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun spawnCreateItemsJobWithHttpInfo(revision: kotlin.String, catalogItemCreateJobCreateQuery: CatalogItemCreateJobCreateQuery) : ApiResponse<PostCatalogItemCreateJobResponse?> {
        val localVariableConfig = spawnCreateItemsJobRequestConfig(revision = revision, catalogItemCreateJobCreateQuery = catalogItemCreateJobCreateQuery)

        return request<CatalogItemCreateJobCreateQuery, PostCatalogItemCreateJobResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation spawnCreateItemsJob
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemCreateJobCreateQuery 
     * @return RequestConfig
     */
    fun spawnCreateItemsJobRequestConfig(revision: kotlin.String, catalogItemCreateJobCreateQuery: CatalogItemCreateJobCreateQuery) : RequestConfig<CatalogItemCreateJobCreateQuery> {
        val localVariableBody = catalogItemCreateJobCreateQuery
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/api/catalog-item-bulk-create-jobs/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Spawn Create Variants Job
     * Create a catalog variant bulk create job to create a batch of catalog variants.  Accepts up to 100 catalog variants per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogVariantCreateJobCreateQuery 
     * @return PostCatalogVariantCreateJobResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun spawnCreateVariantsJob(revision: kotlin.String = "2024-07-15", catalogVariantCreateJobCreateQuery: CatalogVariantCreateJobCreateQuery) : PostCatalogVariantCreateJobResponse {
        val localVarResponse = spawnCreateVariantsJobWithHttpInfo(revision = revision, catalogVariantCreateJobCreateQuery = catalogVariantCreateJobCreateQuery)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as PostCatalogVariantCreateJobResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Spawn Create Variants Job
     * Create a catalog variant bulk create job to create a batch of catalog variants.  Accepts up to 100 catalog variants per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogVariantCreateJobCreateQuery 
     * @return ApiResponse<PostCatalogVariantCreateJobResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun spawnCreateVariantsJobWithHttpInfo(revision: kotlin.String, catalogVariantCreateJobCreateQuery: CatalogVariantCreateJobCreateQuery) : ApiResponse<PostCatalogVariantCreateJobResponse?> {
        val localVariableConfig = spawnCreateVariantsJobRequestConfig(revision = revision, catalogVariantCreateJobCreateQuery = catalogVariantCreateJobCreateQuery)

        return request<CatalogVariantCreateJobCreateQuery, PostCatalogVariantCreateJobResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation spawnCreateVariantsJob
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogVariantCreateJobCreateQuery 
     * @return RequestConfig
     */
    fun spawnCreateVariantsJobRequestConfig(revision: kotlin.String, catalogVariantCreateJobCreateQuery: CatalogVariantCreateJobCreateQuery) : RequestConfig<CatalogVariantCreateJobCreateQuery> {
        val localVariableBody = catalogVariantCreateJobCreateQuery
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/api/catalog-variant-bulk-create-jobs/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Spawn Delete Categories Job
     * Create a catalog category bulk delete job to delete a batch of catalog categories.  Accepts up to 100 catalog categories per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryDeleteJobCreateQuery 
     * @return PostCatalogCategoryDeleteJobResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun spawnDeleteCategoriesJob(revision: kotlin.String = "2024-07-15", catalogCategoryDeleteJobCreateQuery: CatalogCategoryDeleteJobCreateQuery) : PostCatalogCategoryDeleteJobResponse {
        val localVarResponse = spawnDeleteCategoriesJobWithHttpInfo(revision = revision, catalogCategoryDeleteJobCreateQuery = catalogCategoryDeleteJobCreateQuery)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as PostCatalogCategoryDeleteJobResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Spawn Delete Categories Job
     * Create a catalog category bulk delete job to delete a batch of catalog categories.  Accepts up to 100 catalog categories per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryDeleteJobCreateQuery 
     * @return ApiResponse<PostCatalogCategoryDeleteJobResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun spawnDeleteCategoriesJobWithHttpInfo(revision: kotlin.String, catalogCategoryDeleteJobCreateQuery: CatalogCategoryDeleteJobCreateQuery) : ApiResponse<PostCatalogCategoryDeleteJobResponse?> {
        val localVariableConfig = spawnDeleteCategoriesJobRequestConfig(revision = revision, catalogCategoryDeleteJobCreateQuery = catalogCategoryDeleteJobCreateQuery)

        return request<CatalogCategoryDeleteJobCreateQuery, PostCatalogCategoryDeleteJobResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation spawnDeleteCategoriesJob
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryDeleteJobCreateQuery 
     * @return RequestConfig
     */
    fun spawnDeleteCategoriesJobRequestConfig(revision: kotlin.String, catalogCategoryDeleteJobCreateQuery: CatalogCategoryDeleteJobCreateQuery) : RequestConfig<CatalogCategoryDeleteJobCreateQuery> {
        val localVariableBody = catalogCategoryDeleteJobCreateQuery
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/api/catalog-category-bulk-delete-jobs/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Spawn Delete Items Job
     * Create a catalog item bulk delete job to delete a batch of catalog items.  Accepts up to 100 catalog items per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemDeleteJobCreateQuery 
     * @return PostCatalogItemDeleteJobResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun spawnDeleteItemsJob(revision: kotlin.String = "2024-07-15", catalogItemDeleteJobCreateQuery: CatalogItemDeleteJobCreateQuery) : PostCatalogItemDeleteJobResponse {
        val localVarResponse = spawnDeleteItemsJobWithHttpInfo(revision = revision, catalogItemDeleteJobCreateQuery = catalogItemDeleteJobCreateQuery)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as PostCatalogItemDeleteJobResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Spawn Delete Items Job
     * Create a catalog item bulk delete job to delete a batch of catalog items.  Accepts up to 100 catalog items per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemDeleteJobCreateQuery 
     * @return ApiResponse<PostCatalogItemDeleteJobResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun spawnDeleteItemsJobWithHttpInfo(revision: kotlin.String, catalogItemDeleteJobCreateQuery: CatalogItemDeleteJobCreateQuery) : ApiResponse<PostCatalogItemDeleteJobResponse?> {
        val localVariableConfig = spawnDeleteItemsJobRequestConfig(revision = revision, catalogItemDeleteJobCreateQuery = catalogItemDeleteJobCreateQuery)

        return request<CatalogItemDeleteJobCreateQuery, PostCatalogItemDeleteJobResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation spawnDeleteItemsJob
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemDeleteJobCreateQuery 
     * @return RequestConfig
     */
    fun spawnDeleteItemsJobRequestConfig(revision: kotlin.String, catalogItemDeleteJobCreateQuery: CatalogItemDeleteJobCreateQuery) : RequestConfig<CatalogItemDeleteJobCreateQuery> {
        val localVariableBody = catalogItemDeleteJobCreateQuery
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/api/catalog-item-bulk-delete-jobs/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Spawn Delete Variants Job
     * Create a catalog variant bulk delete job to delete a batch of catalog variants.  Accepts up to 100 catalog variants per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogVariantDeleteJobCreateQuery 
     * @return PostCatalogVariantDeleteJobResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun spawnDeleteVariantsJob(revision: kotlin.String = "2024-07-15", catalogVariantDeleteJobCreateQuery: CatalogVariantDeleteJobCreateQuery) : PostCatalogVariantDeleteJobResponse {
        val localVarResponse = spawnDeleteVariantsJobWithHttpInfo(revision = revision, catalogVariantDeleteJobCreateQuery = catalogVariantDeleteJobCreateQuery)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as PostCatalogVariantDeleteJobResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Spawn Delete Variants Job
     * Create a catalog variant bulk delete job to delete a batch of catalog variants.  Accepts up to 100 catalog variants per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogVariantDeleteJobCreateQuery 
     * @return ApiResponse<PostCatalogVariantDeleteJobResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun spawnDeleteVariantsJobWithHttpInfo(revision: kotlin.String, catalogVariantDeleteJobCreateQuery: CatalogVariantDeleteJobCreateQuery) : ApiResponse<PostCatalogVariantDeleteJobResponse?> {
        val localVariableConfig = spawnDeleteVariantsJobRequestConfig(revision = revision, catalogVariantDeleteJobCreateQuery = catalogVariantDeleteJobCreateQuery)

        return request<CatalogVariantDeleteJobCreateQuery, PostCatalogVariantDeleteJobResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation spawnDeleteVariantsJob
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogVariantDeleteJobCreateQuery 
     * @return RequestConfig
     */
    fun spawnDeleteVariantsJobRequestConfig(revision: kotlin.String, catalogVariantDeleteJobCreateQuery: CatalogVariantDeleteJobCreateQuery) : RequestConfig<CatalogVariantDeleteJobCreateQuery> {
        val localVariableBody = catalogVariantDeleteJobCreateQuery
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/api/catalog-variant-bulk-delete-jobs/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Spawn Update Categories Job
     * Create a catalog category bulk update job to update a batch of catalog categories.  Accepts up to 100 catalog categories per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryUpdateJobCreateQuery 
     * @return PostCatalogCategoryUpdateJobResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun spawnUpdateCategoriesJob(revision: kotlin.String = "2024-07-15", catalogCategoryUpdateJobCreateQuery: CatalogCategoryUpdateJobCreateQuery) : PostCatalogCategoryUpdateJobResponse {
        val localVarResponse = spawnUpdateCategoriesJobWithHttpInfo(revision = revision, catalogCategoryUpdateJobCreateQuery = catalogCategoryUpdateJobCreateQuery)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as PostCatalogCategoryUpdateJobResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Spawn Update Categories Job
     * Create a catalog category bulk update job to update a batch of catalog categories.  Accepts up to 100 catalog categories per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryUpdateJobCreateQuery 
     * @return ApiResponse<PostCatalogCategoryUpdateJobResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun spawnUpdateCategoriesJobWithHttpInfo(revision: kotlin.String, catalogCategoryUpdateJobCreateQuery: CatalogCategoryUpdateJobCreateQuery) : ApiResponse<PostCatalogCategoryUpdateJobResponse?> {
        val localVariableConfig = spawnUpdateCategoriesJobRequestConfig(revision = revision, catalogCategoryUpdateJobCreateQuery = catalogCategoryUpdateJobCreateQuery)

        return request<CatalogCategoryUpdateJobCreateQuery, PostCatalogCategoryUpdateJobResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation spawnUpdateCategoriesJob
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryUpdateJobCreateQuery 
     * @return RequestConfig
     */
    fun spawnUpdateCategoriesJobRequestConfig(revision: kotlin.String, catalogCategoryUpdateJobCreateQuery: CatalogCategoryUpdateJobCreateQuery) : RequestConfig<CatalogCategoryUpdateJobCreateQuery> {
        val localVariableBody = catalogCategoryUpdateJobCreateQuery
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/api/catalog-category-bulk-update-jobs/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Spawn Update Items Job
     * Create a catalog item bulk update job to update a batch of catalog items.  Accepts up to 100 catalog items per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemUpdateJobCreateQuery 
     * @return PostCatalogItemUpdateJobResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun spawnUpdateItemsJob(revision: kotlin.String = "2024-07-15", catalogItemUpdateJobCreateQuery: CatalogItemUpdateJobCreateQuery) : PostCatalogItemUpdateJobResponse {
        val localVarResponse = spawnUpdateItemsJobWithHttpInfo(revision = revision, catalogItemUpdateJobCreateQuery = catalogItemUpdateJobCreateQuery)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as PostCatalogItemUpdateJobResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Spawn Update Items Job
     * Create a catalog item bulk update job to update a batch of catalog items.  Accepts up to 100 catalog items per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemUpdateJobCreateQuery 
     * @return ApiResponse<PostCatalogItemUpdateJobResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun spawnUpdateItemsJobWithHttpInfo(revision: kotlin.String, catalogItemUpdateJobCreateQuery: CatalogItemUpdateJobCreateQuery) : ApiResponse<PostCatalogItemUpdateJobResponse?> {
        val localVariableConfig = spawnUpdateItemsJobRequestConfig(revision = revision, catalogItemUpdateJobCreateQuery = catalogItemUpdateJobCreateQuery)

        return request<CatalogItemUpdateJobCreateQuery, PostCatalogItemUpdateJobResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation spawnUpdateItemsJob
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemUpdateJobCreateQuery 
     * @return RequestConfig
     */
    fun spawnUpdateItemsJobRequestConfig(revision: kotlin.String, catalogItemUpdateJobCreateQuery: CatalogItemUpdateJobCreateQuery) : RequestConfig<CatalogItemUpdateJobCreateQuery> {
        val localVariableBody = catalogItemUpdateJobCreateQuery
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/api/catalog-item-bulk-update-jobs/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Spawn Update Variants Job
     * Create a catalog variant bulk update job to update a batch of catalog variants.  Accepts up to 100 catalog variants per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogVariantUpdateJobCreateQuery 
     * @return PostCatalogVariantUpdateJobResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun spawnUpdateVariantsJob(revision: kotlin.String = "2024-07-15", catalogVariantUpdateJobCreateQuery: CatalogVariantUpdateJobCreateQuery) : PostCatalogVariantUpdateJobResponse {
        val localVarResponse = spawnUpdateVariantsJobWithHttpInfo(revision = revision, catalogVariantUpdateJobCreateQuery = catalogVariantUpdateJobCreateQuery)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as PostCatalogVariantUpdateJobResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Spawn Update Variants Job
     * Create a catalog variant bulk update job to update a batch of catalog variants.  Accepts up to 100 catalog variants per request. The maximum allowed payload size is 5MB. The maximum number of jobs in progress at one time is 500.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogVariantUpdateJobCreateQuery 
     * @return ApiResponse<PostCatalogVariantUpdateJobResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun spawnUpdateVariantsJobWithHttpInfo(revision: kotlin.String, catalogVariantUpdateJobCreateQuery: CatalogVariantUpdateJobCreateQuery) : ApiResponse<PostCatalogVariantUpdateJobResponse?> {
        val localVariableConfig = spawnUpdateVariantsJobRequestConfig(revision = revision, catalogVariantUpdateJobCreateQuery = catalogVariantUpdateJobCreateQuery)

        return request<CatalogVariantUpdateJobCreateQuery, PostCatalogVariantUpdateJobResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation spawnUpdateVariantsJob
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogVariantUpdateJobCreateQuery 
     * @return RequestConfig
     */
    fun spawnUpdateVariantsJobRequestConfig(revision: kotlin.String, catalogVariantUpdateJobCreateQuery: CatalogVariantUpdateJobCreateQuery) : RequestConfig<CatalogVariantUpdateJobCreateQuery> {
        val localVariableBody = catalogVariantUpdateJobCreateQuery
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.POST,
            path = "/api/catalog-variant-bulk-update-jobs/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Update Catalog Category
     * Update a catalog category with the given category ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id The catalog category ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryUpdateQuery 
     * @return PatchCatalogCategoryResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun updateCatalogCategory(id: kotlin.String, revision: kotlin.String = "2024-07-15", catalogCategoryUpdateQuery: CatalogCategoryUpdateQuery) : PatchCatalogCategoryResponse {
        val localVarResponse = updateCatalogCategoryWithHttpInfo(id = id, revision = revision, catalogCategoryUpdateQuery = catalogCategoryUpdateQuery)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as PatchCatalogCategoryResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Update Catalog Category
     * Update a catalog category with the given category ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id The catalog category ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryUpdateQuery 
     * @return ApiResponse<PatchCatalogCategoryResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun updateCatalogCategoryWithHttpInfo(id: kotlin.String, revision: kotlin.String, catalogCategoryUpdateQuery: CatalogCategoryUpdateQuery) : ApiResponse<PatchCatalogCategoryResponse?> {
        val localVariableConfig = updateCatalogCategoryRequestConfig(id = id, revision = revision, catalogCategoryUpdateQuery = catalogCategoryUpdateQuery)

        return request<CatalogCategoryUpdateQuery, PatchCatalogCategoryResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation updateCatalogCategory
     *
     * @param id The catalog category ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryUpdateQuery 
     * @return RequestConfig
     */
    fun updateCatalogCategoryRequestConfig(id: kotlin.String, revision: kotlin.String, catalogCategoryUpdateQuery: CatalogCategoryUpdateQuery) : RequestConfig<CatalogCategoryUpdateQuery> {
        val localVariableBody = catalogCategoryUpdateQuery
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.PATCH,
            path = "/api/catalog-categories/{id}/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Update Catalog Category Relationships Items
     * Update item relationships for the given category ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryItemOp 
     * @return void
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun updateCatalogCategoryRelationshipsItems(id: kotlin.String, revision: kotlin.String = "2024-07-15", catalogCategoryItemOp: CatalogCategoryItemOp) : Unit {
        val localVarResponse = updateCatalogCategoryRelationshipsItemsWithHttpInfo(id = id, revision = revision, catalogCategoryItemOp = catalogCategoryItemOp)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> Unit
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Update Catalog Category Relationships Items
     * Update item relationships for the given category ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryItemOp 
     * @return ApiResponse<Unit?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Throws(IllegalStateException::class, IOException::class)
    fun updateCatalogCategoryRelationshipsItemsWithHttpInfo(id: kotlin.String, revision: kotlin.String, catalogCategoryItemOp: CatalogCategoryItemOp) : ApiResponse<Unit?> {
        val localVariableConfig = updateCatalogCategoryRelationshipsItemsRequestConfig(id = id, revision = revision, catalogCategoryItemOp = catalogCategoryItemOp)

        return request<CatalogCategoryItemOp, Unit>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation updateCatalogCategoryRelationshipsItems
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogCategoryItemOp 
     * @return RequestConfig
     */
    fun updateCatalogCategoryRelationshipsItemsRequestConfig(id: kotlin.String, revision: kotlin.String, catalogCategoryItemOp: CatalogCategoryItemOp) : RequestConfig<CatalogCategoryItemOp> {
        val localVariableBody = catalogCategoryItemOp
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.PATCH,
            path = "/api/catalog-categories/{id}/relationships/items/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Update Catalog Item
     * Update a catalog item with the given item ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemUpdateQuery 
     * @return PatchCatalogItemResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun updateCatalogItem(id: kotlin.String, revision: kotlin.String = "2024-07-15", catalogItemUpdateQuery: CatalogItemUpdateQuery) : PatchCatalogItemResponse {
        val localVarResponse = updateCatalogItemWithHttpInfo(id = id, revision = revision, catalogItemUpdateQuery = catalogItemUpdateQuery)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as PatchCatalogItemResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Update Catalog Item
     * Update a catalog item with the given item ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemUpdateQuery 
     * @return ApiResponse<PatchCatalogItemResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun updateCatalogItemWithHttpInfo(id: kotlin.String, revision: kotlin.String, catalogItemUpdateQuery: CatalogItemUpdateQuery) : ApiResponse<PatchCatalogItemResponse?> {
        val localVariableConfig = updateCatalogItemRequestConfig(id = id, revision = revision, catalogItemUpdateQuery = catalogItemUpdateQuery)

        return request<CatalogItemUpdateQuery, PatchCatalogItemResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation updateCatalogItem
     *
     * @param id The catalog item ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemUpdateQuery 
     * @return RequestConfig
     */
    fun updateCatalogItemRequestConfig(id: kotlin.String, revision: kotlin.String, catalogItemUpdateQuery: CatalogItemUpdateQuery) : RequestConfig<CatalogItemUpdateQuery> {
        val localVariableBody = catalogItemUpdateQuery
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.PATCH,
            path = "/api/catalog-items/{id}/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Update Catalog Item Relationships Categories
     * Update catalog category relationships for the given item ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemCategoryOp 
     * @return void
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun updateCatalogItemRelationshipsCategories(id: kotlin.String, revision: kotlin.String = "2024-07-15", catalogItemCategoryOp: CatalogItemCategoryOp) : Unit {
        val localVarResponse = updateCatalogItemRelationshipsCategoriesWithHttpInfo(id = id, revision = revision, catalogItemCategoryOp = catalogItemCategoryOp)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> Unit
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Update Catalog Item Relationships Categories
     * Update catalog category relationships for the given item ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemCategoryOp 
     * @return ApiResponse<Unit?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Throws(IllegalStateException::class, IOException::class)
    fun updateCatalogItemRelationshipsCategoriesWithHttpInfo(id: kotlin.String, revision: kotlin.String, catalogItemCategoryOp: CatalogItemCategoryOp) : ApiResponse<Unit?> {
        val localVariableConfig = updateCatalogItemRelationshipsCategoriesRequestConfig(id = id, revision = revision, catalogItemCategoryOp = catalogItemCategoryOp)

        return request<CatalogItemCategoryOp, Unit>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation updateCatalogItemRelationshipsCategories
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogItemCategoryOp 
     * @return RequestConfig
     */
    fun updateCatalogItemRelationshipsCategoriesRequestConfig(id: kotlin.String, revision: kotlin.String, catalogItemCategoryOp: CatalogItemCategoryOp) : RequestConfig<CatalogItemCategoryOp> {
        val localVariableBody = catalogItemCategoryOp
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.PATCH,
            path = "/api/catalog-items/{id}/relationships/categories/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Update Catalog Variant
     * Update a catalog item variant with the given variant ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id The catalog variant ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogVariantUpdateQuery 
     * @return PatchCatalogVariantResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun updateCatalogVariant(id: kotlin.String, revision: kotlin.String = "2024-07-15", catalogVariantUpdateQuery: CatalogVariantUpdateQuery) : PatchCatalogVariantResponse {
        val localVarResponse = updateCatalogVariantWithHttpInfo(id = id, revision = revision, catalogVariantUpdateQuery = catalogVariantUpdateQuery)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as PatchCatalogVariantResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Update Catalog Variant
     * Update a catalog item variant with the given variant ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;catalogs:write&#x60;
     * @param id The catalog variant ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogVariantUpdateQuery 
     * @return ApiResponse<PatchCatalogVariantResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun updateCatalogVariantWithHttpInfo(id: kotlin.String, revision: kotlin.String, catalogVariantUpdateQuery: CatalogVariantUpdateQuery) : ApiResponse<PatchCatalogVariantResponse?> {
        val localVariableConfig = updateCatalogVariantRequestConfig(id = id, revision = revision, catalogVariantUpdateQuery = catalogVariantUpdateQuery)

        return request<CatalogVariantUpdateQuery, PatchCatalogVariantResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation updateCatalogVariant
     *
     * @param id The catalog variant ID is a compound ID (string), with format: &#x60;{integration}:::{catalog}:::{external_id}&#x60;. Currently, the only supported integration type is &#x60;$custom&#x60;, and the only supported catalog is &#x60;$default&#x60;.
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param catalogVariantUpdateQuery 
     * @return RequestConfig
     */
    fun updateCatalogVariantRequestConfig(id: kotlin.String, revision: kotlin.String, catalogVariantUpdateQuery: CatalogVariantUpdateQuery) : RequestConfig<CatalogVariantUpdateQuery> {
        val localVariableBody = catalogVariantUpdateQuery
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.PATCH,
            path = "/api/catalog-variants/{id}/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }


    private fun encodeURIComponent(uriComponent: kotlin.String): kotlin.String =
        HttpUrl.Builder().scheme("http").host("localhost").addPathSegment(uriComponent).build().encodedPathSegments[0]
}

/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import java.io.IOException
import okhttp3.OkHttpClient
import okhttp3.HttpUrl

import org.openapitools.client.models.FlowUpdateQuery
import org.openapitools.client.models.GetAccounts4XXResponse
import org.openapitools.client.models.GetFlowActionFlowMessageRelationshipResponseCollection
import org.openapitools.client.models.GetFlowActionFlowRelationshipResponse
import org.openapitools.client.models.GetFlowActionResponse
import org.openapitools.client.models.GetFlowActionResponseCollection
import org.openapitools.client.models.GetFlowActionResponseCompoundDocument
import org.openapitools.client.models.GetFlowFlowActionRelationshipListResponseCollection
import org.openapitools.client.models.GetFlowMessageFlowActionRelationshipResponse
import org.openapitools.client.models.GetFlowMessageResponseCollection
import org.openapitools.client.models.GetFlowMessageResponseCompoundDocument
import org.openapitools.client.models.GetFlowMessageTemplateRelationshipResponse
import org.openapitools.client.models.GetFlowResponse
import org.openapitools.client.models.GetFlowResponseCollectionCompoundDocument
import org.openapitools.client.models.GetFlowResponseCompoundDocument
import org.openapitools.client.models.GetFlowTagRelationshipListResponseCollection
import org.openapitools.client.models.GetTagResponseCollection
import org.openapitools.client.models.GetTemplateResponse
import org.openapitools.client.models.PatchFlowResponse

import com.squareup.moshi.Json

import org.openapitools.client.infrastructure.ApiClient
import org.openapitools.client.infrastructure.ApiResponse
import org.openapitools.client.infrastructure.ClientException
import org.openapitools.client.infrastructure.ClientError
import org.openapitools.client.infrastructure.ServerException
import org.openapitools.client.infrastructure.ServerError
import org.openapitools.client.infrastructure.MultiValueMap
import org.openapitools.client.infrastructure.PartConfig
import org.openapitools.client.infrastructure.RequestConfig
import org.openapitools.client.infrastructure.RequestMethod
import org.openapitools.client.infrastructure.ResponseType
import org.openapitools.client.infrastructure.Success
import org.openapitools.client.infrastructure.toMultiValue

class FlowsApi(basePath: kotlin.String = defaultBasePath, client: OkHttpClient = ApiClient.defaultClient) : ApiClient(basePath, client) {
    companion object {
        @JvmStatic
        val defaultBasePath: String by lazy {
            System.getProperties().getProperty(ApiClient.baseUrlKey, "https://a.klaviyo.com")
        }
    }

    /**
     * Delete Flow
     * Delete a flow with the given flow ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:write&#x60;
     * @param id ID of the Flow to delete. Ex: XVTP5Q
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return void
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun deleteFlow(id: kotlin.String, revision: kotlin.String = "2024-07-15") : Unit {
        val localVarResponse = deleteFlowWithHttpInfo(id = id, revision = revision)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> Unit
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Delete Flow
     * Delete a flow with the given flow ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:write&#x60;
     * @param id ID of the Flow to delete. Ex: XVTP5Q
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return ApiResponse<Unit?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Throws(IllegalStateException::class, IOException::class)
    fun deleteFlowWithHttpInfo(id: kotlin.String, revision: kotlin.String) : ApiResponse<Unit?> {
        val localVariableConfig = deleteFlowRequestConfig(id = id, revision = revision)

        return request<Unit, Unit>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation deleteFlow
     *
     * @param id ID of the Flow to delete. Ex: XVTP5Q
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return RequestConfig
     */
    fun deleteFlowRequestConfig(id: kotlin.String, revision: kotlin.String) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.DELETE,
            path = "/api/flows/{id}/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsFlowAction
     */
     enum class FieldsFlowActionGetFlow(val value: kotlin.String) {
         @Json(name = "action_type") action_type("action_type"),
         @Json(name = "status") status("status"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated"),
         @Json(name = "settings") settings("settings"),
         @Json(name = "tracking_options") tracking_options("tracking_options"),
         @Json(name = "send_options") send_options("send_options"),
         @Json(name = "send_options.use_smart_sending") send_optionsPeriodUse_smart_sending("send_options.use_smart_sending"),
         @Json(name = "send_options.is_transactional") send_optionsPeriodIs_transactional("send_options.is_transactional"),
         @Json(name = "render_options") render_options("render_options"),
         @Json(name = "render_options.shorten_links") render_optionsPeriodShorten_links("render_options.shorten_links"),
         @Json(name = "render_options.add_org_prefix") render_optionsPeriodAdd_org_prefix("render_options.add_org_prefix"),
         @Json(name = "render_options.add_info_link") render_optionsPeriodAdd_info_link("render_options.add_info_link"),
         @Json(name = "render_options.add_opt_out_language") render_optionsPeriodAdd_opt_out_language("render_options.add_opt_out_language");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter fieldsFlow
     */
     enum class FieldsFlowGetFlow(val value: kotlin.String) {
         @Json(name = "name") name("name"),
         @Json(name = "status") status("status"),
         @Json(name = "archived") archived("archived"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated"),
         @Json(name = "trigger_type") trigger_type("trigger_type");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter fieldsTag
     */
     enum class FieldsTagGetFlow(val value: kotlin.String) {
         @Json(name = "name") name("name");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter include
     */
     enum class IncludeGetFlow(val value: kotlin.String) {
         @Json(name = "flow-actions") flowMinusActions("flow-actions"),
         @Json(name = "tags") tags("tags");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Flow
     * Get a flow with the given flow ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowAction For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsFlow For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return GetFlowResponseCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getFlow(id: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsFlowAction: kotlin.collections.List<FieldsFlowActionGetFlow>? = null, fieldsFlow: kotlin.collections.List<FieldsFlowGetFlow>? = null, fieldsTag: kotlin.collections.List<FieldsTagGetFlow>? = null, include: kotlin.collections.List<IncludeGetFlow>? = null) : GetFlowResponseCompoundDocument {
        val localVarResponse = getFlowWithHttpInfo(id = id, revision = revision, fieldsFlowAction = fieldsFlowAction, fieldsFlow = fieldsFlow, fieldsTag = fieldsTag, include = include)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetFlowResponseCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Flow
     * Get a flow with the given flow ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowAction For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsFlow For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return ApiResponse<GetFlowResponseCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getFlowWithHttpInfo(id: kotlin.String, revision: kotlin.String, fieldsFlowAction: kotlin.collections.List<FieldsFlowActionGetFlow>?, fieldsFlow: kotlin.collections.List<FieldsFlowGetFlow>?, fieldsTag: kotlin.collections.List<FieldsTagGetFlow>?, include: kotlin.collections.List<IncludeGetFlow>?) : ApiResponse<GetFlowResponseCompoundDocument?> {
        val localVariableConfig = getFlowRequestConfig(id = id, revision = revision, fieldsFlowAction = fieldsFlowAction, fieldsFlow = fieldsFlow, fieldsTag = fieldsTag, include = include)

        return request<Unit, GetFlowResponseCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getFlow
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowAction For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsFlow For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return RequestConfig
     */
    fun getFlowRequestConfig(id: kotlin.String, revision: kotlin.String, fieldsFlowAction: kotlin.collections.List<FieldsFlowActionGetFlow>?, fieldsFlow: kotlin.collections.List<FieldsFlowGetFlow>?, fieldsTag: kotlin.collections.List<FieldsTagGetFlow>?, include: kotlin.collections.List<IncludeGetFlow>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsFlowAction != null) {
                    put("fields[flow-action]", toMultiValue(fieldsFlowAction.toList(), "csv"))
                }
                if (fieldsFlow != null) {
                    put("fields[flow]", toMultiValue(fieldsFlow.toList(), "csv"))
                }
                if (fieldsTag != null) {
                    put("fields[tag]", toMultiValue(fieldsTag.toList(), "csv"))
                }
                if (include != null) {
                    put("include", toMultiValue(include.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/flows/{id}/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsFlowAction
     */
     enum class FieldsFlowActionGetFlowAction(val value: kotlin.String) {
         @Json(name = "action_type") action_type("action_type"),
         @Json(name = "status") status("status"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated"),
         @Json(name = "settings") settings("settings"),
         @Json(name = "tracking_options") tracking_options("tracking_options"),
         @Json(name = "send_options") send_options("send_options"),
         @Json(name = "send_options.use_smart_sending") send_optionsPeriodUse_smart_sending("send_options.use_smart_sending"),
         @Json(name = "send_options.is_transactional") send_optionsPeriodIs_transactional("send_options.is_transactional"),
         @Json(name = "render_options") render_options("render_options"),
         @Json(name = "render_options.shorten_links") render_optionsPeriodShorten_links("render_options.shorten_links"),
         @Json(name = "render_options.add_org_prefix") render_optionsPeriodAdd_org_prefix("render_options.add_org_prefix"),
         @Json(name = "render_options.add_info_link") render_optionsPeriodAdd_info_link("render_options.add_info_link"),
         @Json(name = "render_options.add_opt_out_language") render_optionsPeriodAdd_opt_out_language("render_options.add_opt_out_language");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter fieldsFlowMessage
     */
     enum class FieldsFlowMessageGetFlowAction(val value: kotlin.String) {
         @Json(name = "name") name("name"),
         @Json(name = "channel") channel("channel"),
         @Json(name = "content") content("content"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter fieldsFlow
     */
     enum class FieldsFlowGetFlowAction(val value: kotlin.String) {
         @Json(name = "name") name("name"),
         @Json(name = "status") status("status"),
         @Json(name = "archived") archived("archived"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated"),
         @Json(name = "trigger_type") trigger_type("trigger_type");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter include
     */
     enum class IncludeGetFlowAction(val value: kotlin.String) {
         @Json(name = "flow") flow("flow"),
         @Json(name = "flow-messages") flowMinusMessages("flow-messages");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Flow Action
     * Get a flow action from a flow with the given flow action ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowAction For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsFlowMessage For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsFlow For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return GetFlowActionResponseCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getFlowAction(id: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsFlowAction: kotlin.collections.List<FieldsFlowActionGetFlowAction>? = null, fieldsFlowMessage: kotlin.collections.List<FieldsFlowMessageGetFlowAction>? = null, fieldsFlow: kotlin.collections.List<FieldsFlowGetFlowAction>? = null, include: kotlin.collections.List<IncludeGetFlowAction>? = null) : GetFlowActionResponseCompoundDocument {
        val localVarResponse = getFlowActionWithHttpInfo(id = id, revision = revision, fieldsFlowAction = fieldsFlowAction, fieldsFlowMessage = fieldsFlowMessage, fieldsFlow = fieldsFlow, include = include)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetFlowActionResponseCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Flow Action
     * Get a flow action from a flow with the given flow action ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowAction For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsFlowMessage For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsFlow For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return ApiResponse<GetFlowActionResponseCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getFlowActionWithHttpInfo(id: kotlin.String, revision: kotlin.String, fieldsFlowAction: kotlin.collections.List<FieldsFlowActionGetFlowAction>?, fieldsFlowMessage: kotlin.collections.List<FieldsFlowMessageGetFlowAction>?, fieldsFlow: kotlin.collections.List<FieldsFlowGetFlowAction>?, include: kotlin.collections.List<IncludeGetFlowAction>?) : ApiResponse<GetFlowActionResponseCompoundDocument?> {
        val localVariableConfig = getFlowActionRequestConfig(id = id, revision = revision, fieldsFlowAction = fieldsFlowAction, fieldsFlowMessage = fieldsFlowMessage, fieldsFlow = fieldsFlow, include = include)

        return request<Unit, GetFlowActionResponseCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getFlowAction
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowAction For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsFlowMessage For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsFlow For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return RequestConfig
     */
    fun getFlowActionRequestConfig(id: kotlin.String, revision: kotlin.String, fieldsFlowAction: kotlin.collections.List<FieldsFlowActionGetFlowAction>?, fieldsFlowMessage: kotlin.collections.List<FieldsFlowMessageGetFlowAction>?, fieldsFlow: kotlin.collections.List<FieldsFlowGetFlowAction>?, include: kotlin.collections.List<IncludeGetFlowAction>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsFlowAction != null) {
                    put("fields[flow-action]", toMultiValue(fieldsFlowAction.toList(), "csv"))
                }
                if (fieldsFlowMessage != null) {
                    put("fields[flow-message]", toMultiValue(fieldsFlowMessage.toList(), "csv"))
                }
                if (fieldsFlow != null) {
                    put("fields[flow]", toMultiValue(fieldsFlow.toList(), "csv"))
                }
                if (include != null) {
                    put("include", toMultiValue(include.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/flow-actions/{id}/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsFlow
     */
     enum class FieldsFlowGetFlowActionFlow(val value: kotlin.String) {
         @Json(name = "name") name("name"),
         @Json(name = "status") status("status"),
         @Json(name = "archived") archived("archived"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated"),
         @Json(name = "trigger_type") trigger_type("trigger_type");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Flow For Flow Action
     * Get the flow associated with the given action ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlow For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return GetFlowResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getFlowActionFlow(id: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsFlow: kotlin.collections.List<FieldsFlowGetFlowActionFlow>? = null) : GetFlowResponse {
        val localVarResponse = getFlowActionFlowWithHttpInfo(id = id, revision = revision, fieldsFlow = fieldsFlow)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetFlowResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Flow For Flow Action
     * Get the flow associated with the given action ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlow For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return ApiResponse<GetFlowResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getFlowActionFlowWithHttpInfo(id: kotlin.String, revision: kotlin.String, fieldsFlow: kotlin.collections.List<FieldsFlowGetFlowActionFlow>?) : ApiResponse<GetFlowResponse?> {
        val localVariableConfig = getFlowActionFlowRequestConfig(id = id, revision = revision, fieldsFlow = fieldsFlow)

        return request<Unit, GetFlowResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getFlowActionFlow
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlow For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return RequestConfig
     */
    fun getFlowActionFlowRequestConfig(id: kotlin.String, revision: kotlin.String, fieldsFlow: kotlin.collections.List<FieldsFlowGetFlowActionFlow>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsFlow != null) {
                    put("fields[flow]", toMultiValue(fieldsFlow.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/flow-actions/{id}/flow/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsFlowMessage
     */
     enum class FieldsFlowMessageGetFlowActionMessages(val value: kotlin.String) {
         @Json(name = "name") name("name"),
         @Json(name = "channel") channel("channel"),
         @Json(name = "content") content("content"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter sort
     */
     enum class SortGetFlowActionMessages(val value: kotlin.String) {
         @Json(name = "created") created("created"),
         @Json(name = "-created") MinusCreated("-created"),
         @Json(name = "id") id("id"),
         @Json(name = "-id") MinusId("-id"),
         @Json(name = "name") name("name"),
         @Json(name = "-name") MinusName("-name"),
         @Json(name = "updated") updated("updated"),
         @Json(name = "-updated") MinusUpdated("-updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Flow Action Messages
     * Get all flow messages associated with the given action ID.  Flow messages can be sorted by the following fields, in ascending and descending order:  ascending: &#x60;id&#x60;,  &#x60;name&#x60;, &#x60;created&#x60;, &#x60;updated&#x60; descending: &#x60;-id&#x60;,  &#x60;-name&#x60;, &#x60;-created&#x60;, &#x60;-updated&#x60;  Returns a maximum of 50 flows per request, which can be paginated with offset pagination. Offset pagination uses the following parameters: &#x60;page[size]&#x60; and &#x60;page[number]&#x60;&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowMessage For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;id&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;, &#x60;ends-with&#x60;, &#x60;equals&#x60;, &#x60;starts-with&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60; (optional)
     * @param pageSize Default: 50. Min: 1. Max: 100. (optional, default to 50)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return GetFlowMessageResponseCollection
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getFlowActionMessages(id: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsFlowMessage: kotlin.collections.List<FieldsFlowMessageGetFlowActionMessages>? = null, filter: kotlin.String? = null, pageSize: kotlin.Int? = 50, sort: SortGetFlowActionMessages? = null) : GetFlowMessageResponseCollection {
        val localVarResponse = getFlowActionMessagesWithHttpInfo(id = id, revision = revision, fieldsFlowMessage = fieldsFlowMessage, filter = filter, pageSize = pageSize, sort = sort)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetFlowMessageResponseCollection
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Flow Action Messages
     * Get all flow messages associated with the given action ID.  Flow messages can be sorted by the following fields, in ascending and descending order:  ascending: &#x60;id&#x60;,  &#x60;name&#x60;, &#x60;created&#x60;, &#x60;updated&#x60; descending: &#x60;-id&#x60;,  &#x60;-name&#x60;, &#x60;-created&#x60;, &#x60;-updated&#x60;  Returns a maximum of 50 flows per request, which can be paginated with offset pagination. Offset pagination uses the following parameters: &#x60;page[size]&#x60; and &#x60;page[number]&#x60;&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowMessage For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;id&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;, &#x60;ends-with&#x60;, &#x60;equals&#x60;, &#x60;starts-with&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60; (optional)
     * @param pageSize Default: 50. Min: 1. Max: 100. (optional, default to 50)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return ApiResponse<GetFlowMessageResponseCollection?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getFlowActionMessagesWithHttpInfo(id: kotlin.String, revision: kotlin.String, fieldsFlowMessage: kotlin.collections.List<FieldsFlowMessageGetFlowActionMessages>?, filter: kotlin.String?, pageSize: kotlin.Int?, sort: SortGetFlowActionMessages?) : ApiResponse<GetFlowMessageResponseCollection?> {
        val localVariableConfig = getFlowActionMessagesRequestConfig(id = id, revision = revision, fieldsFlowMessage = fieldsFlowMessage, filter = filter, pageSize = pageSize, sort = sort)

        return request<Unit, GetFlowMessageResponseCollection>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getFlowActionMessages
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowMessage For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;id&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;, &#x60;ends-with&#x60;, &#x60;equals&#x60;, &#x60;starts-with&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60; (optional)
     * @param pageSize Default: 50. Min: 1. Max: 100. (optional, default to 50)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return RequestConfig
     */
    fun getFlowActionMessagesRequestConfig(id: kotlin.String, revision: kotlin.String, fieldsFlowMessage: kotlin.collections.List<FieldsFlowMessageGetFlowActionMessages>?, filter: kotlin.String?, pageSize: kotlin.Int?, sort: SortGetFlowActionMessages?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsFlowMessage != null) {
                    put("fields[flow-message]", toMultiValue(fieldsFlowMessage.toList(), "csv"))
                }
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (pageSize != null) {
                    put("page[size]", listOf(pageSize.toString()))
                }
                if (sort != null) {
                    put("sort", listOf(sort.value))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/flow-actions/{id}/flow-messages/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Get Flow Action Relationships Flow
     * Get the flow associated with the given action ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return GetFlowActionFlowRelationshipResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getFlowActionRelationshipsFlow(id: kotlin.String, revision: kotlin.String = "2024-07-15") : GetFlowActionFlowRelationshipResponse {
        val localVarResponse = getFlowActionRelationshipsFlowWithHttpInfo(id = id, revision = revision)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetFlowActionFlowRelationshipResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Flow Action Relationships Flow
     * Get the flow associated with the given action ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return ApiResponse<GetFlowActionFlowRelationshipResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getFlowActionRelationshipsFlowWithHttpInfo(id: kotlin.String, revision: kotlin.String) : ApiResponse<GetFlowActionFlowRelationshipResponse?> {
        val localVariableConfig = getFlowActionRelationshipsFlowRequestConfig(id = id, revision = revision)

        return request<Unit, GetFlowActionFlowRelationshipResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getFlowActionRelationshipsFlow
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return RequestConfig
     */
    fun getFlowActionRelationshipsFlowRequestConfig(id: kotlin.String, revision: kotlin.String) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/flow-actions/{id}/relationships/flow/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter sort
     */
     enum class SortGetFlowActionRelationshipsMessages(val value: kotlin.String) {
         @Json(name = "created") created("created"),
         @Json(name = "-created") MinusCreated("-created"),
         @Json(name = "id") id("id"),
         @Json(name = "-id") MinusId("-id"),
         @Json(name = "name") name("name"),
         @Json(name = "-name") MinusName("-name"),
         @Json(name = "updated") updated("updated"),
         @Json(name = "-updated") MinusUpdated("-updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Flow Action Relationships Messages
     * Get all relationships for flow messages associated with the given flow action ID.  Returns a maximum of 50 flow message relationships per request, which can be paginated with cursor-based pagination.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;, &#x60;ends-with&#x60;, &#x60;equals&#x60;, &#x60;starts-with&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param pageSize Default: 50. Min: 1. Max: 50. (optional, default to 50)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return GetFlowActionFlowMessageRelationshipResponseCollection
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getFlowActionRelationshipsMessages(id: kotlin.String, revision: kotlin.String = "2024-07-15", filter: kotlin.String? = null, pageCursor: kotlin.String? = null, pageSize: kotlin.Int? = 50, sort: SortGetFlowActionRelationshipsMessages? = null) : GetFlowActionFlowMessageRelationshipResponseCollection {
        val localVarResponse = getFlowActionRelationshipsMessagesWithHttpInfo(id = id, revision = revision, filter = filter, pageCursor = pageCursor, pageSize = pageSize, sort = sort)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetFlowActionFlowMessageRelationshipResponseCollection
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Flow Action Relationships Messages
     * Get all relationships for flow messages associated with the given flow action ID.  Returns a maximum of 50 flow message relationships per request, which can be paginated with cursor-based pagination.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;, &#x60;ends-with&#x60;, &#x60;equals&#x60;, &#x60;starts-with&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param pageSize Default: 50. Min: 1. Max: 50. (optional, default to 50)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return ApiResponse<GetFlowActionFlowMessageRelationshipResponseCollection?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getFlowActionRelationshipsMessagesWithHttpInfo(id: kotlin.String, revision: kotlin.String, filter: kotlin.String?, pageCursor: kotlin.String?, pageSize: kotlin.Int?, sort: SortGetFlowActionRelationshipsMessages?) : ApiResponse<GetFlowActionFlowMessageRelationshipResponseCollection?> {
        val localVariableConfig = getFlowActionRelationshipsMessagesRequestConfig(id = id, revision = revision, filter = filter, pageCursor = pageCursor, pageSize = pageSize, sort = sort)

        return request<Unit, GetFlowActionFlowMessageRelationshipResponseCollection>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getFlowActionRelationshipsMessages
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;, &#x60;ends-with&#x60;, &#x60;equals&#x60;, &#x60;starts-with&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param pageSize Default: 50. Min: 1. Max: 50. (optional, default to 50)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return RequestConfig
     */
    fun getFlowActionRelationshipsMessagesRequestConfig(id: kotlin.String, revision: kotlin.String, filter: kotlin.String?, pageCursor: kotlin.String?, pageSize: kotlin.Int?, sort: SortGetFlowActionRelationshipsMessages?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
                if (pageSize != null) {
                    put("page[size]", listOf(pageSize.toString()))
                }
                if (sort != null) {
                    put("sort", listOf(sort.value))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/flow-actions/{id}/relationships/flow-messages/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsFlowAction
     */
     enum class FieldsFlowActionGetFlowFlowActions(val value: kotlin.String) {
         @Json(name = "action_type") action_type("action_type"),
         @Json(name = "status") status("status"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated"),
         @Json(name = "settings") settings("settings"),
         @Json(name = "tracking_options") tracking_options("tracking_options"),
         @Json(name = "send_options") send_options("send_options"),
         @Json(name = "send_options.use_smart_sending") send_optionsPeriodUse_smart_sending("send_options.use_smart_sending"),
         @Json(name = "send_options.is_transactional") send_optionsPeriodIs_transactional("send_options.is_transactional"),
         @Json(name = "render_options") render_options("render_options"),
         @Json(name = "render_options.shorten_links") render_optionsPeriodShorten_links("render_options.shorten_links"),
         @Json(name = "render_options.add_org_prefix") render_optionsPeriodAdd_org_prefix("render_options.add_org_prefix"),
         @Json(name = "render_options.add_info_link") render_optionsPeriodAdd_info_link("render_options.add_info_link"),
         @Json(name = "render_options.add_opt_out_language") render_optionsPeriodAdd_opt_out_language("render_options.add_opt_out_language");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter sort
     */
     enum class SortGetFlowFlowActions(val value: kotlin.String) {
         @Json(name = "action_type") action_type("action_type"),
         @Json(name = "-action_type") MinusAction_type("-action_type"),
         @Json(name = "created") created("created"),
         @Json(name = "-created") MinusCreated("-created"),
         @Json(name = "id") id("id"),
         @Json(name = "-id") MinusId("-id"),
         @Json(name = "status") status("status"),
         @Json(name = "-status") MinusStatus("-status"),
         @Json(name = "updated") updated("updated"),
         @Json(name = "-updated") MinusUpdated("-updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Flow Flow Actions
     * Get all flow actions associated with the given flow ID.  Returns a maximum of 50 flows per request, which can be paginated with cursor-based pagination.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowAction For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;id&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;action_type&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param pageSize Default: 50. Min: 1. Max: 50. (optional, default to 50)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return GetFlowActionResponseCollection
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getFlowFlowActions(id: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsFlowAction: kotlin.collections.List<FieldsFlowActionGetFlowFlowActions>? = null, filter: kotlin.String? = null, pageCursor: kotlin.String? = null, pageSize: kotlin.Int? = 50, sort: SortGetFlowFlowActions? = null) : GetFlowActionResponseCollection {
        val localVarResponse = getFlowFlowActionsWithHttpInfo(id = id, revision = revision, fieldsFlowAction = fieldsFlowAction, filter = filter, pageCursor = pageCursor, pageSize = pageSize, sort = sort)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetFlowActionResponseCollection
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Flow Flow Actions
     * Get all flow actions associated with the given flow ID.  Returns a maximum of 50 flows per request, which can be paginated with cursor-based pagination.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowAction For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;id&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;action_type&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param pageSize Default: 50. Min: 1. Max: 50. (optional, default to 50)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return ApiResponse<GetFlowActionResponseCollection?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getFlowFlowActionsWithHttpInfo(id: kotlin.String, revision: kotlin.String, fieldsFlowAction: kotlin.collections.List<FieldsFlowActionGetFlowFlowActions>?, filter: kotlin.String?, pageCursor: kotlin.String?, pageSize: kotlin.Int?, sort: SortGetFlowFlowActions?) : ApiResponse<GetFlowActionResponseCollection?> {
        val localVariableConfig = getFlowFlowActionsRequestConfig(id = id, revision = revision, fieldsFlowAction = fieldsFlowAction, filter = filter, pageCursor = pageCursor, pageSize = pageSize, sort = sort)

        return request<Unit, GetFlowActionResponseCollection>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getFlowFlowActions
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowAction For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;id&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;action_type&#x60;: &#x60;any&#x60;, &#x60;equals&#x60;&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60; (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param pageSize Default: 50. Min: 1. Max: 50. (optional, default to 50)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return RequestConfig
     */
    fun getFlowFlowActionsRequestConfig(id: kotlin.String, revision: kotlin.String, fieldsFlowAction: kotlin.collections.List<FieldsFlowActionGetFlowFlowActions>?, filter: kotlin.String?, pageCursor: kotlin.String?, pageSize: kotlin.Int?, sort: SortGetFlowFlowActions?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsFlowAction != null) {
                    put("fields[flow-action]", toMultiValue(fieldsFlowAction.toList(), "csv"))
                }
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
                if (pageSize != null) {
                    put("page[size]", listOf(pageSize.toString()))
                }
                if (sort != null) {
                    put("sort", listOf(sort.value))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/flows/{id}/flow-actions/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsFlowAction
     */
     enum class FieldsFlowActionGetFlowMessage(val value: kotlin.String) {
         @Json(name = "action_type") action_type("action_type"),
         @Json(name = "status") status("status"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated"),
         @Json(name = "settings") settings("settings"),
         @Json(name = "tracking_options") tracking_options("tracking_options"),
         @Json(name = "send_options") send_options("send_options"),
         @Json(name = "send_options.use_smart_sending") send_optionsPeriodUse_smart_sending("send_options.use_smart_sending"),
         @Json(name = "send_options.is_transactional") send_optionsPeriodIs_transactional("send_options.is_transactional"),
         @Json(name = "render_options") render_options("render_options"),
         @Json(name = "render_options.shorten_links") render_optionsPeriodShorten_links("render_options.shorten_links"),
         @Json(name = "render_options.add_org_prefix") render_optionsPeriodAdd_org_prefix("render_options.add_org_prefix"),
         @Json(name = "render_options.add_info_link") render_optionsPeriodAdd_info_link("render_options.add_info_link"),
         @Json(name = "render_options.add_opt_out_language") render_optionsPeriodAdd_opt_out_language("render_options.add_opt_out_language");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter fieldsFlowMessage
     */
     enum class FieldsFlowMessageGetFlowMessage(val value: kotlin.String) {
         @Json(name = "name") name("name"),
         @Json(name = "channel") channel("channel"),
         @Json(name = "content") content("content"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter fieldsTemplate
     */
     enum class FieldsTemplateGetFlowMessage(val value: kotlin.String) {
         @Json(name = "name") name("name"),
         @Json(name = "editor_type") editor_type("editor_type"),
         @Json(name = "html") html("html"),
         @Json(name = "text") text("text"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter include
     */
     enum class IncludeGetFlowMessage(val value: kotlin.String) {
         @Json(name = "flow-action") flowMinusAction("flow-action"),
         @Json(name = "template") template("template");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Flow Message
     * Get the flow message of a flow with the given message ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowAction For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsFlowMessage For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsTemplate For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return GetFlowMessageResponseCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getFlowMessage(id: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsFlowAction: kotlin.collections.List<FieldsFlowActionGetFlowMessage>? = null, fieldsFlowMessage: kotlin.collections.List<FieldsFlowMessageGetFlowMessage>? = null, fieldsTemplate: kotlin.collections.List<FieldsTemplateGetFlowMessage>? = null, include: kotlin.collections.List<IncludeGetFlowMessage>? = null) : GetFlowMessageResponseCompoundDocument {
        val localVarResponse = getFlowMessageWithHttpInfo(id = id, revision = revision, fieldsFlowAction = fieldsFlowAction, fieldsFlowMessage = fieldsFlowMessage, fieldsTemplate = fieldsTemplate, include = include)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetFlowMessageResponseCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Flow Message
     * Get the flow message of a flow with the given message ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowAction For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsFlowMessage For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsTemplate For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return ApiResponse<GetFlowMessageResponseCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getFlowMessageWithHttpInfo(id: kotlin.String, revision: kotlin.String, fieldsFlowAction: kotlin.collections.List<FieldsFlowActionGetFlowMessage>?, fieldsFlowMessage: kotlin.collections.List<FieldsFlowMessageGetFlowMessage>?, fieldsTemplate: kotlin.collections.List<FieldsTemplateGetFlowMessage>?, include: kotlin.collections.List<IncludeGetFlowMessage>?) : ApiResponse<GetFlowMessageResponseCompoundDocument?> {
        val localVariableConfig = getFlowMessageRequestConfig(id = id, revision = revision, fieldsFlowAction = fieldsFlowAction, fieldsFlowMessage = fieldsFlowMessage, fieldsTemplate = fieldsTemplate, include = include)

        return request<Unit, GetFlowMessageResponseCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getFlowMessage
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowAction For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsFlowMessage For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsTemplate For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @return RequestConfig
     */
    fun getFlowMessageRequestConfig(id: kotlin.String, revision: kotlin.String, fieldsFlowAction: kotlin.collections.List<FieldsFlowActionGetFlowMessage>?, fieldsFlowMessage: kotlin.collections.List<FieldsFlowMessageGetFlowMessage>?, fieldsTemplate: kotlin.collections.List<FieldsTemplateGetFlowMessage>?, include: kotlin.collections.List<IncludeGetFlowMessage>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsFlowAction != null) {
                    put("fields[flow-action]", toMultiValue(fieldsFlowAction.toList(), "csv"))
                }
                if (fieldsFlowMessage != null) {
                    put("fields[flow-message]", toMultiValue(fieldsFlowMessage.toList(), "csv"))
                }
                if (fieldsTemplate != null) {
                    put("fields[template]", toMultiValue(fieldsTemplate.toList(), "csv"))
                }
                if (include != null) {
                    put("include", toMultiValue(include.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/flow-messages/{id}/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsFlowAction
     */
     enum class FieldsFlowActionGetFlowMessageAction(val value: kotlin.String) {
         @Json(name = "action_type") action_type("action_type"),
         @Json(name = "status") status("status"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated"),
         @Json(name = "settings") settings("settings"),
         @Json(name = "tracking_options") tracking_options("tracking_options"),
         @Json(name = "send_options") send_options("send_options"),
         @Json(name = "send_options.use_smart_sending") send_optionsPeriodUse_smart_sending("send_options.use_smart_sending"),
         @Json(name = "send_options.is_transactional") send_optionsPeriodIs_transactional("send_options.is_transactional"),
         @Json(name = "render_options") render_options("render_options"),
         @Json(name = "render_options.shorten_links") render_optionsPeriodShorten_links("render_options.shorten_links"),
         @Json(name = "render_options.add_org_prefix") render_optionsPeriodAdd_org_prefix("render_options.add_org_prefix"),
         @Json(name = "render_options.add_info_link") render_optionsPeriodAdd_info_link("render_options.add_info_link"),
         @Json(name = "render_options.add_opt_out_language") render_optionsPeriodAdd_opt_out_language("render_options.add_opt_out_language");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Flow Action For Message
     * Get the flow action for a flow message with the given message ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowAction For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return GetFlowActionResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getFlowMessageAction(id: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsFlowAction: kotlin.collections.List<FieldsFlowActionGetFlowMessageAction>? = null) : GetFlowActionResponse {
        val localVarResponse = getFlowMessageActionWithHttpInfo(id = id, revision = revision, fieldsFlowAction = fieldsFlowAction)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetFlowActionResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Flow Action For Message
     * Get the flow action for a flow message with the given message ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowAction For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return ApiResponse<GetFlowActionResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getFlowMessageActionWithHttpInfo(id: kotlin.String, revision: kotlin.String, fieldsFlowAction: kotlin.collections.List<FieldsFlowActionGetFlowMessageAction>?) : ApiResponse<GetFlowActionResponse?> {
        val localVariableConfig = getFlowMessageActionRequestConfig(id = id, revision = revision, fieldsFlowAction = fieldsFlowAction)

        return request<Unit, GetFlowActionResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getFlowMessageAction
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowAction For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return RequestConfig
     */
    fun getFlowMessageActionRequestConfig(id: kotlin.String, revision: kotlin.String, fieldsFlowAction: kotlin.collections.List<FieldsFlowActionGetFlowMessageAction>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsFlowAction != null) {
                    put("fields[flow-action]", toMultiValue(fieldsFlowAction.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/flow-messages/{id}/flow-action/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Get Flow Message Relationships Action
     * Get the [relationship](https://developers.klaviyo.com/en/reference/api_overview#relationships) for a flow message&#39;s flow action, given the flow ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return GetFlowMessageFlowActionRelationshipResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getFlowMessageRelationshipsAction(id: kotlin.String, revision: kotlin.String = "2024-07-15") : GetFlowMessageFlowActionRelationshipResponse {
        val localVarResponse = getFlowMessageRelationshipsActionWithHttpInfo(id = id, revision = revision)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetFlowMessageFlowActionRelationshipResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Flow Message Relationships Action
     * Get the [relationship](https://developers.klaviyo.com/en/reference/api_overview#relationships) for a flow message&#39;s flow action, given the flow ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return ApiResponse<GetFlowMessageFlowActionRelationshipResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getFlowMessageRelationshipsActionWithHttpInfo(id: kotlin.String, revision: kotlin.String) : ApiResponse<GetFlowMessageFlowActionRelationshipResponse?> {
        val localVariableConfig = getFlowMessageRelationshipsActionRequestConfig(id = id, revision = revision)

        return request<Unit, GetFlowMessageFlowActionRelationshipResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getFlowMessageRelationshipsAction
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return RequestConfig
     */
    fun getFlowMessageRelationshipsActionRequestConfig(id: kotlin.String, revision: kotlin.String) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/flow-messages/{id}/relationships/flow-action/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Get Flow Message Relationships Template
     * Returns the ID of the related template&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;templates:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return GetFlowMessageTemplateRelationshipResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getFlowMessageRelationshipsTemplate(id: kotlin.String, revision: kotlin.String = "2024-07-15") : GetFlowMessageTemplateRelationshipResponse {
        val localVarResponse = getFlowMessageRelationshipsTemplateWithHttpInfo(id = id, revision = revision)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetFlowMessageTemplateRelationshipResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Flow Message Relationships Template
     * Returns the ID of the related template&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;templates:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return ApiResponse<GetFlowMessageTemplateRelationshipResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getFlowMessageRelationshipsTemplateWithHttpInfo(id: kotlin.String, revision: kotlin.String) : ApiResponse<GetFlowMessageTemplateRelationshipResponse?> {
        val localVariableConfig = getFlowMessageRelationshipsTemplateRequestConfig(id = id, revision = revision)

        return request<Unit, GetFlowMessageTemplateRelationshipResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getFlowMessageRelationshipsTemplate
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return RequestConfig
     */
    fun getFlowMessageRelationshipsTemplateRequestConfig(id: kotlin.String, revision: kotlin.String) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/flow-messages/{id}/relationships/template/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsTemplate
     */
     enum class FieldsTemplateGetFlowMessageTemplate(val value: kotlin.String) {
         @Json(name = "name") name("name"),
         @Json(name = "editor_type") editor_type("editor_type"),
         @Json(name = "html") html("html"),
         @Json(name = "text") text("text"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Flow Message Template
     * Return the related template&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;templates:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsTemplate For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return GetTemplateResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getFlowMessageTemplate(id: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsTemplate: kotlin.collections.List<FieldsTemplateGetFlowMessageTemplate>? = null) : GetTemplateResponse {
        val localVarResponse = getFlowMessageTemplateWithHttpInfo(id = id, revision = revision, fieldsTemplate = fieldsTemplate)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetTemplateResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Flow Message Template
     * Return the related template&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;templates:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsTemplate For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return ApiResponse<GetTemplateResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getFlowMessageTemplateWithHttpInfo(id: kotlin.String, revision: kotlin.String, fieldsTemplate: kotlin.collections.List<FieldsTemplateGetFlowMessageTemplate>?) : ApiResponse<GetTemplateResponse?> {
        val localVariableConfig = getFlowMessageTemplateRequestConfig(id = id, revision = revision, fieldsTemplate = fieldsTemplate)

        return request<Unit, GetTemplateResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getFlowMessageTemplate
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsTemplate For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return RequestConfig
     */
    fun getFlowMessageTemplateRequestConfig(id: kotlin.String, revision: kotlin.String, fieldsTemplate: kotlin.collections.List<FieldsTemplateGetFlowMessageTemplate>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsTemplate != null) {
                    put("fields[template]", toMultiValue(fieldsTemplate.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/flow-messages/{id}/template/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter sort
     */
     enum class SortGetFlowRelationshipsFlowActions(val value: kotlin.String) {
         @Json(name = "created") created("created"),
         @Json(name = "-created") MinusCreated("-created"),
         @Json(name = "id") id("id"),
         @Json(name = "-id") MinusId("-id"),
         @Json(name = "status") status("status"),
         @Json(name = "-status") MinusStatus("-status"),
         @Json(name = "updated") updated("updated"),
         @Json(name = "-updated") MinusUpdated("-updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Flow Relationships Flow Actions
     * Get all [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for flow actions associated with the given flow ID.  Flow action relationships can be sorted by the following fields, in ascending and descending order: &#x60;id&#x60;,  &#x60;status&#x60;, &#x60;created&#x60;, &#x60;updated&#x60;  Use filters to narrow your results.  Returns a maximum of 50 flow action relationships per request, which can be paginated with offset pagination. Offset pagination uses the following parameters: &#x60;page[size]&#x60; and &#x60;page[number]&#x60;.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;action_type&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60; (optional)
     * @param pageSize Default: 50. Min: 1. Max: 100. (optional, default to 50)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return GetFlowFlowActionRelationshipListResponseCollection
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getFlowRelationshipsFlowActions(id: kotlin.String, revision: kotlin.String = "2024-07-15", filter: kotlin.String? = null, pageSize: kotlin.Int? = 50, sort: SortGetFlowRelationshipsFlowActions? = null) : GetFlowFlowActionRelationshipListResponseCollection {
        val localVarResponse = getFlowRelationshipsFlowActionsWithHttpInfo(id = id, revision = revision, filter = filter, pageSize = pageSize, sort = sort)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetFlowFlowActionRelationshipListResponseCollection
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Flow Relationships Flow Actions
     * Get all [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for flow actions associated with the given flow ID.  Flow action relationships can be sorted by the following fields, in ascending and descending order: &#x60;id&#x60;,  &#x60;status&#x60;, &#x60;created&#x60;, &#x60;updated&#x60;  Use filters to narrow your results.  Returns a maximum of 50 flow action relationships per request, which can be paginated with offset pagination. Offset pagination uses the following parameters: &#x60;page[size]&#x60; and &#x60;page[number]&#x60;.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;action_type&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60; (optional)
     * @param pageSize Default: 50. Min: 1. Max: 100. (optional, default to 50)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return ApiResponse<GetFlowFlowActionRelationshipListResponseCollection?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getFlowRelationshipsFlowActionsWithHttpInfo(id: kotlin.String, revision: kotlin.String, filter: kotlin.String?, pageSize: kotlin.Int?, sort: SortGetFlowRelationshipsFlowActions?) : ApiResponse<GetFlowFlowActionRelationshipListResponseCollection?> {
        val localVariableConfig = getFlowRelationshipsFlowActionsRequestConfig(id = id, revision = revision, filter = filter, pageSize = pageSize, sort = sort)

        return request<Unit, GetFlowFlowActionRelationshipListResponseCollection>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getFlowRelationshipsFlowActions
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;action_type&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60; (optional)
     * @param pageSize Default: 50. Min: 1. Max: 100. (optional, default to 50)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return RequestConfig
     */
    fun getFlowRelationshipsFlowActionsRequestConfig(id: kotlin.String, revision: kotlin.String, filter: kotlin.String?, pageSize: kotlin.Int?, sort: SortGetFlowRelationshipsFlowActions?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (pageSize != null) {
                    put("page[size]", listOf(pageSize.toString()))
                }
                if (sort != null) {
                    put("sort", listOf(sort.value))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/flows/{id}/relationships/flow-actions/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Get Flow Relationships Tags
     * Return the tag IDs of all tags associated with the given flow.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60; &#x60;tags:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return GetFlowTagRelationshipListResponseCollection
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getFlowRelationshipsTags(id: kotlin.String, revision: kotlin.String = "2024-07-15") : GetFlowTagRelationshipListResponseCollection {
        val localVarResponse = getFlowRelationshipsTagsWithHttpInfo(id = id, revision = revision)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetFlowTagRelationshipListResponseCollection
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Flow Relationships Tags
     * Return the tag IDs of all tags associated with the given flow.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60; &#x60;tags:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return ApiResponse<GetFlowTagRelationshipListResponseCollection?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getFlowRelationshipsTagsWithHttpInfo(id: kotlin.String, revision: kotlin.String) : ApiResponse<GetFlowTagRelationshipListResponseCollection?> {
        val localVariableConfig = getFlowRelationshipsTagsRequestConfig(id = id, revision = revision)

        return request<Unit, GetFlowTagRelationshipListResponseCollection>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getFlowRelationshipsTags
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @return RequestConfig
     */
    fun getFlowRelationshipsTagsRequestConfig(id: kotlin.String, revision: kotlin.String) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/flows/{id}/relationships/tags/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsTag
     */
     enum class FieldsTagGetFlowTags(val value: kotlin.String) {
         @Json(name = "name") name("name");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Flow Tags
     * Return all tags associated with the given flow ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60; &#x60;tags:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return GetTagResponseCollection
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getFlowTags(id: kotlin.String, revision: kotlin.String = "2024-07-15", fieldsTag: kotlin.collections.List<FieldsTagGetFlowTags>? = null) : GetTagResponseCollection {
        val localVarResponse = getFlowTagsWithHttpInfo(id = id, revision = revision, fieldsTag = fieldsTag)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetTagResponseCollection
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Flow Tags
     * Return all tags associated with the given flow ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60; &#x60;tags:read&#x60;
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return ApiResponse<GetTagResponseCollection?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getFlowTagsWithHttpInfo(id: kotlin.String, revision: kotlin.String, fieldsTag: kotlin.collections.List<FieldsTagGetFlowTags>?) : ApiResponse<GetTagResponseCollection?> {
        val localVariableConfig = getFlowTagsRequestConfig(id = id, revision = revision, fieldsTag = fieldsTag)

        return request<Unit, GetTagResponseCollection>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getFlowTags
     *
     * @param id 
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @return RequestConfig
     */
    fun getFlowTagsRequestConfig(id: kotlin.String, revision: kotlin.String, fieldsTag: kotlin.collections.List<FieldsTagGetFlowTags>?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsTag != null) {
                    put("fields[tag]", toMultiValue(fieldsTag.toList(), "csv"))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/flows/{id}/tags/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * enum for parameter fieldsFlowAction
     */
     enum class FieldsFlowActionGetFlows(val value: kotlin.String) {
         @Json(name = "action_type") action_type("action_type"),
         @Json(name = "status") status("status"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated"),
         @Json(name = "settings") settings("settings"),
         @Json(name = "tracking_options") tracking_options("tracking_options"),
         @Json(name = "send_options") send_options("send_options"),
         @Json(name = "send_options.use_smart_sending") send_optionsPeriodUse_smart_sending("send_options.use_smart_sending"),
         @Json(name = "send_options.is_transactional") send_optionsPeriodIs_transactional("send_options.is_transactional"),
         @Json(name = "render_options") render_options("render_options"),
         @Json(name = "render_options.shorten_links") render_optionsPeriodShorten_links("render_options.shorten_links"),
         @Json(name = "render_options.add_org_prefix") render_optionsPeriodAdd_org_prefix("render_options.add_org_prefix"),
         @Json(name = "render_options.add_info_link") render_optionsPeriodAdd_info_link("render_options.add_info_link"),
         @Json(name = "render_options.add_opt_out_language") render_optionsPeriodAdd_opt_out_language("render_options.add_opt_out_language");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter fieldsFlow
     */
     enum class FieldsFlowGetFlows(val value: kotlin.String) {
         @Json(name = "name") name("name"),
         @Json(name = "status") status("status"),
         @Json(name = "archived") archived("archived"),
         @Json(name = "created") created("created"),
         @Json(name = "updated") updated("updated"),
         @Json(name = "trigger_type") trigger_type("trigger_type");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter fieldsTag
     */
     enum class FieldsTagGetFlows(val value: kotlin.String) {
         @Json(name = "name") name("name");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter include
     */
     enum class IncludeGetFlows(val value: kotlin.String) {
         @Json(name = "flow-actions") flowMinusActions("flow-actions"),
         @Json(name = "tags") tags("tags");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * enum for parameter sort
     */
     enum class SortGetFlows(val value: kotlin.String) {
         @Json(name = "created") created("created"),
         @Json(name = "-created") MinusCreated("-created"),
         @Json(name = "id") id("id"),
         @Json(name = "-id") MinusId("-id"),
         @Json(name = "name") name("name"),
         @Json(name = "-name") MinusName("-name"),
         @Json(name = "status") status("status"),
         @Json(name = "-status") MinusStatus("-status"),
         @Json(name = "trigger_type") trigger_type("trigger_type"),
         @Json(name = "-trigger_type") MinusTrigger_type("-trigger_type"),
         @Json(name = "updated") updated("updated"),
         @Json(name = "-updated") MinusUpdated("-updated");

        /**
         * Override [toString()] to avoid using the enum variable name as the value, and instead use
         * the actual value defined in the API spec file.
         *
         * This solves a problem when the variable name and its value are different, and ensures that
         * the client sends the correct enum values to the server always.
         */
        override fun toString(): kotlin.String = "$value"
     }

    /**
     * Get Flows
     * Get all flows in an account.  Returns a maximum of 50 flows per request, which can be paginated with cursor-based pagination.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowAction For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsFlow For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;id&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;, &#x60;ends-with&#x60;, &#x60;equals&#x60;, &#x60;starts-with&#x60;&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;archived&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;trigger_type&#x60;: &#x60;equals&#x60; (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param pageSize Default: 50. Min: 1. Max: 50. (optional, default to 50)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return GetFlowResponseCollectionCompoundDocument
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getFlows(revision: kotlin.String = "2024-07-15", fieldsFlowAction: kotlin.collections.List<FieldsFlowActionGetFlows>? = null, fieldsFlow: kotlin.collections.List<FieldsFlowGetFlows>? = null, fieldsTag: kotlin.collections.List<FieldsTagGetFlows>? = null, filter: kotlin.String? = null, include: kotlin.collections.List<IncludeGetFlows>? = null, pageCursor: kotlin.String? = null, pageSize: kotlin.Int? = 50, sort: SortGetFlows? = null) : GetFlowResponseCollectionCompoundDocument {
        val localVarResponse = getFlowsWithHttpInfo(revision = revision, fieldsFlowAction = fieldsFlowAction, fieldsFlow = fieldsFlow, fieldsTag = fieldsTag, filter = filter, include = include, pageCursor = pageCursor, pageSize = pageSize, sort = sort)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as GetFlowResponseCollectionCompoundDocument
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Get Flows
     * Get all flows in an account.  Returns a maximum of 50 flows per request, which can be paginated with cursor-based pagination.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowAction For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsFlow For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;id&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;, &#x60;ends-with&#x60;, &#x60;equals&#x60;, &#x60;starts-with&#x60;&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;archived&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;trigger_type&#x60;: &#x60;equals&#x60; (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param pageSize Default: 50. Min: 1. Max: 50. (optional, default to 50)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return ApiResponse<GetFlowResponseCollectionCompoundDocument?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getFlowsWithHttpInfo(revision: kotlin.String, fieldsFlowAction: kotlin.collections.List<FieldsFlowActionGetFlows>?, fieldsFlow: kotlin.collections.List<FieldsFlowGetFlows>?, fieldsTag: kotlin.collections.List<FieldsTagGetFlows>?, filter: kotlin.String?, include: kotlin.collections.List<IncludeGetFlows>?, pageCursor: kotlin.String?, pageSize: kotlin.Int?, sort: SortGetFlows?) : ApiResponse<GetFlowResponseCollectionCompoundDocument?> {
        val localVariableConfig = getFlowsRequestConfig(revision = revision, fieldsFlowAction = fieldsFlowAction, fieldsFlow = fieldsFlow, fieldsTag = fieldsTag, filter = filter, include = include, pageCursor = pageCursor, pageSize = pageSize, sort = sort)

        return request<Unit, GetFlowResponseCollectionCompoundDocument>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getFlows
     *
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param fieldsFlowAction For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsFlow For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param fieldsTag For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets (optional)
     * @param filter For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering&lt;br&gt;Allowed field(s)/operator(s):&lt;br&gt;&#x60;id&#x60;: &#x60;any&#x60;&lt;br&gt;&#x60;name&#x60;: &#x60;contains&#x60;, &#x60;ends-with&#x60;, &#x60;equals&#x60;, &#x60;starts-with&#x60;&lt;br&gt;&#x60;status&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;archived&#x60;: &#x60;equals&#x60;&lt;br&gt;&#x60;created&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;updated&#x60;: &#x60;equals&#x60;, &#x60;greater-or-equal&#x60;, &#x60;greater-than&#x60;, &#x60;less-or-equal&#x60;, &#x60;less-than&#x60;&lt;br&gt;&#x60;trigger_type&#x60;: &#x60;equals&#x60; (optional)
     * @param include For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#relationships (optional)
     * @param pageCursor For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination (optional)
     * @param pageSize Default: 50. Min: 1. Max: 50. (optional, default to 50)
     * @param sort For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting (optional)
     * @return RequestConfig
     */
    fun getFlowsRequestConfig(revision: kotlin.String, fieldsFlowAction: kotlin.collections.List<FieldsFlowActionGetFlows>?, fieldsFlow: kotlin.collections.List<FieldsFlowGetFlows>?, fieldsTag: kotlin.collections.List<FieldsTagGetFlows>?, filter: kotlin.String?, include: kotlin.collections.List<IncludeGetFlows>?, pageCursor: kotlin.String?, pageSize: kotlin.Int?, sort: SortGetFlows?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                if (fieldsFlowAction != null) {
                    put("fields[flow-action]", toMultiValue(fieldsFlowAction.toList(), "csv"))
                }
                if (fieldsFlow != null) {
                    put("fields[flow]", toMultiValue(fieldsFlow.toList(), "csv"))
                }
                if (fieldsTag != null) {
                    put("fields[tag]", toMultiValue(fieldsTag.toList(), "csv"))
                }
                if (filter != null) {
                    put("filter", listOf(filter.toString()))
                }
                if (include != null) {
                    put("include", toMultiValue(include.toList(), "csv"))
                }
                if (pageCursor != null) {
                    put("page[cursor]", listOf(pageCursor.toString()))
                }
                if (pageSize != null) {
                    put("page[size]", listOf(pageSize.toString()))
                }
                if (sort != null) {
                    put("sort", listOf(sort.value))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/flows/",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }

    /**
     * Update Flow Status
     * Update the status of a flow with the given flow ID, and all actions in that flow.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:write&#x60;
     * @param id ID of the Flow to update. Ex: XVTP5Q
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param flowUpdateQuery 
     * @return PatchFlowResponse
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun updateFlow(id: kotlin.String, revision: kotlin.String = "2024-07-15", flowUpdateQuery: FlowUpdateQuery) : PatchFlowResponse {
        val localVarResponse = updateFlowWithHttpInfo(id = id, revision = revision, flowUpdateQuery = flowUpdateQuery)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as PatchFlowResponse
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * Update Flow Status
     * Update the status of a flow with the given flow ID, and all actions in that flow.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:write&#x60;
     * @param id ID of the Flow to update. Ex: XVTP5Q
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param flowUpdateQuery 
     * @return ApiResponse<PatchFlowResponse?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun updateFlowWithHttpInfo(id: kotlin.String, revision: kotlin.String, flowUpdateQuery: FlowUpdateQuery) : ApiResponse<PatchFlowResponse?> {
        val localVariableConfig = updateFlowRequestConfig(id = id, revision = revision, flowUpdateQuery = flowUpdateQuery)

        return request<FlowUpdateQuery, PatchFlowResponse>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation updateFlow
     *
     * @param id ID of the Flow to update. Ex: XVTP5Q
     * @param revision API endpoint revision (format: YYYY-MM-DD[.suffix]) (default to "2024-07-15")
     * @param flowUpdateQuery 
     * @return RequestConfig
     */
    fun updateFlowRequestConfig(id: kotlin.String, revision: kotlin.String, flowUpdateQuery: FlowUpdateQuery) : RequestConfig<FlowUpdateQuery> {
        val localVariableBody = flowUpdateQuery
        val localVariableQuery: MultiValueMap = mutableMapOf()
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        revision.apply { localVariableHeaders["revision"] = this.toString() }
        localVariableHeaders["Content-Type"] = "application/json"
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.PATCH,
            path = "/api/flows/{id}/".replace("{"+"id"+"}", encodeURIComponent(id.toString())),
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }


    private fun encodeURIComponent(uriComponent: kotlin.String): kotlin.String =
        HttpUrl.Builder().scheme("http").host("localhost").addPathSegment(uriComponent).build().encodedPathSegments[0]
}

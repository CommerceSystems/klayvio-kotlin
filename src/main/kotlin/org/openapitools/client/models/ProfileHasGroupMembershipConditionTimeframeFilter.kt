/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.DateEnum
import org.openapitools.client.models.RelativeDateOperatorBaseFilter
import org.openapitools.client.models.RelativeDateRangeFilter
import org.openapitools.client.models.StaticDateFilter
import org.openapitools.client.models.StaticDateRangeFilter

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param type 
 * @param `operator` Operators for relative date range filters.  e.g. \"between 10 and 20 days ago\"
 * @param date 
 * @param start 
 * @param end 
 * @param unit Units for relative date filters.
 * @param quantity 
 */


data class ProfileHasGroupMembershipConditionTimeframeFilter (

    @Json(name = "type")
    val type: DateEnum,

    /* Operators for relative date range filters.  e.g. \"between 10 and 20 days ago\" */
    @Json(name = "operator")
    val `operator`: ProfileHasGroupMembershipConditionTimeframeFilter.`Operator`,

    @Json(name = "date")
    val date: java.time.OffsetDateTime,

    @Json(name = "start")
    val start: kotlin.Int,

    @Json(name = "end")
    val end: kotlin.Int,

    /* Units for relative date filters. */
    @Json(name = "unit")
    val unit: ProfileHasGroupMembershipConditionTimeframeFilter.Unit,

    @Json(name = "quantity")
    val quantity: kotlin.Int

) {

    /**
     * Operators for relative date range filters.  e.g. \"between 10 and 20 days ago\"
     *
     * Values: between
     */
    @JsonClass(generateAdapter = false)
    enum class `Operator`(val value: kotlin.String) {
        @Json(name = "between") between("between");
    }
    /**
     * Units for relative date filters.
     *
     * Values: day,hour,week
     */
    @JsonClass(generateAdapter = false)
    enum class Unit(val value: kotlin.String) {
        @Json(name = "day") day("day"),
        @Json(name = "hour") hour("hour"),
        @Json(name = "week") week("week");
    }

}


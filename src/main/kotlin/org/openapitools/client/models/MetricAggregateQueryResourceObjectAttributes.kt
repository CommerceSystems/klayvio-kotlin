/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param metricId The metric ID used in the aggregation.
 * @param measurements Measurement key, e.g. `unique`, `sum_value`, `count`
 * @param filter List of filters, must include time range using ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).             These filters follow a similar format to those in `GET` requests, the primary difference is that this endpoint asks for a list.             The time range can be filtered by providing a `greater-or-equal` and a `less-than` filter on the `datetime` field.
 * @param pageCursor Optional pagination cursor to iterate over large result sets
 * @param interval Aggregation interval, e.g. \"hour\", \"day\", \"week\", \"month\"
 * @param pageSize Alter the maximum number of returned rows in a single page of aggregation results
 * @param by Optional attribute(s) used for partitioning by the aggregation function
 * @param returnFields Provide fields to limit the returned data
 * @param timezone The timezone used for processing the query, e.g. `'America/New_York'`.             This field is validated against a list of common timezones from the [IANA Time Zone Database](https://www.iana.org/time-zones).             While most are supported, a few notable exceptions are `Factory`, `Europe/Kyiv` and `Pacific/Kanton`. This field is case-sensitive.
 * @param sort Provide a sort key (e.g. -$message)
 */


data class MetricAggregateQueryResourceObjectAttributes (

    /* The metric ID used in the aggregation. */
    @Json(name = "metric_id")
    val metricId: kotlin.String,

    /* Measurement key, e.g. `unique`, `sum_value`, `count` */
    @Json(name = "measurements")
    val measurements: kotlin.collections.List<MetricAggregateQueryResourceObjectAttributes.Measurements>,

    /* List of filters, must include time range using ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).             These filters follow a similar format to those in `GET` requests, the primary difference is that this endpoint asks for a list.             The time range can be filtered by providing a `greater-or-equal` and a `less-than` filter on the `datetime` field. */
    @Json(name = "filter")
    val filter: kotlin.collections.List<kotlin.String>,

    /* Optional pagination cursor to iterate over large result sets */
    @Json(name = "page_cursor")
    val pageCursor: kotlin.String? = null,

    /* Aggregation interval, e.g. \"hour\", \"day\", \"week\", \"month\" */
    @Json(name = "interval")
    val interval: MetricAggregateQueryResourceObjectAttributes.Interval? = Interval.day,

    /* Alter the maximum number of returned rows in a single page of aggregation results */
    @Json(name = "page_size")
    val pageSize: kotlin.Int? = 500,

    /* Optional attribute(s) used for partitioning by the aggregation function */
    @Json(name = "by")
    val by: kotlin.collections.List<MetricAggregateQueryResourceObjectAttributes.By>? = null,

    /* Provide fields to limit the returned data */
    @Json(name = "return_fields")
    val returnFields: kotlin.collections.List<kotlin.String>? = null,

    /* The timezone used for processing the query, e.g. `'America/New_York'`.             This field is validated against a list of common timezones from the [IANA Time Zone Database](https://www.iana.org/time-zones).             While most are supported, a few notable exceptions are `Factory`, `Europe/Kyiv` and `Pacific/Kanton`. This field is case-sensitive. */
    @Json(name = "timezone")
    val timezone: kotlin.String? = "UTC",

    /* Provide a sort key (e.g. -$message) */
    @Json(name = "sort")
    val sort: MetricAggregateQueryResourceObjectAttributes.Sort? = null

) {

    /**
     * Measurement key, e.g. `unique`, `sum_value`, `count`
     *
     * Values: count,sum_value,unique
     */
    @JsonClass(generateAdapter = false)
    enum class Measurements(val value: kotlin.String) {
        @Json(name = "count") count("count"),
        @Json(name = "sum_value") sum_value("sum_value"),
        @Json(name = "unique") unique("unique");
    }
    /**
     * Aggregation interval, e.g. \"hour\", \"day\", \"week\", \"month\"
     *
     * Values: day,hour,month,week
     */
    @JsonClass(generateAdapter = false)
    enum class Interval(val value: kotlin.String) {
        @Json(name = "day") day("day"),
        @Json(name = "hour") hour("hour"),
        @Json(name = "month") month("month"),
        @Json(name = "week") week("week");
    }
    /**
     * Optional attribute(s) used for partitioning by the aggregation function
     *
     * Values: DollarAttributed_channel,DollarAttributed_flow,DollarAttributed_message,DollarAttributed_variation,DollarCampaign_channel,DollarFlow,DollarFlow_channel,DollarMessage,DollarMessage_send_cohort,DollarVariation,DollarVariation_send_cohort,Bot_Click,Bounce_Type,Campaign_Name,Client_Canonical,Client_Name,Client_Type,Email_Domain,Failure_Source,Failure_Type,From_Number,From_Phone_Region,Inbox_Provider,List,Message_Name,Message_Type,Method,Subject,To_Number,To_Phone_Region,URL,form_id
     */
    @JsonClass(generateAdapter = false)
    enum class By(val value: kotlin.String) {
        @Json(name = "$attributed_channel") DollarAttributed_channel("$attributed_channel"),
        @Json(name = "$attributed_flow") DollarAttributed_flow("$attributed_flow"),
        @Json(name = "$attributed_message") DollarAttributed_message("$attributed_message"),
        @Json(name = "$attributed_variation") DollarAttributed_variation("$attributed_variation"),
        @Json(name = "$campaign_channel") DollarCampaign_channel("$campaign_channel"),
        @Json(name = "$flow") DollarFlow("$flow"),
        @Json(name = "$flow_channel") DollarFlow_channel("$flow_channel"),
        @Json(name = "$message") DollarMessage("$message"),
        @Json(name = "$message_send_cohort") DollarMessage_send_cohort("$message_send_cohort"),
        @Json(name = "$variation") DollarVariation("$variation"),
        @Json(name = "$variation_send_cohort") DollarVariation_send_cohort("$variation_send_cohort"),
        @Json(name = "Bot Click") Bot_Click("Bot Click"),
        @Json(name = "Bounce Type") Bounce_Type("Bounce Type"),
        @Json(name = "Campaign Name") Campaign_Name("Campaign Name"),
        @Json(name = "Client Canonical") Client_Canonical("Client Canonical"),
        @Json(name = "Client Name") Client_Name("Client Name"),
        @Json(name = "Client Type") Client_Type("Client Type"),
        @Json(name = "Email Domain") Email_Domain("Email Domain"),
        @Json(name = "Failure Source") Failure_Source("Failure Source"),
        @Json(name = "Failure Type") Failure_Type("Failure Type"),
        @Json(name = "From Number") From_Number("From Number"),
        @Json(name = "From Phone Region") From_Phone_Region("From Phone Region"),
        @Json(name = "Inbox Provider") Inbox_Provider("Inbox Provider"),
        @Json(name = "List") List("List"),
        @Json(name = "Message Name") Message_Name("Message Name"),
        @Json(name = "Message Type") Message_Type("Message Type"),
        @Json(name = "Method") Method("Method"),
        @Json(name = "Subject") Subject("Subject"),
        @Json(name = "To Number") To_Number("To Number"),
        @Json(name = "To Phone Region") To_Phone_Region("To Phone Region"),
        @Json(name = "URL") URL("URL"),
        @Json(name = "form_id") form_id("form_id");
    }
    /**
     * Provide a sort key (e.g. -$message)
     *
     * Values: DollarAttributed_channel,MinusDollarAttributed_channel,DollarAttributed_flow,MinusDollarAttributed_flow,DollarAttributed_message,MinusDollarAttributed_message,DollarAttributed_variation,MinusDollarAttributed_variation,DollarCampaign_channel,MinusDollarCampaign_channel,DollarFlow,MinusDollarFlow,DollarFlow_channel,MinusDollarFlow_channel,DollarMessage,MinusDollarMessage,DollarMessage_send_cohort,MinusDollarMessage_send_cohort,DollarVariation,MinusDollarVariation,DollarVariation_send_cohort,MinusDollarVariation_send_cohort,Bot_Click,MinusBot_Click,Bounce_Type,MinusBounce_Type,Campaign_Name,MinusCampaign_Name,Client_Canonical,MinusClient_Canonical,Client_Name,MinusClient_Name,Client_Type,MinusClient_Type,Email_Domain,MinusEmail_Domain,Failure_Source,MinusFailure_Source,Failure_Type,MinusFailure_Type,From_Number,MinusFrom_Number,From_Phone_Region,MinusFrom_Phone_Region,Inbox_Provider,MinusInbox_Provider,List,MinusList,Message_Name,MinusMessage_Name,Message_Type,MinusMessage_Type,Method,MinusMethod,Subject,MinusSubject,To_Number,MinusTo_Number,To_Phone_Region,MinusTo_Phone_Region,URL,MinusURL,count,MinusCount,form_id,MinusForm_id,sum_value,MinusSum_value,unique,MinusUnique
     */
    @JsonClass(generateAdapter = false)
    enum class Sort(val value: kotlin.String) {
        @Json(name = "$attributed_channel") DollarAttributed_channel("$attributed_channel"),
        @Json(name = "-$attributed_channel") MinusDollarAttributed_channel("-$attributed_channel"),
        @Json(name = "$attributed_flow") DollarAttributed_flow("$attributed_flow"),
        @Json(name = "-$attributed_flow") MinusDollarAttributed_flow("-$attributed_flow"),
        @Json(name = "$attributed_message") DollarAttributed_message("$attributed_message"),
        @Json(name = "-$attributed_message") MinusDollarAttributed_message("-$attributed_message"),
        @Json(name = "$attributed_variation") DollarAttributed_variation("$attributed_variation"),
        @Json(name = "-$attributed_variation") MinusDollarAttributed_variation("-$attributed_variation"),
        @Json(name = "$campaign_channel") DollarCampaign_channel("$campaign_channel"),
        @Json(name = "-$campaign_channel") MinusDollarCampaign_channel("-$campaign_channel"),
        @Json(name = "$flow") DollarFlow("$flow"),
        @Json(name = "-$flow") MinusDollarFlow("-$flow"),
        @Json(name = "$flow_channel") DollarFlow_channel("$flow_channel"),
        @Json(name = "-$flow_channel") MinusDollarFlow_channel("-$flow_channel"),
        @Json(name = "$message") DollarMessage("$message"),
        @Json(name = "-$message") MinusDollarMessage("-$message"),
        @Json(name = "$message_send_cohort") DollarMessage_send_cohort("$message_send_cohort"),
        @Json(name = "-$message_send_cohort") MinusDollarMessage_send_cohort("-$message_send_cohort"),
        @Json(name = "$variation") DollarVariation("$variation"),
        @Json(name = "-$variation") MinusDollarVariation("-$variation"),
        @Json(name = "$variation_send_cohort") DollarVariation_send_cohort("$variation_send_cohort"),
        @Json(name = "-$variation_send_cohort") MinusDollarVariation_send_cohort("-$variation_send_cohort"),
        @Json(name = "Bot Click") Bot_Click("Bot Click"),
        @Json(name = "-Bot Click") MinusBot_Click("-Bot Click"),
        @Json(name = "Bounce Type") Bounce_Type("Bounce Type"),
        @Json(name = "-Bounce Type") MinusBounce_Type("-Bounce Type"),
        @Json(name = "Campaign Name") Campaign_Name("Campaign Name"),
        @Json(name = "-Campaign Name") MinusCampaign_Name("-Campaign Name"),
        @Json(name = "Client Canonical") Client_Canonical("Client Canonical"),
        @Json(name = "-Client Canonical") MinusClient_Canonical("-Client Canonical"),
        @Json(name = "Client Name") Client_Name("Client Name"),
        @Json(name = "-Client Name") MinusClient_Name("-Client Name"),
        @Json(name = "Client Type") Client_Type("Client Type"),
        @Json(name = "-Client Type") MinusClient_Type("-Client Type"),
        @Json(name = "Email Domain") Email_Domain("Email Domain"),
        @Json(name = "-Email Domain") MinusEmail_Domain("-Email Domain"),
        @Json(name = "Failure Source") Failure_Source("Failure Source"),
        @Json(name = "-Failure Source") MinusFailure_Source("-Failure Source"),
        @Json(name = "Failure Type") Failure_Type("Failure Type"),
        @Json(name = "-Failure Type") MinusFailure_Type("-Failure Type"),
        @Json(name = "From Number") From_Number("From Number"),
        @Json(name = "-From Number") MinusFrom_Number("-From Number"),
        @Json(name = "From Phone Region") From_Phone_Region("From Phone Region"),
        @Json(name = "-From Phone Region") MinusFrom_Phone_Region("-From Phone Region"),
        @Json(name = "Inbox Provider") Inbox_Provider("Inbox Provider"),
        @Json(name = "-Inbox Provider") MinusInbox_Provider("-Inbox Provider"),
        @Json(name = "List") List("List"),
        @Json(name = "-List") MinusList("-List"),
        @Json(name = "Message Name") Message_Name("Message Name"),
        @Json(name = "-Message Name") MinusMessage_Name("-Message Name"),
        @Json(name = "Message Type") Message_Type("Message Type"),
        @Json(name = "-Message Type") MinusMessage_Type("-Message Type"),
        @Json(name = "Method") Method("Method"),
        @Json(name = "-Method") MinusMethod("-Method"),
        @Json(name = "Subject") Subject("Subject"),
        @Json(name = "-Subject") MinusSubject("-Subject"),
        @Json(name = "To Number") To_Number("To Number"),
        @Json(name = "-To Number") MinusTo_Number("-To Number"),
        @Json(name = "To Phone Region") To_Phone_Region("To Phone Region"),
        @Json(name = "-To Phone Region") MinusTo_Phone_Region("-To Phone Region"),
        @Json(name = "URL") URL("URL"),
        @Json(name = "-URL") MinusURL("-URL"),
        @Json(name = "count") count("count"),
        @Json(name = "-count") MinusCount("-count"),
        @Json(name = "form_id") form_id("form_id"),
        @Json(name = "-form_id") MinusForm_id("-form_id"),
        @Json(name = "sum_value") sum_value("sum_value"),
        @Json(name = "-sum_value") MinusSum_value("-sum_value"),
        @Json(name = "unique") unique("unique"),
        @Json(name = "-unique") MinusUnique("-unique");
    }

}


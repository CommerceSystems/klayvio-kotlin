/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.APIJobErrorPayload

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param status Status of the asynchronous job.
 * @param createdAt The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).
 * @param totalCount The total number of operations to be processed by the job. See `completed_count` for the job's current progress.
 * @param completedCount The total number of operations that have been completed by the job.
 * @param failedCount The total number of operations that have failed as part of the job.
 * @param completedAt Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).
 * @param errors Array of errors encountered during the processing of the job.
 * @param expiresAt Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).
 */


data class CouponCodeCreateJobResponseObjectResourceAttributes (

    /* Status of the asynchronous job. */
    @Json(name = "status")
    val status: CouponCodeCreateJobResponseObjectResourceAttributes.Status,

    /* The date and time the job was created in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm). */
    @Json(name = "created_at")
    val createdAt: java.time.OffsetDateTime,

    /* The total number of operations to be processed by the job. See `completed_count` for the job's current progress. */
    @Json(name = "total_count")
    val totalCount: kotlin.Int,

    /* The total number of operations that have been completed by the job. */
    @Json(name = "completed_count")
    val completedCount: kotlin.Int? = 0,

    /* The total number of operations that have failed as part of the job. */
    @Json(name = "failed_count")
    val failedCount: kotlin.Int? = 0,

    /* Date and time the job was completed in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm). */
    @Json(name = "completed_at")
    val completedAt: java.time.OffsetDateTime? = null,

    /* Array of errors encountered during the processing of the job. */
    @Json(name = "errors")
    val errors: kotlin.collections.List<APIJobErrorPayload>? = null,

    /* Date and time the job expires in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm). */
    @Json(name = "expires_at")
    val expiresAt: java.time.OffsetDateTime? = null

) {

    /**
     * Status of the asynchronous job.
     *
     * Values: cancelled,complete,processing,queued
     */
    @JsonClass(generateAdapter = false)
    enum class Status(val value: kotlin.String) {
        @Json(name = "cancelled") cancelled("cancelled"),
        @Json(name = "complete") complete("complete"),
        @Json(name = "processing") processing("processing"),
        @Json(name = "queued") queued("queued");
    }

}


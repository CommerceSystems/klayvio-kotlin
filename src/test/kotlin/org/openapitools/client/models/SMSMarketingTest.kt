/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.SMSMarketing

class SMSMarketingTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SMSMarketing
        //val modelInstance = SMSMarketing()

        // to test the property `canReceiveSmsMarketing` - Whether or not this profile is subscribed to receive SMS marketing.
        should("test canReceiveSmsMarketing") {
            // uncomment below to test the property
            //modelInstance.canReceiveSmsMarketing shouldBe ("TODO")
        }

        // to test the property `consent` - The consent status for SMS marketing.
        should("test consent") {
            // uncomment below to test the property
            //modelInstance.consent shouldBe ("TODO")
        }

        // to test the property `consentTimestamp` - The timestamp when consent was recorded or updated for SMS marketing, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).
        should("test consentTimestamp") {
            // uncomment below to test the property
            //modelInstance.consentTimestamp shouldBe ("TODO")
        }

        // to test the property `method` - The method by which the profile was subscribed to SMS marketing.
        should("test method") {
            // uncomment below to test the property
            //modelInstance.method shouldBe ("TODO")
        }

        // to test the property `methodDetail` - Additional details about the method which the profile was subscribed to SMS marketing. This may be empty if no details were provided.
        should("test methodDetail") {
            // uncomment below to test the property
            //modelInstance.methodDetail shouldBe ("TODO")
        }

        // to test the property `lastUpdated` - The timestamp when the SMS consent record was last modified, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).
        should("test lastUpdated") {
            // uncomment below to test the property
            //modelInstance.lastUpdated shouldBe ("TODO")
        }

    }
}

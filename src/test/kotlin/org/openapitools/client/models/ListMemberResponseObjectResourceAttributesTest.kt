/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.ListMemberResponseObjectResourceAttributes
import org.openapitools.client.models.ProfileLocation

class ListMemberResponseObjectResourceAttributesTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ListMemberResponseObjectResourceAttributes
        //val modelInstance = ListMemberResponseObjectResourceAttributes()

        // to test the property `joinedGroupAt` - The datetime when this profile most recently joined the list.
        should("test joinedGroupAt") {
            // uncomment below to test the property
            //modelInstance.joinedGroupAt shouldBe ("TODO")
        }

        // to test the property `email` - Individual's email address
        should("test email") {
            // uncomment below to test the property
            //modelInstance.email shouldBe ("TODO")
        }

        // to test the property `phoneNumber` - Individual's phone number in E.164 format
        should("test phoneNumber") {
            // uncomment below to test the property
            //modelInstance.phoneNumber shouldBe ("TODO")
        }

        // to test the property `externalId` - A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.
        should("test externalId") {
            // uncomment below to test the property
            //modelInstance.externalId shouldBe ("TODO")
        }

        // to test the property `firstName` - Individual's first name
        should("test firstName") {
            // uncomment below to test the property
            //modelInstance.firstName shouldBe ("TODO")
        }

        // to test the property `lastName` - Individual's last name
        should("test lastName") {
            // uncomment below to test the property
            //modelInstance.lastName shouldBe ("TODO")
        }

        // to test the property `organization` - Name of the company or organization within the company for whom the individual works
        should("test organization") {
            // uncomment below to test the property
            //modelInstance.organization shouldBe ("TODO")
        }

        // to test the property `locale` - The locale of the profile, in the IETF BCP 47 language tag format (language-extlang-script-region-variant-extension-privateuse)
        should("test locale") {
            // uncomment below to test the property
            //modelInstance.locale shouldBe ("TODO")
        }

        // to test the property `title` - Individual's job title
        should("test title") {
            // uncomment below to test the property
            //modelInstance.title shouldBe ("TODO")
        }

        // to test the property `image` - URL pointing to the location of a profile image
        should("test image") {
            // uncomment below to test the property
            //modelInstance.image shouldBe ("TODO")
        }

        // to test the property `created` - Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
        should("test created") {
            // uncomment below to test the property
            //modelInstance.created shouldBe ("TODO")
        }

        // to test the property `updated` - Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
        should("test updated") {
            // uncomment below to test the property
            //modelInstance.updated shouldBe ("TODO")
        }

        // to test the property `lastEventDate` - Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
        should("test lastEventDate") {
            // uncomment below to test the property
            //modelInstance.lastEventDate shouldBe ("TODO")
        }

        // to test the property `location`
        should("test location") {
            // uncomment below to test the property
            //modelInstance.location shouldBe ("TODO")
        }

        // to test the property `properties` - An object containing key/value pairs for any custom properties assigned to this profile
        should("test properties") {
            // uncomment below to test the property
            //modelInstance.properties shouldBe ("TODO")
        }

    }
}

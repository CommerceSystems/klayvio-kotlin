/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.PredictiveAnalytics

class PredictiveAnalyticsTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of PredictiveAnalytics
        //val modelInstance = PredictiveAnalytics()

        // to test the property `historicClv` - Total value of all historically placed orders
        should("test historicClv") {
            // uncomment below to test the property
            //modelInstance.historicClv shouldBe ("TODO")
        }

        // to test the property `predictedClv` - Predicted value of all placed orders in the next 365 days
        should("test predictedClv") {
            // uncomment below to test the property
            //modelInstance.predictedClv shouldBe ("TODO")
        }

        // to test the property `totalClv` - Sum of historic and predicted CLV
        should("test totalClv") {
            // uncomment below to test the property
            //modelInstance.totalClv shouldBe ("TODO")
        }

        // to test the property `historicNumberOfOrders` - Number of already placed orders
        should("test historicNumberOfOrders") {
            // uncomment below to test the property
            //modelInstance.historicNumberOfOrders shouldBe ("TODO")
        }

        // to test the property `predictedNumberOfOrders` - Predicted number of placed orders in the next 365 days
        should("test predictedNumberOfOrders") {
            // uncomment below to test the property
            //modelInstance.predictedNumberOfOrders shouldBe ("TODO")
        }

        // to test the property `averageDaysBetweenOrders` - Average number of days between orders (None if only one order has been placed)
        should("test averageDaysBetweenOrders") {
            // uncomment below to test the property
            //modelInstance.averageDaysBetweenOrders shouldBe ("TODO")
        }

        // to test the property `averageOrderValue` - Average value of placed orders
        should("test averageOrderValue") {
            // uncomment below to test the property
            //modelInstance.averageOrderValue shouldBe ("TODO")
        }

        // to test the property `churnProbability` - Probability the customer has churned
        should("test churnProbability") {
            // uncomment below to test the property
            //modelInstance.churnProbability shouldBe ("TODO")
        }

        // to test the property `expectedDateOfNextOrder` - Expected date of next order, as calculated at the time of their most recent order
        should("test expectedDateOfNextOrder") {
            // uncomment below to test the property
            //modelInstance.expectedDateOfNextOrder shouldBe ("TODO")
        }

    }
}

/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.ProfilePropertyConditionFilter
import org.openapitools.client.models.AnniversaryDateFilter
import org.openapitools.client.models.BooleanFilter
import org.openapitools.client.models.CalendarDateFilter
import org.openapitools.client.models.ExistenceEnum
import org.openapitools.client.models.ExistenceOperatorFilter
import org.openapitools.client.models.ListContainsOperatorFilter
import org.openapitools.client.models.ListLengthFilter
import org.openapitools.client.models.NumericOperatorFilter
import org.openapitools.client.models.RelativeAnniversaryDateFilter
import org.openapitools.client.models.RelativeDateOperatorBaseFilter
import org.openapitools.client.models.RelativeDateRangeFilter
import org.openapitools.client.models.StaticDateFilter
import org.openapitools.client.models.StaticDateRangeFilter
import org.openapitools.client.models.StringArrayOperatorFilter
import org.openapitools.client.models.StringOperatorFilter
import org.openapitools.client.models.StringPhoneOperatorArrayFilter

class ProfilePropertyConditionFilterTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ProfilePropertyConditionFilter
        //val modelInstance = ProfilePropertyConditionFilter()

        // to test the property `type`
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property ``operator`` - Operators for existence filters.
        should("test `operator`") {
            // uncomment below to test the property
            //modelInstance.`operator` shouldBe ("TODO")
        }

        // to test the property ``value``
        should("test `value`") {
            // uncomment below to test the property
            //modelInstance.`value` shouldBe ("TODO")
        }

        // to test the property `date`
        should("test date") {
            // uncomment below to test the property
            //modelInstance.date shouldBe ("TODO")
        }

        // to test the property `start`
        should("test start") {
            // uncomment below to test the property
            //modelInstance.start shouldBe ("TODO")
        }

        // to test the property `end`
        should("test end") {
            // uncomment below to test the property
            //modelInstance.end shouldBe ("TODO")
        }

        // to test the property `unit` - Units for relative date filters.
        should("test unit") {
            // uncomment below to test the property
            //modelInstance.unit shouldBe ("TODO")
        }

        // to test the property `quantity`
        should("test quantity") {
            // uncomment below to test the property
            //modelInstance.quantity shouldBe ("TODO")
        }

    }
}

/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.models.CatalogVariantCreateQueryResourceObjectAttributes

class CatalogVariantCreateQueryResourceObjectAttributesTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CatalogVariantCreateQueryResourceObjectAttributes
        //val modelInstance = CatalogVariantCreateQueryResourceObjectAttributes()

        // to test the property `externalId` - The ID of the catalog item variant in an external system.
        should("test externalId") {
            // uncomment below to test the property
            //modelInstance.externalId shouldBe ("TODO")
        }

        // to test the property `title` - The title of the catalog item variant.
        should("test title") {
            // uncomment below to test the property
            //modelInstance.title shouldBe ("TODO")
        }

        // to test the property `description` - A description of the catalog item variant.
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `sku` - The SKU of the catalog item variant.
        should("test sku") {
            // uncomment below to test the property
            //modelInstance.sku shouldBe ("TODO")
        }

        // to test the property `inventoryQuantity` - The quantity of the catalog item variant currently in stock.
        should("test inventoryQuantity") {
            // uncomment below to test the property
            //modelInstance.inventoryQuantity shouldBe ("TODO")
        }

        // to test the property `price` - This field can be used to set the price on the catalog item variant, which is what gets displayed for the item variant when included in emails. For most price-update use cases, you will also want to update the `price` on any parent items using the [Update Catalog Item Endpoint](https://developers.klaviyo.com/en/reference/update_catalog_item).
        should("test price") {
            // uncomment below to test the property
            //modelInstance.price shouldBe ("TODO")
        }

        // to test the property `url` - URL pointing to the location of the catalog item variant on your website.
        should("test url") {
            // uncomment below to test the property
            //modelInstance.url shouldBe ("TODO")
        }

        // to test the property `catalogType` - The type of catalog. Currently only \"$default\" is supported.
        should("test catalogType") {
            // uncomment below to test the property
            //modelInstance.catalogType shouldBe ("TODO")
        }

        // to test the property `integrationType` - The integration type. Currently only \"$custom\" is supported.
        should("test integrationType") {
            // uncomment below to test the property
            //modelInstance.integrationType shouldBe ("TODO")
        }

        // to test the property `inventoryPolicy` - This field controls the visibility of this catalog item variant in product feeds/blocks. This field supports the following values: `1`: a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock. `0` or `2`: a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.
        should("test inventoryPolicy") {
            // uncomment below to test the property
            //modelInstance.inventoryPolicy shouldBe ("TODO")
        }

        // to test the property `imageFullUrl` - URL pointing to the location of a full image of the catalog item variant.
        should("test imageFullUrl") {
            // uncomment below to test the property
            //modelInstance.imageFullUrl shouldBe ("TODO")
        }

        // to test the property `imageThumbnailUrl` - URL pointing to the location of an image thumbnail of the catalog item variant.
        should("test imageThumbnailUrl") {
            // uncomment below to test the property
            //modelInstance.imageThumbnailUrl shouldBe ("TODO")
        }

        // to test the property `images` - List of URLs pointing to the locations of images of the catalog item variant.
        should("test images") {
            // uncomment below to test the property
            //modelInstance.images shouldBe ("TODO")
        }

        // to test the property `customMetadata` - Flat JSON blob to provide custom metadata about the catalog item variant. May not exceed 100kb.
        should("test customMetadata") {
            // uncomment below to test the property
            //modelInstance.customMetadata shouldBe ("TODO")
        }

        // to test the property `published` - Boolean value indicating whether the catalog item variant is published.
        should("test published") {
            // uncomment below to test the property
            //modelInstance.published shouldBe ("TODO")
        }

    }
}

/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.ImagesApi
import org.openapitools.client.models.GetAccounts4XXResponse
import org.openapitools.client.models.GetImageResponse
import org.openapitools.client.models.GetImageResponseCollection
import org.openapitools.client.models.ImageCreateQuery
import org.openapitools.client.models.ImagePartialUpdateQuery
import org.openapitools.client.models.PatchImageResponse
import org.openapitools.client.models.PostImageResponse

class ImagesApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ImagesApi
        //val apiInstance = ImagesApi()

        // to test getImage
        should("test getImage") {
            // uncomment below to test getImage
            //val id : kotlin.String = 7 // kotlin.String | The ID of the image
            //val revision : kotlin.String = revision_example // kotlin.String | API endpoint revision (format: YYYY-MM-DD[.suffix])
            //val fieldsImage : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets
            //val result : GetImageResponse = apiInstance.getImage(id, revision, fieldsImage)
            //result shouldBe ("TODO")
        }

        // to test getImages
        should("test getImages") {
            // uncomment below to test getImages
            //val revision : kotlin.String = revision_example // kotlin.String | API endpoint revision (format: YYYY-MM-DD[.suffix])
            //val fieldsImage : kotlin.collections.List<kotlin.String> =  // kotlin.collections.List<kotlin.String> | For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sparse-fieldsets
            //val filter : kotlin.String = filter_example // kotlin.String | For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`id`: `any`, `equals`<br>`updated_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`format`: `any`, `equals`<br>`name`: `any`, `contains`, `ends-with`, `equals`, `starts-with`<br>`size`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`hidden`: `any`, `equals`
            //val pageCursor : kotlin.String = pageCursor_example // kotlin.String | For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#pagination
            //val pageSize : kotlin.Int = 56 // kotlin.Int | Default: 20. Min: 1. Max: 100.
            //val sort : kotlin.String = sort_example // kotlin.String | For more information please visit https://developers.klaviyo.com/en/v2024-07-15/reference/api-overview#sorting
            //val result : GetImageResponseCollection = apiInstance.getImages(revision, fieldsImage, filter, pageCursor, pageSize, sort)
            //result shouldBe ("TODO")
        }

        // to test updateImage
        should("test updateImage") {
            // uncomment below to test updateImage
            //val id : kotlin.String = 7 // kotlin.String | The ID of the image
            //val revision : kotlin.String = revision_example // kotlin.String | API endpoint revision (format: YYYY-MM-DD[.suffix])
            //val imagePartialUpdateQuery : ImagePartialUpdateQuery =  // ImagePartialUpdateQuery | 
            //val result : PatchImageResponse = apiInstance.updateImage(id, revision, imagePartialUpdateQuery)
            //result shouldBe ("TODO")
        }

        // to test uploadImageFromFile
        should("test uploadImageFromFile") {
            // uncomment below to test uploadImageFromFile
            //val revision : kotlin.String = revision_example // kotlin.String | API endpoint revision (format: YYYY-MM-DD[.suffix])
            //val file : java.io.File = BINARY_DATA_HERE // java.io.File | The image file to upload. Supported image formats: jpeg,png,gif. Maximum image size: 5MB.
            //val name : kotlin.String = name_example // kotlin.String | A name for the image.  Defaults to the filename if not provided.  If the name matches an existing image, a suffix will be added.
            //val hidden : kotlin.Boolean = true // kotlin.Boolean | If true, this image is not shown in the asset library.
            //val result : PostImageResponse = apiInstance.uploadImageFromFile(revision, file, name, hidden)
            //result shouldBe ("TODO")
        }

        // to test uploadImageFromUrl
        should("test uploadImageFromUrl") {
            // uncomment below to test uploadImageFromUrl
            //val revision : kotlin.String = revision_example // kotlin.String | API endpoint revision (format: YYYY-MM-DD[.suffix])
            //val imageCreateQuery : ImageCreateQuery =  // ImageCreateQuery | 
            //val result : PostImageResponse = apiInstance.uploadImageFromUrl(revision, imageCreateQuery)
            //result shouldBe ("TODO")
        }

    }
}

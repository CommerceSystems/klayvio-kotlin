/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.FlowUpdateQuery;
import io.swagger.client.model.GetFlowActionFlowMessageRelationshipResponseCollection;
import io.swagger.client.model.GetFlowActionFlowRelationshipResponse;
import io.swagger.client.model.GetFlowActionResponse;
import io.swagger.client.model.GetFlowActionResponseCollection;
import io.swagger.client.model.GetFlowActionResponseCompoundDocument;
import io.swagger.client.model.GetFlowFlowActionRelationshipListResponseCollection;
import io.swagger.client.model.GetFlowMessageFlowActionRelationshipResponse;
import io.swagger.client.model.GetFlowMessageResponseCollection;
import io.swagger.client.model.GetFlowMessageResponseCompoundDocument;
import io.swagger.client.model.GetFlowMessageTemplateRelationshipResponse;
import io.swagger.client.model.GetFlowResponse;
import io.swagger.client.model.GetFlowResponseCollectionCompoundDocument;
import io.swagger.client.model.GetFlowResponseCompoundDocument;
import io.swagger.client.model.GetFlowTagRelationshipListResponseCollection;
import io.swagger.client.model.GetTagResponseCollection;
import io.swagger.client.model.GetTemplateResponse;
import io.swagger.client.model.InlineResponse4XX;
import io.swagger.client.model.PatchFlowResponse;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for FlowsApi
 */
@Ignore
public class FlowsApiTest {

    private final FlowsApi api = new FlowsApi();

    /**
     * Delete Flow
     *
     * Delete a flow with the given flow ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:write&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteFlowTest() throws Exception {
        String id = null;
        String revision = null;
        api.deleteFlow(id, revision);

        // TODO: test validations
    }
    /**
     * Get Flow
     *
     * Get a flow with the given flow ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFlowTest() throws Exception {
        String id = null;
        String revision = null;
        List<String> fieldsFlowAction = null;
        List<String> fieldsFlow = null;
        List<String> fieldsTag = null;
        List<String> include = null;
        GetFlowResponseCompoundDocument response = api.getFlow(id, revision, fieldsFlowAction, fieldsFlow, fieldsTag, include);

        // TODO: test validations
    }
    /**
     * Get Flow Action
     *
     * Get a flow action from a flow with the given flow action ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFlowActionTest() throws Exception {
        String id = null;
        String revision = null;
        List<String> fieldsFlowAction = null;
        List<String> fieldsFlowMessage = null;
        List<String> fieldsFlow = null;
        List<String> include = null;
        GetFlowActionResponseCompoundDocument response = api.getFlowAction(id, revision, fieldsFlowAction, fieldsFlowMessage, fieldsFlow, include);

        // TODO: test validations
    }
    /**
     * Get Flow For Flow Action
     *
     * Get the flow associated with the given action ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFlowActionFlowTest() throws Exception {
        String id = null;
        String revision = null;
        List<String> fieldsFlow = null;
        GetFlowResponse response = api.getFlowActionFlow(id, revision, fieldsFlow);

        // TODO: test validations
    }
    /**
     * Get Flow Action Messages
     *
     * Get all flow messages associated with the given action ID.  Flow messages can be sorted by the following fields, in ascending and descending order:  ascending: &#x60;id&#x60;,  &#x60;name&#x60;, &#x60;created&#x60;, &#x60;updated&#x60; descending: &#x60;-id&#x60;,  &#x60;-name&#x60;, &#x60;-created&#x60;, &#x60;-updated&#x60;  Returns a maximum of 50 flows per request, which can be paginated with offset pagination. Offset pagination uses the following parameters: &#x60;page[size]&#x60; and &#x60;page[number]&#x60;&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFlowActionMessagesTest() throws Exception {
        String id = null;
        String revision = null;
        List<String> fieldsFlowMessage = null;
        String filter = null;
        Integer pageSize = null;
        String sort = null;
        GetFlowMessageResponseCollection response = api.getFlowActionMessages(id, revision, fieldsFlowMessage, filter, pageSize, sort);

        // TODO: test validations
    }
    /**
     * Get Flow Action Relationships Flow
     *
     * Get the flow associated with the given action ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFlowActionRelationshipsFlowTest() throws Exception {
        String id = null;
        String revision = null;
        GetFlowActionFlowRelationshipResponse response = api.getFlowActionRelationshipsFlow(id, revision);

        // TODO: test validations
    }
    /**
     * Get Flow Action Relationships Messages
     *
     * Get all relationships for flow messages associated with the given flow action ID.  Returns a maximum of 50 flow message relationships per request, which can be paginated with cursor-based pagination.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFlowActionRelationshipsMessagesTest() throws Exception {
        String id = null;
        String revision = null;
        String filter = null;
        String pageCursor = null;
        Integer pageSize = null;
        String sort = null;
        GetFlowActionFlowMessageRelationshipResponseCollection response = api.getFlowActionRelationshipsMessages(id, revision, filter, pageCursor, pageSize, sort);

        // TODO: test validations
    }
    /**
     * Get Flow Flow Actions
     *
     * Get all flow actions associated with the given flow ID.  Returns a maximum of 50 flows per request, which can be paginated with cursor-based pagination.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFlowFlowActionsTest() throws Exception {
        String id = null;
        String revision = null;
        List<String> fieldsFlowAction = null;
        String filter = null;
        String pageCursor = null;
        Integer pageSize = null;
        String sort = null;
        GetFlowActionResponseCollection response = api.getFlowFlowActions(id, revision, fieldsFlowAction, filter, pageCursor, pageSize, sort);

        // TODO: test validations
    }
    /**
     * Get Flow Message
     *
     * Get the flow message of a flow with the given message ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFlowMessageTest() throws Exception {
        String id = null;
        String revision = null;
        List<String> fieldsFlowAction = null;
        List<String> fieldsFlowMessage = null;
        List<String> fieldsTemplate = null;
        List<String> include = null;
        GetFlowMessageResponseCompoundDocument response = api.getFlowMessage(id, revision, fieldsFlowAction, fieldsFlowMessage, fieldsTemplate, include);

        // TODO: test validations
    }
    /**
     * Get Flow Action For Message
     *
     * Get the flow action for a flow message with the given message ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFlowMessageActionTest() throws Exception {
        String id = null;
        String revision = null;
        List<String> fieldsFlowAction = null;
        GetFlowActionResponse response = api.getFlowMessageAction(id, revision, fieldsFlowAction);

        // TODO: test validations
    }
    /**
     * Get Flow Message Relationships Action
     *
     * Get the [relationship](https://developers.klaviyo.com/en/reference/api_overview#relationships) for a flow message&#x27;s flow action, given the flow ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFlowMessageRelationshipsActionTest() throws Exception {
        String id = null;
        String revision = null;
        GetFlowMessageFlowActionRelationshipResponse response = api.getFlowMessageRelationshipsAction(id, revision);

        // TODO: test validations
    }
    /**
     * Get Flow Message Relationships Template
     *
     * Returns the ID of the related template&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;templates:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFlowMessageRelationshipsTemplateTest() throws Exception {
        String id = null;
        String revision = null;
        GetFlowMessageTemplateRelationshipResponse response = api.getFlowMessageRelationshipsTemplate(id, revision);

        // TODO: test validations
    }
    /**
     * Get Flow Message Template
     *
     * Return the related template&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;templates:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFlowMessageTemplateTest() throws Exception {
        String id = null;
        String revision = null;
        List<String> fieldsTemplate = null;
        GetTemplateResponse response = api.getFlowMessageTemplate(id, revision, fieldsTemplate);

        // TODO: test validations
    }
    /**
     * Get Flow Relationships Flow Actions
     *
     * Get all [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for flow actions associated with the given flow ID.  Flow action relationships can be sorted by the following fields, in ascending and descending order: &#x60;id&#x60;,  &#x60;status&#x60;, &#x60;created&#x60;, &#x60;updated&#x60;  Use filters to narrow your results.  Returns a maximum of 50 flow action relationships per request, which can be paginated with offset pagination. Offset pagination uses the following parameters: &#x60;page[size]&#x60; and &#x60;page[number]&#x60;.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFlowRelationshipsFlowActionsTest() throws Exception {
        String id = null;
        String revision = null;
        String filter = null;
        Integer pageSize = null;
        String sort = null;
        GetFlowFlowActionRelationshipListResponseCollection response = api.getFlowRelationshipsFlowActions(id, revision, filter, pageSize, sort);

        // TODO: test validations
    }
    /**
     * Get Flow Relationships Tags
     *
     * Return the tag IDs of all tags associated with the given flow.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60; &#x60;tags:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFlowRelationshipsTagsTest() throws Exception {
        String id = null;
        String revision = null;
        GetFlowTagRelationshipListResponseCollection response = api.getFlowRelationshipsTags(id, revision);

        // TODO: test validations
    }
    /**
     * Get Flow Tags
     *
     * Return all tags associated with the given flow ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60; &#x60;tags:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFlowTagsTest() throws Exception {
        String id = null;
        String revision = null;
        List<String> fieldsTag = null;
        GetTagResponseCollection response = api.getFlowTags(id, revision, fieldsTag);

        // TODO: test validations
    }
    /**
     * Get Flows
     *
     * Get all flows in an account.  Returns a maximum of 50 flows per request, which can be paginated with cursor-based pagination.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getFlowsTest() throws Exception {
        String revision = null;
        List<String> fieldsFlowAction = null;
        List<String> fieldsFlow = null;
        List<String> fieldsTag = null;
        String filter = null;
        List<String> include = null;
        String pageCursor = null;
        Integer pageSize = null;
        String sort = null;
        GetFlowResponseCollectionCompoundDocument response = api.getFlows(revision, fieldsFlowAction, fieldsFlow, fieldsTag, filter, include, pageCursor, pageSize, sort);

        // TODO: test validations
    }
    /**
     * Update Flow Status
     *
     * Update the status of a flow with the given flow ID, and all actions in that flow.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;flows:write&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateFlowTest() throws Exception {
        FlowUpdateQuery body = null;
        String revision = null;
        String id = null;
        PatchFlowResponse response = api.updateFlow(body, revision, id);

        // TODO: test validations
    }
}

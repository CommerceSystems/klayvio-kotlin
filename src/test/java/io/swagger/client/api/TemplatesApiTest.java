/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.GetTemplateResponse;
import io.swagger.client.model.GetTemplateResponseCollection;
import io.swagger.client.model.InlineResponse4XX;
import io.swagger.client.model.PatchTemplateResponse;
import io.swagger.client.model.PostTemplateResponse;
import io.swagger.client.model.TemplateCloneQuery;
import io.swagger.client.model.TemplateCreateQuery;
import io.swagger.client.model.TemplateRenderQuery;
import io.swagger.client.model.TemplateUpdateQuery;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for TemplatesApi
 */
@Ignore
public class TemplatesApiTest {

    private final TemplatesApi api = new TemplatesApi();

    /**
     * Create Template
     *
     * Create a new custom HTML template.  If there are 1,000 or more templates in an account, creation will fail as there is a limit of 1,000 templates that can be created via the API.  Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/reference/api_overview#sparse-fieldsets).&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;10/s&#x60;&lt;br&gt;Steady: &#x60;150/m&#x60;  **Scopes:** &#x60;templates:write&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createTemplateTest() throws Exception {
        TemplateCreateQuery body = null;
        String revision = null;
        PostTemplateResponse response = api.createTemplate(body, revision);

        // TODO: test validations
    }
    /**
     * Create Template Clone
     *
     * Create a clone of a template with the given template ID.  If there are 1,000 or more templates in an account, cloning will fail as there is a limit of 1,000 templates that can be created via the API.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;10/s&#x60;&lt;br&gt;Steady: &#x60;150/m&#x60;  **Scopes:** &#x60;templates:write&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createTemplateCloneTest() throws Exception {
        TemplateCloneQuery body = null;
        String revision = null;
        PostTemplateResponse response = api.createTemplateClone(body, revision);

        // TODO: test validations
    }
    /**
     * Create Template Render
     *
     * Render a template with the given template ID and context attribute. Returns the HTML and plain text versions of the email template.  **Request body parameters** (nested under &#x60;attributes&#x60;):  * &#x60;return_fields&#x60;: Request specific fields using [sparse fieldsets](https://developers.klaviyo.com/en/reference/api_overview#sparse-fieldsets).  * &#x60;context&#x60;: This is the context your email template will be rendered with. You must pass in a &#x60;context&#x60; object as a JSON object.  Email templates are rendered with contexts in a similar manner to Django templates. Nested template variables can be referenced via dot notation. Template variables without corresponding &#x60;context&#x60; values are treated as &#x60;FALSE&#x60; and output nothing.  Ex. &#x60;{ \&quot;name\&quot; : \&quot;George Washington\&quot;, \&quot;state\&quot; : \&quot;VA\&quot; }&#x60;&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;templates:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createTemplateRenderTest() throws Exception {
        TemplateRenderQuery body = null;
        String revision = null;
        PostTemplateResponse response = api.createTemplateRender(body, revision);

        // TODO: test validations
    }
    /**
     * Delete Template
     *
     * Delete a template with the given template ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;10/s&#x60;&lt;br&gt;Steady: &#x60;150/m&#x60;  **Scopes:** &#x60;templates:write&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteTemplateTest() throws Exception {
        String id = null;
        String revision = null;
        api.deleteTemplate(id, revision);

        // TODO: test validations
    }
    /**
     * Get Template
     *
     * Get a template with the given template ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;10/s&#x60;&lt;br&gt;Steady: &#x60;150/m&#x60;  **Scopes:** &#x60;templates:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getTemplateTest() throws Exception {
        String id = null;
        String revision = null;
        List<String> fieldsTemplate = null;
        GetTemplateResponse response = api.getTemplate(id, revision, fieldsTemplate);

        // TODO: test validations
    }
    /**
     * Get Templates
     *
     * Get all templates in an account.  Filter to request a subset of all templates. Templates can be sorted by the following fields, in ascending and descending order: &#x60;id&#x60;, &#x60;name&#x60;, &#x60;created&#x60;, &#x60;updated&#x60;  Returns a maximum of 10 results per page.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;10/s&#x60;&lt;br&gt;Steady: &#x60;150/m&#x60;  **Scopes:** &#x60;templates:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getTemplatesTest() throws Exception {
        String revision = null;
        List<String> fieldsTemplate = null;
        String filter = null;
        String pageCursor = null;
        String sort = null;
        GetTemplateResponseCollection response = api.getTemplates(revision, fieldsTemplate, filter, pageCursor, sort);

        // TODO: test validations
    }
    /**
     * Update Template
     *
     * Update a template with the given template ID. Does not currently update drag &amp; drop templates.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;10/s&#x60;&lt;br&gt;Steady: &#x60;150/m&#x60;  **Scopes:** &#x60;templates:write&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateTemplateTest() throws Exception {
        TemplateUpdateQuery body = null;
        String revision = null;
        String id = null;
        PatchTemplateResponse response = api.updateTemplate(body, revision, id);

        // TODO: test validations
    }
}

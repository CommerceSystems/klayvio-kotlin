/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import java.io.File;
import io.swagger.client.model.GetImageResponse;
import io.swagger.client.model.GetImageResponseCollection;
import io.swagger.client.model.ImageCreateQuery;
import io.swagger.client.model.ImagePartialUpdateQuery;
import io.swagger.client.model.InlineResponse4XX;
import io.swagger.client.model.PatchImageResponse;
import io.swagger.client.model.PostImageResponse;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ImagesApi
 */
@Ignore
public class ImagesApiTest {

    private final ImagesApi api = new ImagesApi();

    /**
     * Get Image
     *
     * Get the image with the given image ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;10/s&#x60;&lt;br&gt;Steady: &#x60;150/m&#x60;  **Scopes:** &#x60;images:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getImageTest() throws Exception {
        String id = null;
        String revision = null;
        List<String> fieldsImage = null;
        GetImageResponse response = api.getImage(id, revision, fieldsImage);

        // TODO: test validations
    }
    /**
     * Get Images
     *
     * Get all images in an account.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;10/s&#x60;&lt;br&gt;Steady: &#x60;150/m&#x60;  **Scopes:** &#x60;images:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getImagesTest() throws Exception {
        String revision = null;
        List<String> fieldsImage = null;
        String filter = null;
        String pageCursor = null;
        Integer pageSize = null;
        String sort = null;
        GetImageResponseCollection response = api.getImages(revision, fieldsImage, filter, pageCursor, pageSize, sort);

        // TODO: test validations
    }
    /**
     * Update Image
     *
     * Update the image with the given image ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;10/s&#x60;&lt;br&gt;Steady: &#x60;150/m&#x60;  **Scopes:** &#x60;images:write&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateImageTest() throws Exception {
        ImagePartialUpdateQuery body = null;
        String revision = null;
        String id = null;
        PatchImageResponse response = api.updateImage(body, revision, id);

        // TODO: test validations
    }
    /**
     * Upload Image From File
     *
     * Upload an image from a file.  If you want to import an image from an existing url or a data uri, use the Upload Image From URL endpoint instead.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;100/m&#x60;&lt;br&gt;Daily: &#x60;100/d&#x60;  **Scopes:** &#x60;images:write&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void uploadImageFromFileTest() throws Exception {
        File file = null;
        String name = null;
        Boolean hidden = null;
        String revision = null;
        PostImageResponse response = api.uploadImageFromFile(file, name, hidden, revision);

        // TODO: test validations
    }
    /**
     * Upload Image From URL
     *
     * Import an image from a url or data uri.  If you want to upload an image from a file, use the Upload Image From File endpoint instead.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;100/m&#x60;&lt;br&gt;Daily: &#x60;100/d&#x60;  **Scopes:** &#x60;images:write&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void uploadImageFromUrlTest() throws Exception {
        ImageCreateQuery body = null;
        String revision = null;
        PostImageResponse response = api.uploadImageFromUrl(body, revision);

        // TODO: test validations
    }
}

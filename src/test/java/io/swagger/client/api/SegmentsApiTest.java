/*
 * Klaviyo API
 * The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 *
 * OpenAPI spec version: 2024-07-15
 * Contact: developers@klaviyo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.GetSegmentListResponseCollectionCompoundDocument;
import io.swagger.client.model.GetSegmentMemberResponseCollection;
import io.swagger.client.model.GetSegmentRelationshipsResponseCollection;
import io.swagger.client.model.GetSegmentRetrieveResponseCompoundDocument;
import io.swagger.client.model.GetSegmentTagRelationshipListResponseCollection;
import io.swagger.client.model.GetTagResponseCollection;
import io.swagger.client.model.InlineResponse4XX;
import io.swagger.client.model.PatchSegmentPartialUpdateResponse;
import io.swagger.client.model.PostSegmentCreateResponse;
import io.swagger.client.model.SegmentCreateQuery;
import io.swagger.client.model.SegmentPartialUpdateQuery;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for SegmentsApi
 */
@Ignore
public class SegmentsApiTest {

    private final SegmentsApi api = new SegmentsApi();

    /**
     * Create Segment
     *
     * Create a segment.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;1/s&#x60;&lt;br&gt;Steady: &#x60;15/m&#x60;&lt;br&gt;Daily: &#x60;100/d&#x60;  **Scopes:** &#x60;segments:write&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createSegmentTest() throws Exception {
        SegmentCreateQuery body = null;
        String revision = null;
        PostSegmentCreateResponse response = api.createSegment(body, revision);

        // TODO: test validations
    }
    /**
     * Delete Segment
     *
     * Delete a segment with the given segment ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;segments:write&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteSegmentTest() throws Exception {
        String id = null;
        String revision = null;
        api.deleteSegment(id, revision);

        // TODO: test validations
    }
    /**
     * Get Segment
     *
     * Get a segment with the given segment ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;&lt;br&gt;&lt;br&gt;Rate limits when using the &#x60;additional-fields[segment]&#x3D;profile_count&#x60; parameter in your API request:&lt;br&gt;Burst: &#x60;1/s&#x60;&lt;br&gt;Steady: &#x60;15/m&#x60;&lt;br&gt;&lt;br&gt;To learn more about how the &#x60;additional-fields&#x60; parameter impacts rate limits, check out our [Rate limits, status codes, and errors](https://developers.klaviyo.com/en/v2024-07-15/docs/rate_limits_and_error_handling) guide.  **Scopes:** &#x60;segments:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getSegmentTest() throws Exception {
        String id = null;
        String revision = null;
        List<String> additionalFieldsSegment = null;
        List<String> fieldsSegment = null;
        List<String> fieldsTag = null;
        List<String> include = null;
        GetSegmentRetrieveResponseCompoundDocument response = api.getSegment(id, revision, additionalFieldsSegment, fieldsSegment, fieldsTag, include);

        // TODO: test validations
    }
    /**
     * Get Segment Profiles
     *
     * Get all profiles within a segment with the given segment ID.  Filter to request a subset of all profiles. Profiles can be filtered by &#x60;email&#x60;, &#x60;phone_number&#x60;, &#x60;push_token&#x60;, and &#x60;joined_group_at&#x60; fields. Profiles can be sorted by the following fields, in ascending and descending order: &#x60;joined_group_at&#x60;&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;profiles:read&#x60; &#x60;segments:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getSegmentProfilesTest() throws Exception {
        String id = null;
        String revision = null;
        List<String> additionalFieldsProfile = null;
        List<String> fieldsProfile = null;
        String filter = null;
        String pageCursor = null;
        Integer pageSize = null;
        String sort = null;
        GetSegmentMemberResponseCollection response = api.getSegmentProfiles(id, revision, additionalFieldsProfile, fieldsProfile, filter, pageCursor, pageSize, sort);

        // TODO: test validations
    }
    /**
     * Get Segment Relationships Profiles
     *
     * Get all profile membership [relationships](https://developers.klaviyo.com/en/reference/api_overview#relationships) for the given segment ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;profiles:read&#x60; &#x60;segments:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getSegmentRelationshipsProfilesTest() throws Exception {
        String id = null;
        String revision = null;
        String filter = null;
        String pageCursor = null;
        Integer pageSize = null;
        String sort = null;
        GetSegmentRelationshipsResponseCollection response = api.getSegmentRelationshipsProfiles(id, revision, filter, pageCursor, pageSize, sort);

        // TODO: test validations
    }
    /**
     * Get Segment Relationships Tags
     *
     * If &#x60;related_resource&#x60; is &#x60;tags&#x60;, returns the tag IDs of all tags associated with the given segment ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;segments:read&#x60; &#x60;tags:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getSegmentRelationshipsTagsTest() throws Exception {
        String id = null;
        String revision = null;
        GetSegmentTagRelationshipListResponseCollection response = api.getSegmentRelationshipsTags(id, revision);

        // TODO: test validations
    }
    /**
     * Get Segment Tags
     *
     * Return all tags associated with the given segment ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;3/s&#x60;&lt;br&gt;Steady: &#x60;60/m&#x60;  **Scopes:** &#x60;segments:read&#x60; &#x60;tags:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getSegmentTagsTest() throws Exception {
        String id = null;
        String revision = null;
        List<String> fieldsTag = null;
        GetTagResponseCollection response = api.getSegmentTags(id, revision, fieldsTag);

        // TODO: test validations
    }
    /**
     * Get Segments
     *
     * Get all segments in an account.  Filter to request a subset of all segments. Segments can be filtered by &#x60;name&#x60;, &#x60;created&#x60;, and &#x60;updated&#x60; fields.  Returns a maximum of 10 results per page.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;75/s&#x60;&lt;br&gt;Steady: &#x60;700/m&#x60;  **Scopes:** &#x60;segments:read&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getSegmentsTest() throws Exception {
        String revision = null;
        List<String> fieldsSegment = null;
        List<String> fieldsTag = null;
        String filter = null;
        List<String> include = null;
        String pageCursor = null;
        String sort = null;
        GetSegmentListResponseCollectionCompoundDocument response = api.getSegments(revision, fieldsSegment, fieldsTag, filter, include, pageCursor, sort);

        // TODO: test validations
    }
    /**
     * Update Segment
     *
     * Update a segment with the given segment ID.&lt;br&gt;&lt;br&gt;*Rate limits*:&lt;br&gt;Burst: &#x60;1/s&#x60;&lt;br&gt;Steady: &#x60;15/m&#x60;&lt;br&gt;Daily: &#x60;100/d&#x60;  **Scopes:** &#x60;segments:write&#x60;
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateSegmentTest() throws Exception {
        SegmentPartialUpdateQuery body = null;
        String revision = null;
        String id = null;
        PatchSegmentPartialUpdateResponse response = api.updateSegment(body, revision, id);

        // TODO: test validations
    }
}
